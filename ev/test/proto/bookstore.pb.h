// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bookstore.proto

#ifndef PROTOBUF_bookstore_2eproto__INCLUDED
#define PROTOBUF_bookstore_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_bookstore_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[13];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsShelfImpl();
void InitDefaultsShelf();
void InitDefaultsBookImpl();
void InitDefaultsBook();
void InitDefaultsAuthorImpl();
void InitDefaultsAuthor();
void InitDefaultsListShelvesResponseImpl();
void InitDefaultsListShelvesResponse();
void InitDefaultsCreateShelfRequestImpl();
void InitDefaultsCreateShelfRequest();
void InitDefaultsGetShelfRequestImpl();
void InitDefaultsGetShelfRequest();
void InitDefaultsDeleteShelfRequestImpl();
void InitDefaultsDeleteShelfRequest();
void InitDefaultsListBooksRequestImpl();
void InitDefaultsListBooksRequest();
void InitDefaultsCreateBookRequestImpl();
void InitDefaultsCreateBookRequest();
void InitDefaultsGetBookRequestImpl();
void InitDefaultsGetBookRequest();
void InitDefaultsUpdateBookRequestImpl();
void InitDefaultsUpdateBookRequest();
void InitDefaultsDeleteBookRequestImpl();
void InitDefaultsDeleteBookRequest();
void InitDefaultsGetAuthorRequestImpl();
void InitDefaultsGetAuthorRequest();
inline void InitDefaults() {
  InitDefaultsShelf();
  InitDefaultsBook();
  InitDefaultsAuthor();
  InitDefaultsListShelvesResponse();
  InitDefaultsCreateShelfRequest();
  InitDefaultsGetShelfRequest();
  InitDefaultsDeleteShelfRequest();
  InitDefaultsListBooksRequest();
  InitDefaultsCreateBookRequest();
  InitDefaultsGetBookRequest();
  InitDefaultsUpdateBookRequest();
  InitDefaultsDeleteBookRequest();
  InitDefaultsGetAuthorRequest();
}
}  // namespace protobuf_bookstore_2eproto
namespace bookstore {
class Author;
class AuthorDefaultTypeInternal;
extern AuthorDefaultTypeInternal _Author_default_instance_;
class Book;
class BookDefaultTypeInternal;
extern BookDefaultTypeInternal _Book_default_instance_;
class CreateBookRequest;
class CreateBookRequestDefaultTypeInternal;
extern CreateBookRequestDefaultTypeInternal _CreateBookRequest_default_instance_;
class CreateShelfRequest;
class CreateShelfRequestDefaultTypeInternal;
extern CreateShelfRequestDefaultTypeInternal _CreateShelfRequest_default_instance_;
class DeleteBookRequest;
class DeleteBookRequestDefaultTypeInternal;
extern DeleteBookRequestDefaultTypeInternal _DeleteBookRequest_default_instance_;
class DeleteShelfRequest;
class DeleteShelfRequestDefaultTypeInternal;
extern DeleteShelfRequestDefaultTypeInternal _DeleteShelfRequest_default_instance_;
class GetAuthorRequest;
class GetAuthorRequestDefaultTypeInternal;
extern GetAuthorRequestDefaultTypeInternal _GetAuthorRequest_default_instance_;
class GetBookRequest;
class GetBookRequestDefaultTypeInternal;
extern GetBookRequestDefaultTypeInternal _GetBookRequest_default_instance_;
class GetShelfRequest;
class GetShelfRequestDefaultTypeInternal;
extern GetShelfRequestDefaultTypeInternal _GetShelfRequest_default_instance_;
class ListBooksRequest;
class ListBooksRequestDefaultTypeInternal;
extern ListBooksRequestDefaultTypeInternal _ListBooksRequest_default_instance_;
class ListShelvesResponse;
class ListShelvesResponseDefaultTypeInternal;
extern ListShelvesResponseDefaultTypeInternal _ListShelvesResponse_default_instance_;
class Shelf;
class ShelfDefaultTypeInternal;
extern ShelfDefaultTypeInternal _Shelf_default_instance_;
class UpdateBookRequest;
class UpdateBookRequestDefaultTypeInternal;
extern UpdateBookRequestDefaultTypeInternal _UpdateBookRequest_default_instance_;
}  // namespace bookstore
namespace bookstore {

enum Author_Gender {
  Author_Gender_UNKNOWN = 0,
  Author_Gender_MALE = 1,
  Author_Gender_FEMALE = 2,
  Author_Gender_Author_Gender_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Author_Gender_Author_Gender_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Author_Gender_IsValid(int value);
const Author_Gender Author_Gender_Gender_MIN = Author_Gender_UNKNOWN;
const Author_Gender Author_Gender_Gender_MAX = Author_Gender_FEMALE;
const int Author_Gender_Gender_ARRAYSIZE = Author_Gender_Gender_MAX + 1;

const ::google::protobuf::EnumDescriptor* Author_Gender_descriptor();
inline const ::std::string& Author_Gender_Name(Author_Gender value) {
  return ::google::protobuf::internal::NameOfEnum(
    Author_Gender_descriptor(), value);
}
inline bool Author_Gender_Parse(
    const ::std::string& name, Author_Gender* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Author_Gender>(
    Author_Gender_descriptor(), name, value);
}
// ===================================================================

class Shelf : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.Shelf) */ {
 public:
  Shelf();
  virtual ~Shelf();

  Shelf(const Shelf& from);

  inline Shelf& operator=(const Shelf& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Shelf(Shelf&& from) noexcept
    : Shelf() {
    *this = ::std::move(from);
  }

  inline Shelf& operator=(Shelf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Shelf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Shelf* internal_default_instance() {
    return reinterpret_cast<const Shelf*>(
               &_Shelf_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Shelf* other);
  friend void swap(Shelf& a, Shelf& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Shelf* New() const PROTOBUF_FINAL { return New(NULL); }

  Shelf* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shelf& from);
  void MergeFrom(const Shelf& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shelf* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string theme = 2;
  void clear_theme();
  static const int kThemeFieldNumber = 2;
  const ::std::string& theme() const;
  void set_theme(const ::std::string& value);
  #if LANG_CXX11
  void set_theme(::std::string&& value);
  #endif
  void set_theme(const char* value);
  void set_theme(const char* value, size_t size);
  ::std::string* mutable_theme();
  ::std::string* release_theme();
  void set_allocated_theme(::std::string* theme);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.Shelf)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr theme_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsShelfImpl();
};
// -------------------------------------------------------------------

class Book : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.Book) */ {
 public:
  Book();
  virtual ~Book();

  Book(const Book& from);

  inline Book& operator=(const Book& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Book(Book&& from) noexcept
    : Book() {
    *this = ::std::move(from);
  }

  inline Book& operator=(Book&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Book& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Book* internal_default_instance() {
    return reinterpret_cast<const Book*>(
               &_Book_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Book* other);
  friend void swap(Book& a, Book& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Book* New() const PROTOBUF_FINAL { return New(NULL); }

  Book* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Book& from);
  void MergeFrom(const Book& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Book* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string quotes = 4;
  int quotes_size() const;
  void clear_quotes();
  static const int kQuotesFieldNumber = 4;
  const ::std::string& quotes(int index) const;
  ::std::string* mutable_quotes(int index);
  void set_quotes(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_quotes(int index, ::std::string&& value);
  #endif
  void set_quotes(int index, const char* value);
  void set_quotes(int index, const char* value, size_t size);
  ::std::string* add_quotes();
  void add_quotes(const ::std::string& value);
  #if LANG_CXX11
  void add_quotes(::std::string&& value);
  #endif
  void add_quotes(const char* value);
  void add_quotes(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& quotes() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_quotes();

  // string author = 2;
  void clear_author();
  static const int kAuthorFieldNumber = 2;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.Book)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> quotes_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsBookImpl();
};
// -------------------------------------------------------------------

class Author : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.Author) */ {
 public:
  Author();
  virtual ~Author();

  Author(const Author& from);

  inline Author& operator=(const Author& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Author(Author&& from) noexcept
    : Author() {
    *this = ::std::move(from);
  }

  inline Author& operator=(Author&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Author& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Author* internal_default_instance() {
    return reinterpret_cast<const Author*>(
               &_Author_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Author* other);
  friend void swap(Author& a, Author& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Author* New() const PROTOBUF_FINAL { return New(NULL); }

  Author* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Author& from);
  void MergeFrom(const Author& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Author* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Author_Gender Gender;
  static const Gender UNKNOWN =
    Author_Gender_UNKNOWN;
  static const Gender MALE =
    Author_Gender_MALE;
  static const Gender FEMALE =
    Author_Gender_FEMALE;
  static inline bool Gender_IsValid(int value) {
    return Author_Gender_IsValid(value);
  }
  static const Gender Gender_MIN =
    Author_Gender_Gender_MIN;
  static const Gender Gender_MAX =
    Author_Gender_Gender_MAX;
  static const int Gender_ARRAYSIZE =
    Author_Gender_Gender_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Gender_descriptor() {
    return Author_Gender_descriptor();
  }
  static inline const ::std::string& Gender_Name(Gender value) {
    return Author_Gender_Name(value);
  }
  static inline bool Gender_Parse(const ::std::string& name,
      Gender* value) {
    return Author_Gender_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string first_name = 3;
  void clear_first_name();
  static const int kFirstNameFieldNumber = 3;
  const ::std::string& first_name() const;
  void set_first_name(const ::std::string& value);
  #if LANG_CXX11
  void set_first_name(::std::string&& value);
  #endif
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  ::std::string* mutable_first_name();
  ::std::string* release_first_name();
  void set_allocated_first_name(::std::string* first_name);

  // string last_name = 4[json_name = "lname"];
  void clear_last_name();
  static const int kLastNameFieldNumber = 4;
  const ::std::string& last_name() const;
  void set_last_name(const ::std::string& value);
  #if LANG_CXX11
  void set_last_name(::std::string&& value);
  #endif
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  ::std::string* mutable_last_name();
  ::std::string* release_last_name();
  void set_allocated_last_name(::std::string* last_name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // .bookstore.Author.Gender gender = 2;
  void clear_gender();
  static const int kGenderFieldNumber = 2;
  ::bookstore::Author_Gender gender() const;
  void set_gender(::bookstore::Author_Gender value);

  // @@protoc_insertion_point(class_scope:bookstore.Author)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr first_name_;
  ::google::protobuf::internal::ArenaStringPtr last_name_;
  ::google::protobuf::int64 id_;
  int gender_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsAuthorImpl();
};
// -------------------------------------------------------------------

class ListShelvesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.ListShelvesResponse) */ {
 public:
  ListShelvesResponse();
  virtual ~ListShelvesResponse();

  ListShelvesResponse(const ListShelvesResponse& from);

  inline ListShelvesResponse& operator=(const ListShelvesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListShelvesResponse(ListShelvesResponse&& from) noexcept
    : ListShelvesResponse() {
    *this = ::std::move(from);
  }

  inline ListShelvesResponse& operator=(ListShelvesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListShelvesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListShelvesResponse* internal_default_instance() {
    return reinterpret_cast<const ListShelvesResponse*>(
               &_ListShelvesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ListShelvesResponse* other);
  friend void swap(ListShelvesResponse& a, ListShelvesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListShelvesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ListShelvesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListShelvesResponse& from);
  void MergeFrom(const ListShelvesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListShelvesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bookstore.Shelf shelves = 1;
  int shelves_size() const;
  void clear_shelves();
  static const int kShelvesFieldNumber = 1;
  const ::bookstore::Shelf& shelves(int index) const;
  ::bookstore::Shelf* mutable_shelves(int index);
  ::bookstore::Shelf* add_shelves();
  ::google::protobuf::RepeatedPtrField< ::bookstore::Shelf >*
      mutable_shelves();
  const ::google::protobuf::RepeatedPtrField< ::bookstore::Shelf >&
      shelves() const;

  // @@protoc_insertion_point(class_scope:bookstore.ListShelvesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bookstore::Shelf > shelves_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsListShelvesResponseImpl();
};
// -------------------------------------------------------------------

class CreateShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.CreateShelfRequest) */ {
 public:
  CreateShelfRequest();
  virtual ~CreateShelfRequest();

  CreateShelfRequest(const CreateShelfRequest& from);

  inline CreateShelfRequest& operator=(const CreateShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateShelfRequest(CreateShelfRequest&& from) noexcept
    : CreateShelfRequest() {
    *this = ::std::move(from);
  }

  inline CreateShelfRequest& operator=(CreateShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateShelfRequest* internal_default_instance() {
    return reinterpret_cast<const CreateShelfRequest*>(
               &_CreateShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CreateShelfRequest* other);
  friend void swap(CreateShelfRequest& a, CreateShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateShelfRequest& from);
  void MergeFrom(const CreateShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bookstore.Shelf shelf = 1;
  bool has_shelf() const;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  const ::bookstore::Shelf& shelf() const;
  ::bookstore::Shelf* release_shelf();
  ::bookstore::Shelf* mutable_shelf();
  void set_allocated_shelf(::bookstore::Shelf* shelf);

  // @@protoc_insertion_point(class_scope:bookstore.CreateShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bookstore::Shelf* shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsCreateShelfRequestImpl();
};
// -------------------------------------------------------------------

class GetShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.GetShelfRequest) */ {
 public:
  GetShelfRequest();
  virtual ~GetShelfRequest();

  GetShelfRequest(const GetShelfRequest& from);

  inline GetShelfRequest& operator=(const GetShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetShelfRequest(GetShelfRequest&& from) noexcept
    : GetShelfRequest() {
    *this = ::std::move(from);
  }

  inline GetShelfRequest& operator=(GetShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetShelfRequest* internal_default_instance() {
    return reinterpret_cast<const GetShelfRequest*>(
               &_GetShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetShelfRequest* other);
  friend void swap(GetShelfRequest& a, GetShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetShelfRequest& from);
  void MergeFrom(const GetShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.GetShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsGetShelfRequestImpl();
};
// -------------------------------------------------------------------

class DeleteShelfRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.DeleteShelfRequest) */ {
 public:
  DeleteShelfRequest();
  virtual ~DeleteShelfRequest();

  DeleteShelfRequest(const DeleteShelfRequest& from);

  inline DeleteShelfRequest& operator=(const DeleteShelfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteShelfRequest(DeleteShelfRequest&& from) noexcept
    : DeleteShelfRequest() {
    *this = ::std::move(from);
  }

  inline DeleteShelfRequest& operator=(DeleteShelfRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteShelfRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteShelfRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteShelfRequest*>(
               &_DeleteShelfRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DeleteShelfRequest* other);
  friend void swap(DeleteShelfRequest& a, DeleteShelfRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteShelfRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteShelfRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteShelfRequest& from);
  void MergeFrom(const DeleteShelfRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteShelfRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.DeleteShelfRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsDeleteShelfRequestImpl();
};
// -------------------------------------------------------------------

class ListBooksRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.ListBooksRequest) */ {
 public:
  ListBooksRequest();
  virtual ~ListBooksRequest();

  ListBooksRequest(const ListBooksRequest& from);

  inline ListBooksRequest& operator=(const ListBooksRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListBooksRequest(ListBooksRequest&& from) noexcept
    : ListBooksRequest() {
    *this = ::std::move(from);
  }

  inline ListBooksRequest& operator=(ListBooksRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListBooksRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListBooksRequest* internal_default_instance() {
    return reinterpret_cast<const ListBooksRequest*>(
               &_ListBooksRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ListBooksRequest* other);
  friend void swap(ListBooksRequest& a, ListBooksRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListBooksRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ListBooksRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListBooksRequest& from);
  void MergeFrom(const ListBooksRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListBooksRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.ListBooksRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsListBooksRequestImpl();
};
// -------------------------------------------------------------------

class CreateBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.CreateBookRequest) */ {
 public:
  CreateBookRequest();
  virtual ~CreateBookRequest();

  CreateBookRequest(const CreateBookRequest& from);

  inline CreateBookRequest& operator=(const CreateBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateBookRequest(CreateBookRequest&& from) noexcept
    : CreateBookRequest() {
    *this = ::std::move(from);
  }

  inline CreateBookRequest& operator=(CreateBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateBookRequest* internal_default_instance() {
    return reinterpret_cast<const CreateBookRequest*>(
               &_CreateBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CreateBookRequest* other);
  friend void swap(CreateBookRequest& a, CreateBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateBookRequest& from);
  void MergeFrom(const CreateBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bookstore.Book book = 2;
  bool has_book() const;
  void clear_book();
  static const int kBookFieldNumber = 2;
  const ::bookstore::Book& book() const;
  ::bookstore::Book* release_book();
  ::bookstore::Book* mutable_book();
  void set_allocated_book(::bookstore::Book* book);

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.CreateBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bookstore::Book* book_;
  ::google::protobuf::int64 shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsCreateBookRequestImpl();
};
// -------------------------------------------------------------------

class GetBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.GetBookRequest) */ {
 public:
  GetBookRequest();
  virtual ~GetBookRequest();

  GetBookRequest(const GetBookRequest& from);

  inline GetBookRequest& operator=(const GetBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBookRequest(GetBookRequest&& from) noexcept
    : GetBookRequest() {
    *this = ::std::move(from);
  }

  inline GetBookRequest& operator=(GetBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetBookRequest* internal_default_instance() {
    return reinterpret_cast<const GetBookRequest*>(
               &_GetBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetBookRequest* other);
  friend void swap(GetBookRequest& a, GetBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBookRequest& from);
  void MergeFrom(const GetBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // int64 book = 2;
  void clear_book();
  static const int kBookFieldNumber = 2;
  ::google::protobuf::int64 book() const;
  void set_book(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.GetBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shelf_;
  ::google::protobuf::int64 book_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsGetBookRequestImpl();
};
// -------------------------------------------------------------------

class UpdateBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.UpdateBookRequest) */ {
 public:
  UpdateBookRequest();
  virtual ~UpdateBookRequest();

  UpdateBookRequest(const UpdateBookRequest& from);

  inline UpdateBookRequest& operator=(const UpdateBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateBookRequest(UpdateBookRequest&& from) noexcept
    : UpdateBookRequest() {
    *this = ::std::move(from);
  }

  inline UpdateBookRequest& operator=(UpdateBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateBookRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateBookRequest*>(
               &_UpdateBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(UpdateBookRequest* other);
  friend void swap(UpdateBookRequest& a, UpdateBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateBookRequest& from);
  void MergeFrom(const UpdateBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bookstore.Book book = 2;
  bool has_book() const;
  void clear_book();
  static const int kBookFieldNumber = 2;
  const ::bookstore::Book& book() const;
  ::bookstore::Book* release_book();
  ::bookstore::Book* mutable_book();
  void set_allocated_book(::bookstore::Book* book);

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.UpdateBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bookstore::Book* book_;
  ::google::protobuf::int64 shelf_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsUpdateBookRequestImpl();
};
// -------------------------------------------------------------------

class DeleteBookRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.DeleteBookRequest) */ {
 public:
  DeleteBookRequest();
  virtual ~DeleteBookRequest();

  DeleteBookRequest(const DeleteBookRequest& from);

  inline DeleteBookRequest& operator=(const DeleteBookRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteBookRequest(DeleteBookRequest&& from) noexcept
    : DeleteBookRequest() {
    *this = ::std::move(from);
  }

  inline DeleteBookRequest& operator=(DeleteBookRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteBookRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteBookRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteBookRequest*>(
               &_DeleteBookRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DeleteBookRequest* other);
  friend void swap(DeleteBookRequest& a, DeleteBookRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteBookRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteBookRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteBookRequest& from);
  void MergeFrom(const DeleteBookRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteBookRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 shelf = 1;
  void clear_shelf();
  static const int kShelfFieldNumber = 1;
  ::google::protobuf::int64 shelf() const;
  void set_shelf(::google::protobuf::int64 value);

  // int64 book = 2;
  void clear_book();
  static const int kBookFieldNumber = 2;
  ::google::protobuf::int64 book() const;
  void set_book(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.DeleteBookRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 shelf_;
  ::google::protobuf::int64 book_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsDeleteBookRequestImpl();
};
// -------------------------------------------------------------------

class GetAuthorRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bookstore.GetAuthorRequest) */ {
 public:
  GetAuthorRequest();
  virtual ~GetAuthorRequest();

  GetAuthorRequest(const GetAuthorRequest& from);

  inline GetAuthorRequest& operator=(const GetAuthorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAuthorRequest(GetAuthorRequest&& from) noexcept
    : GetAuthorRequest() {
    *this = ::std::move(from);
  }

  inline GetAuthorRequest& operator=(GetAuthorRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthorRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAuthorRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthorRequest*>(
               &_GetAuthorRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetAuthorRequest* other);
  friend void swap(GetAuthorRequest& a, GetAuthorRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAuthorRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAuthorRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAuthorRequest& from);
  void MergeFrom(const GetAuthorRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAuthorRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 author = 1;
  void clear_author();
  static const int kAuthorFieldNumber = 1;
  ::google::protobuf::int64 author() const;
  void set_author(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:bookstore.GetAuthorRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 author_;
  mutable int _cached_size_;
  friend struct ::protobuf_bookstore_2eproto::TableStruct;
  friend void ::protobuf_bookstore_2eproto::InitDefaultsGetAuthorRequestImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Shelf

// int64 id = 1;
inline void Shelf::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Shelf::id() const {
  // @@protoc_insertion_point(field_get:bookstore.Shelf.id)
  return id_;
}
inline void Shelf::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bookstore.Shelf.id)
}

// string theme = 2;
inline void Shelf::clear_theme() {
  theme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shelf::theme() const {
  // @@protoc_insertion_point(field_get:bookstore.Shelf.theme)
  return theme_.GetNoArena();
}
inline void Shelf::set_theme(const ::std::string& value) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bookstore.Shelf.theme)
}
#if LANG_CXX11
inline void Shelf::set_theme(::std::string&& value) {
  
  theme_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bookstore.Shelf.theme)
}
#endif
inline void Shelf::set_theme(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bookstore.Shelf.theme)
}
inline void Shelf::set_theme(const char* value, size_t size) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bookstore.Shelf.theme)
}
inline ::std::string* Shelf::mutable_theme() {
  
  // @@protoc_insertion_point(field_mutable:bookstore.Shelf.theme)
  return theme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shelf::release_theme() {
  // @@protoc_insertion_point(field_release:bookstore.Shelf.theme)
  
  return theme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shelf::set_allocated_theme(::std::string* theme) {
  if (theme != NULL) {
    
  } else {
    
  }
  theme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), theme);
  // @@protoc_insertion_point(field_set_allocated:bookstore.Shelf.theme)
}

// -------------------------------------------------------------------

// Book

// int64 id = 1;
inline void Book::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Book::id() const {
  // @@protoc_insertion_point(field_get:bookstore.Book.id)
  return id_;
}
inline void Book::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bookstore.Book.id)
}

// string author = 2;
inline void Book::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::author() const {
  // @@protoc_insertion_point(field_get:bookstore.Book.author)
  return author_.GetNoArena();
}
inline void Book::set_author(const ::std::string& value) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bookstore.Book.author)
}
#if LANG_CXX11
inline void Book::set_author(::std::string&& value) {
  
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bookstore.Book.author)
}
#endif
inline void Book::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bookstore.Book.author)
}
inline void Book::set_author(const char* value, size_t size) {
  
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bookstore.Book.author)
}
inline ::std::string* Book::mutable_author() {
  
  // @@protoc_insertion_point(field_mutable:bookstore.Book.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_author() {
  // @@protoc_insertion_point(field_release:bookstore.Book.author)
  
  return author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    
  } else {
    
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:bookstore.Book.author)
}

// string title = 3;
inline void Book::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Book::title() const {
  // @@protoc_insertion_point(field_get:bookstore.Book.title)
  return title_.GetNoArena();
}
inline void Book::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bookstore.Book.title)
}
#if LANG_CXX11
inline void Book::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bookstore.Book.title)
}
#endif
inline void Book::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bookstore.Book.title)
}
inline void Book::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bookstore.Book.title)
}
inline ::std::string* Book::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:bookstore.Book.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Book::release_title() {
  // @@protoc_insertion_point(field_release:bookstore.Book.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Book::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:bookstore.Book.title)
}

// repeated string quotes = 4;
inline int Book::quotes_size() const {
  return quotes_.size();
}
inline void Book::clear_quotes() {
  quotes_.Clear();
}
inline const ::std::string& Book::quotes(int index) const {
  // @@protoc_insertion_point(field_get:bookstore.Book.quotes)
  return quotes_.Get(index);
}
inline ::std::string* Book::mutable_quotes(int index) {
  // @@protoc_insertion_point(field_mutable:bookstore.Book.quotes)
  return quotes_.Mutable(index);
}
inline void Book::set_quotes(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bookstore.Book.quotes)
  quotes_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Book::set_quotes(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bookstore.Book.quotes)
  quotes_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Book::set_quotes(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  quotes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bookstore.Book.quotes)
}
inline void Book::set_quotes(int index, const char* value, size_t size) {
  quotes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bookstore.Book.quotes)
}
inline ::std::string* Book::add_quotes() {
  // @@protoc_insertion_point(field_add_mutable:bookstore.Book.quotes)
  return quotes_.Add();
}
inline void Book::add_quotes(const ::std::string& value) {
  quotes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bookstore.Book.quotes)
}
#if LANG_CXX11
inline void Book::add_quotes(::std::string&& value) {
  quotes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:bookstore.Book.quotes)
}
#endif
inline void Book::add_quotes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  quotes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bookstore.Book.quotes)
}
inline void Book::add_quotes(const char* value, size_t size) {
  quotes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bookstore.Book.quotes)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Book::quotes() const {
  // @@protoc_insertion_point(field_list:bookstore.Book.quotes)
  return quotes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Book::mutable_quotes() {
  // @@protoc_insertion_point(field_mutable_list:bookstore.Book.quotes)
  return &quotes_;
}

// -------------------------------------------------------------------

// Author

// int64 id = 1;
inline void Author::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Author::id() const {
  // @@protoc_insertion_point(field_get:bookstore.Author.id)
  return id_;
}
inline void Author::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:bookstore.Author.id)
}

// .bookstore.Author.Gender gender = 2;
inline void Author::clear_gender() {
  gender_ = 0;
}
inline ::bookstore::Author_Gender Author::gender() const {
  // @@protoc_insertion_point(field_get:bookstore.Author.gender)
  return static_cast< ::bookstore::Author_Gender >(gender_);
}
inline void Author::set_gender(::bookstore::Author_Gender value) {
  
  gender_ = value;
  // @@protoc_insertion_point(field_set:bookstore.Author.gender)
}

// string first_name = 3;
inline void Author::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Author::first_name() const {
  // @@protoc_insertion_point(field_get:bookstore.Author.first_name)
  return first_name_.GetNoArena();
}
inline void Author::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bookstore.Author.first_name)
}
#if LANG_CXX11
inline void Author::set_first_name(::std::string&& value) {
  
  first_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bookstore.Author.first_name)
}
#endif
inline void Author::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bookstore.Author.first_name)
}
inline void Author::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bookstore.Author.first_name)
}
inline ::std::string* Author::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:bookstore.Author.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Author::release_first_name() {
  // @@protoc_insertion_point(field_release:bookstore.Author.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Author::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:bookstore.Author.first_name)
}

// string last_name = 4[json_name = "lname"];
inline void Author::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Author::last_name() const {
  // @@protoc_insertion_point(field_get:bookstore.Author.last_name)
  return last_name_.GetNoArena();
}
inline void Author::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bookstore.Author.last_name)
}
#if LANG_CXX11
inline void Author::set_last_name(::std::string&& value) {
  
  last_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bookstore.Author.last_name)
}
#endif
inline void Author::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bookstore.Author.last_name)
}
inline void Author::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bookstore.Author.last_name)
}
inline ::std::string* Author::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:bookstore.Author.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Author::release_last_name() {
  // @@protoc_insertion_point(field_release:bookstore.Author.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Author::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:bookstore.Author.last_name)
}

// -------------------------------------------------------------------

// ListShelvesResponse

// repeated .bookstore.Shelf shelves = 1;
inline int ListShelvesResponse::shelves_size() const {
  return shelves_.size();
}
inline void ListShelvesResponse::clear_shelves() {
  shelves_.Clear();
}
inline const ::bookstore::Shelf& ListShelvesResponse::shelves(int index) const {
  // @@protoc_insertion_point(field_get:bookstore.ListShelvesResponse.shelves)
  return shelves_.Get(index);
}
inline ::bookstore::Shelf* ListShelvesResponse::mutable_shelves(int index) {
  // @@protoc_insertion_point(field_mutable:bookstore.ListShelvesResponse.shelves)
  return shelves_.Mutable(index);
}
inline ::bookstore::Shelf* ListShelvesResponse::add_shelves() {
  // @@protoc_insertion_point(field_add:bookstore.ListShelvesResponse.shelves)
  return shelves_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bookstore::Shelf >*
ListShelvesResponse::mutable_shelves() {
  // @@protoc_insertion_point(field_mutable_list:bookstore.ListShelvesResponse.shelves)
  return &shelves_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bookstore::Shelf >&
ListShelvesResponse::shelves() const {
  // @@protoc_insertion_point(field_list:bookstore.ListShelvesResponse.shelves)
  return shelves_;
}

// -------------------------------------------------------------------

// CreateShelfRequest

// .bookstore.Shelf shelf = 1;
inline bool CreateShelfRequest::has_shelf() const {
  return this != internal_default_instance() && shelf_ != NULL;
}
inline void CreateShelfRequest::clear_shelf() {
  if (GetArenaNoVirtual() == NULL && shelf_ != NULL) {
    delete shelf_;
  }
  shelf_ = NULL;
}
inline const ::bookstore::Shelf& CreateShelfRequest::shelf() const {
  const ::bookstore::Shelf* p = shelf_;
  // @@protoc_insertion_point(field_get:bookstore.CreateShelfRequest.shelf)
  return p != NULL ? *p : *reinterpret_cast<const ::bookstore::Shelf*>(
      &::bookstore::_Shelf_default_instance_);
}
inline ::bookstore::Shelf* CreateShelfRequest::release_shelf() {
  // @@protoc_insertion_point(field_release:bookstore.CreateShelfRequest.shelf)
  
  ::bookstore::Shelf* temp = shelf_;
  shelf_ = NULL;
  return temp;
}
inline ::bookstore::Shelf* CreateShelfRequest::mutable_shelf() {
  
  if (shelf_ == NULL) {
    shelf_ = new ::bookstore::Shelf;
  }
  // @@protoc_insertion_point(field_mutable:bookstore.CreateShelfRequest.shelf)
  return shelf_;
}
inline void CreateShelfRequest::set_allocated_shelf(::bookstore::Shelf* shelf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete shelf_;
  }
  if (shelf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      shelf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, shelf, submessage_arena);
    }
    
  } else {
    
  }
  shelf_ = shelf;
  // @@protoc_insertion_point(field_set_allocated:bookstore.CreateShelfRequest.shelf)
}

// -------------------------------------------------------------------

// GetShelfRequest

// int64 shelf = 1;
inline void GetShelfRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetShelfRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.GetShelfRequest.shelf)
  return shelf_;
}
inline void GetShelfRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.GetShelfRequest.shelf)
}

// -------------------------------------------------------------------

// DeleteShelfRequest

// int64 shelf = 1;
inline void DeleteShelfRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteShelfRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.DeleteShelfRequest.shelf)
  return shelf_;
}
inline void DeleteShelfRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.DeleteShelfRequest.shelf)
}

// -------------------------------------------------------------------

// ListBooksRequest

// int64 shelf = 1;
inline void ListBooksRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListBooksRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.ListBooksRequest.shelf)
  return shelf_;
}
inline void ListBooksRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.ListBooksRequest.shelf)
}

// -------------------------------------------------------------------

// CreateBookRequest

// int64 shelf = 1;
inline void CreateBookRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateBookRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.CreateBookRequest.shelf)
  return shelf_;
}
inline void CreateBookRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.CreateBookRequest.shelf)
}

// .bookstore.Book book = 2;
inline bool CreateBookRequest::has_book() const {
  return this != internal_default_instance() && book_ != NULL;
}
inline void CreateBookRequest::clear_book() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
}
inline const ::bookstore::Book& CreateBookRequest::book() const {
  const ::bookstore::Book* p = book_;
  // @@protoc_insertion_point(field_get:bookstore.CreateBookRequest.book)
  return p != NULL ? *p : *reinterpret_cast<const ::bookstore::Book*>(
      &::bookstore::_Book_default_instance_);
}
inline ::bookstore::Book* CreateBookRequest::release_book() {
  // @@protoc_insertion_point(field_release:bookstore.CreateBookRequest.book)
  
  ::bookstore::Book* temp = book_;
  book_ = NULL;
  return temp;
}
inline ::bookstore::Book* CreateBookRequest::mutable_book() {
  
  if (book_ == NULL) {
    book_ = new ::bookstore::Book;
  }
  // @@protoc_insertion_point(field_mutable:bookstore.CreateBookRequest.book)
  return book_;
}
inline void CreateBookRequest::set_allocated_book(::bookstore::Book* book) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete book_;
  }
  if (book) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      book = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    
  } else {
    
  }
  book_ = book;
  // @@protoc_insertion_point(field_set_allocated:bookstore.CreateBookRequest.book)
}

// -------------------------------------------------------------------

// GetBookRequest

// int64 shelf = 1;
inline void GetBookRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetBookRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.GetBookRequest.shelf)
  return shelf_;
}
inline void GetBookRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.GetBookRequest.shelf)
}

// int64 book = 2;
inline void GetBookRequest::clear_book() {
  book_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetBookRequest::book() const {
  // @@protoc_insertion_point(field_get:bookstore.GetBookRequest.book)
  return book_;
}
inline void GetBookRequest::set_book(::google::protobuf::int64 value) {
  
  book_ = value;
  // @@protoc_insertion_point(field_set:bookstore.GetBookRequest.book)
}

// -------------------------------------------------------------------

// UpdateBookRequest

// int64 shelf = 1;
inline void UpdateBookRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UpdateBookRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.UpdateBookRequest.shelf)
  return shelf_;
}
inline void UpdateBookRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.UpdateBookRequest.shelf)
}

// .bookstore.Book book = 2;
inline bool UpdateBookRequest::has_book() const {
  return this != internal_default_instance() && book_ != NULL;
}
inline void UpdateBookRequest::clear_book() {
  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
}
inline const ::bookstore::Book& UpdateBookRequest::book() const {
  const ::bookstore::Book* p = book_;
  // @@protoc_insertion_point(field_get:bookstore.UpdateBookRequest.book)
  return p != NULL ? *p : *reinterpret_cast<const ::bookstore::Book*>(
      &::bookstore::_Book_default_instance_);
}
inline ::bookstore::Book* UpdateBookRequest::release_book() {
  // @@protoc_insertion_point(field_release:bookstore.UpdateBookRequest.book)
  
  ::bookstore::Book* temp = book_;
  book_ = NULL;
  return temp;
}
inline ::bookstore::Book* UpdateBookRequest::mutable_book() {
  
  if (book_ == NULL) {
    book_ = new ::bookstore::Book;
  }
  // @@protoc_insertion_point(field_mutable:bookstore.UpdateBookRequest.book)
  return book_;
}
inline void UpdateBookRequest::set_allocated_book(::bookstore::Book* book) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete book_;
  }
  if (book) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      book = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, book, submessage_arena);
    }
    
  } else {
    
  }
  book_ = book;
  // @@protoc_insertion_point(field_set_allocated:bookstore.UpdateBookRequest.book)
}

// -------------------------------------------------------------------

// DeleteBookRequest

// int64 shelf = 1;
inline void DeleteBookRequest::clear_shelf() {
  shelf_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteBookRequest::shelf() const {
  // @@protoc_insertion_point(field_get:bookstore.DeleteBookRequest.shelf)
  return shelf_;
}
inline void DeleteBookRequest::set_shelf(::google::protobuf::int64 value) {
  
  shelf_ = value;
  // @@protoc_insertion_point(field_set:bookstore.DeleteBookRequest.shelf)
}

// int64 book = 2;
inline void DeleteBookRequest::clear_book() {
  book_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DeleteBookRequest::book() const {
  // @@protoc_insertion_point(field_get:bookstore.DeleteBookRequest.book)
  return book_;
}
inline void DeleteBookRequest::set_book(::google::protobuf::int64 value) {
  
  book_ = value;
  // @@protoc_insertion_point(field_set:bookstore.DeleteBookRequest.book)
}

// -------------------------------------------------------------------

// GetAuthorRequest

// int64 author = 1;
inline void GetAuthorRequest::clear_author() {
  author_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetAuthorRequest::author() const {
  // @@protoc_insertion_point(field_get:bookstore.GetAuthorRequest.author)
  return author_;
}
inline void GetAuthorRequest::set_author(::google::protobuf::int64 value) {
  
  author_ = value;
  // @@protoc_insertion_point(field_set:bookstore.GetAuthorRequest.author)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bookstore

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bookstore::Author_Gender> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bookstore::Author_Gender>() {
  return ::bookstore::Author_Gender_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bookstore_2eproto__INCLUDED
