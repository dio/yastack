// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bookstore.proto

#include "bookstore.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace bookstore {
class ShelfDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Shelf>
      _instance;
} _Shelf_default_instance_;
class BookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Book>
      _instance;
} _Book_default_instance_;
class AuthorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Author>
      _instance;
} _Author_default_instance_;
class ListShelvesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListShelvesResponse>
      _instance;
} _ListShelvesResponse_default_instance_;
class CreateShelfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateShelfRequest>
      _instance;
} _CreateShelfRequest_default_instance_;
class GetShelfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetShelfRequest>
      _instance;
} _GetShelfRequest_default_instance_;
class DeleteShelfRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteShelfRequest>
      _instance;
} _DeleteShelfRequest_default_instance_;
class ListBooksRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListBooksRequest>
      _instance;
} _ListBooksRequest_default_instance_;
class CreateBookRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateBookRequest>
      _instance;
} _CreateBookRequest_default_instance_;
class GetBookRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBookRequest>
      _instance;
} _GetBookRequest_default_instance_;
class UpdateBookRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateBookRequest>
      _instance;
} _UpdateBookRequest_default_instance_;
class DeleteBookRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteBookRequest>
      _instance;
} _DeleteBookRequest_default_instance_;
class GetAuthorRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAuthorRequest>
      _instance;
} _GetAuthorRequest_default_instance_;
}  // namespace bookstore
namespace protobuf_bookstore_2eproto {
void InitDefaultsShelfImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_Shelf_default_instance_;
    new (ptr) ::bookstore::Shelf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::Shelf::InitAsDefaultInstance();
}

void InitDefaultsShelf() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsShelfImpl);
}

void InitDefaultsBookImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_Book_default_instance_;
    new (ptr) ::bookstore::Book();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::Book::InitAsDefaultInstance();
}

void InitDefaultsBook() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBookImpl);
}

void InitDefaultsAuthorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_Author_default_instance_;
    new (ptr) ::bookstore::Author();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::Author::InitAsDefaultInstance();
}

void InitDefaultsAuthor() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAuthorImpl);
}

void InitDefaultsListShelvesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bookstore_2eproto::InitDefaultsShelf();
  {
    void* ptr = &::bookstore::_ListShelvesResponse_default_instance_;
    new (ptr) ::bookstore::ListShelvesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::ListShelvesResponse::InitAsDefaultInstance();
}

void InitDefaultsListShelvesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListShelvesResponseImpl);
}

void InitDefaultsCreateShelfRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bookstore_2eproto::InitDefaultsShelf();
  {
    void* ptr = &::bookstore::_CreateShelfRequest_default_instance_;
    new (ptr) ::bookstore::CreateShelfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::CreateShelfRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateShelfRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateShelfRequestImpl);
}

void InitDefaultsGetShelfRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_GetShelfRequest_default_instance_;
    new (ptr) ::bookstore::GetShelfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::GetShelfRequest::InitAsDefaultInstance();
}

void InitDefaultsGetShelfRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetShelfRequestImpl);
}

void InitDefaultsDeleteShelfRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_DeleteShelfRequest_default_instance_;
    new (ptr) ::bookstore::DeleteShelfRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::DeleteShelfRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteShelfRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteShelfRequestImpl);
}

void InitDefaultsListBooksRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_ListBooksRequest_default_instance_;
    new (ptr) ::bookstore::ListBooksRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::ListBooksRequest::InitAsDefaultInstance();
}

void InitDefaultsListBooksRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListBooksRequestImpl);
}

void InitDefaultsCreateBookRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bookstore_2eproto::InitDefaultsBook();
  {
    void* ptr = &::bookstore::_CreateBookRequest_default_instance_;
    new (ptr) ::bookstore::CreateBookRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::CreateBookRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateBookRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateBookRequestImpl);
}

void InitDefaultsGetBookRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_GetBookRequest_default_instance_;
    new (ptr) ::bookstore::GetBookRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::GetBookRequest::InitAsDefaultInstance();
}

void InitDefaultsGetBookRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetBookRequestImpl);
}

void InitDefaultsUpdateBookRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_bookstore_2eproto::InitDefaultsBook();
  {
    void* ptr = &::bookstore::_UpdateBookRequest_default_instance_;
    new (ptr) ::bookstore::UpdateBookRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::UpdateBookRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateBookRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateBookRequestImpl);
}

void InitDefaultsDeleteBookRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_DeleteBookRequest_default_instance_;
    new (ptr) ::bookstore::DeleteBookRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::DeleteBookRequest::InitAsDefaultInstance();
}

void InitDefaultsDeleteBookRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDeleteBookRequestImpl);
}

void InitDefaultsGetAuthorRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::bookstore::_GetAuthorRequest_default_instance_;
    new (ptr) ::bookstore::GetAuthorRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bookstore::GetAuthorRequest::InitAsDefaultInstance();
}

void InitDefaultsGetAuthorRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetAuthorRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Shelf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Shelf, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Shelf, theme_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Book, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Book, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Book, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Book, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Book, quotes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Author, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Author, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Author, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Author, first_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::Author, last_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::ListShelvesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::ListShelvesResponse, shelves_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::CreateShelfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::CreateShelfRequest, shelf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetShelfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetShelfRequest, shelf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::DeleteShelfRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::DeleteShelfRequest, shelf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::ListBooksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::ListBooksRequest, shelf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::CreateBookRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::CreateBookRequest, shelf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::CreateBookRequest, book_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetBookRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetBookRequest, shelf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetBookRequest, book_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::UpdateBookRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::UpdateBookRequest, shelf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::UpdateBookRequest, book_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::DeleteBookRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::DeleteBookRequest, shelf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::DeleteBookRequest, book_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetAuthorRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::bookstore::GetAuthorRequest, author_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bookstore::Shelf)},
  { 7, -1, sizeof(::bookstore::Book)},
  { 16, -1, sizeof(::bookstore::Author)},
  { 25, -1, sizeof(::bookstore::ListShelvesResponse)},
  { 31, -1, sizeof(::bookstore::CreateShelfRequest)},
  { 37, -1, sizeof(::bookstore::GetShelfRequest)},
  { 43, -1, sizeof(::bookstore::DeleteShelfRequest)},
  { 49, -1, sizeof(::bookstore::ListBooksRequest)},
  { 55, -1, sizeof(::bookstore::CreateBookRequest)},
  { 62, -1, sizeof(::bookstore::GetBookRequest)},
  { 69, -1, sizeof(::bookstore::UpdateBookRequest)},
  { 76, -1, sizeof(::bookstore::DeleteBookRequest)},
  { 83, -1, sizeof(::bookstore::GetAuthorRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_Shelf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_Book_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_Author_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_ListShelvesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_CreateShelfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_GetShelfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_DeleteShelfRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_ListBooksRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_CreateBookRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_GetBookRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_UpdateBookRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_DeleteBookRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bookstore::_GetAuthorRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bookstore.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017bookstore.proto\022\tbookstore\032\034google/api"
      "/annotations.proto\032\033google/protobuf/empt"
      "y.proto\"\"\n\005Shelf\022\n\n\002id\030\001 \001(\003\022\r\n\005theme\030\002 "
      "\001(\t\"A\n\004Book\022\n\n\002id\030\001 \001(\003\022\016\n\006author\030\002 \001(\t\022"
      "\r\n\005title\030\003 \001(\t\022\016\n\006quotes\030\004 \003(\t\"\231\001\n\006Autho"
      "r\022\n\n\002id\030\001 \001(\003\022(\n\006gender\030\002 \001(\0162\030.bookstor"
      "e.Author.Gender\022\022\n\nfirst_name\030\003 \001(\t\022\030\n\tl"
      "ast_name\030\004 \001(\tR\005lname\"+\n\006Gender\022\013\n\007UNKNO"
      "WN\020\000\022\010\n\004MALE\020\001\022\n\n\006FEMALE\020\002\"8\n\023ListShelve"
      "sResponse\022!\n\007shelves\030\001 \003(\0132\020.bookstore.S"
      "helf\"5\n\022CreateShelfRequest\022\037\n\005shelf\030\001 \001("
      "\0132\020.bookstore.Shelf\" \n\017GetShelfRequest\022\r"
      "\n\005shelf\030\001 \001(\003\"#\n\022DeleteShelfRequest\022\r\n\005s"
      "helf\030\001 \001(\003\"!\n\020ListBooksRequest\022\r\n\005shelf\030"
      "\001 \001(\003\"A\n\021CreateBookRequest\022\r\n\005shelf\030\001 \001("
      "\003\022\035\n\004book\030\002 \001(\0132\017.bookstore.Book\"-\n\016GetB"
      "ookRequest\022\r\n\005shelf\030\001 \001(\003\022\014\n\004book\030\002 \001(\003\""
      "A\n\021UpdateBookRequest\022\r\n\005shelf\030\001 \001(\003\022\035\n\004b"
      "ook\030\002 \001(\0132\017.bookstore.Book\"0\n\021DeleteBook"
      "Request\022\r\n\005shelf\030\001 \001(\003\022\014\n\004book\030\002 \001(\003\"\"\n\020"
      "GetAuthorRequest\022\016\n\006author\030\001 \001(\0032\323\010\n\tBoo"
      "kstore\022W\n\013ListShelves\022\026.google.protobuf."
      "Empty\032\036.bookstore.ListShelvesResponse\"\020\202"
      "\323\344\223\002\n\022\010/shelves\022U\n\013CreateShelf\022\035.booksto"
      "re.CreateShelfRequest\032\020.bookstore.Shelf\""
      "\025\202\323\344\223\002\017\"\006/shelf:\005shelf\022d\n\017BulkCreateShel"
      "f\022\035.bookstore.CreateShelfRequest\032\020.books"
      "tore.Shelf\"\034\202\323\344\223\002\026\"\r/bulk/shelves:\005shelf"
      "(\0010\001\022R\n\010GetShelf\022\032.bookstore.GetShelfReq"
      "uest\032\020.bookstore.Shelf\"\030\202\323\344\223\002\022\022\020/shelves"
      "/{shelf}\022F\n\013DeleteShelf\022\035.bookstore.Dele"
      "teShelfRequest\032\026.google.protobuf.Empty\"\000"
      "\022[\n\tListBooks\022\033.bookstore.ListBooksReque"
      "st\032\017.bookstore.Book\"\036\202\323\344\223\002\030\022\026/shelves/{s"
      "helf}/books0\001\022a\n\nCreateBook\022\034.bookstore."
      "CreateBookRequest\032\017.bookstore.Book\"$\202\323\344\223"
      "\002\036\032\026/shelves/{shelf}/books:\004book\0227\n\007GetB"
      "ook\022\031.bookstore.GetBookRequest\032\017.booksto"
      "re.Book\"\000\022i\n\nDeleteBook\022\034.bookstore.Dele"
      "teBookRequest\032\026.google.protobuf.Empty\"%\202"
      "\323\344\223\002\037*\035/shelves/{shelf}/books/{book}\022k\n\n"
      "UpdateBook\022\034.bookstore.UpdateBookRequest"
      "\032\017.bookstore.Book\".\202\323\344\223\002(2 /shelves/{she"
      "lf}/books/{book.id}:\004book\022k\n\020BookstoreOp"
      "tions\022\032.bookstore.GetShelfRequest\032\026.goog"
      "le.protobuf.Empty\"#\202\323\344\223\002\035B\033\n\007OPTIONS\022\020/s"
      "helves/{shelf}\022V\n\tGetAuthor\022\033.bookstore."
      "GetAuthorRequest\032\021.bookstore.Author\"\031\202\323\344"
      "\223\002\023\022\021/authors/{author}b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1950);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bookstore.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_bookstore_2eproto
namespace bookstore {
const ::google::protobuf::EnumDescriptor* Author_Gender_descriptor() {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bookstore_2eproto::file_level_enum_descriptors[0];
}
bool Author_Gender_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Author_Gender Author::UNKNOWN;
const Author_Gender Author::MALE;
const Author_Gender Author::FEMALE;
const Author_Gender Author::Gender_MIN;
const Author_Gender Author::Gender_MAX;
const int Author::Gender_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Shelf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shelf::kIdFieldNumber;
const int Shelf::kThemeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shelf::Shelf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsShelf();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.Shelf)
}
Shelf::Shelf(const Shelf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  theme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.theme().size() > 0) {
    theme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.theme_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:bookstore.Shelf)
}

void Shelf::SharedCtor() {
  theme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Shelf::~Shelf() {
  // @@protoc_insertion_point(destructor:bookstore.Shelf)
  SharedDtor();
}

void Shelf::SharedDtor() {
  theme_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Shelf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shelf::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Shelf& Shelf::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsShelf();
  return *internal_default_instance();
}

Shelf* Shelf::New(::google::protobuf::Arena* arena) const {
  Shelf* n = new Shelf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shelf::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.Shelf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  theme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Shelf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.Shelf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string theme = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_theme()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->theme().data(), static_cast<int>(this->theme().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Shelf.theme"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.Shelf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.Shelf)
  return false;
#undef DO_
}

void Shelf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.Shelf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string theme = 2;
  if (this->theme().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->theme().data(), static_cast<int>(this->theme().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Shelf.theme");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->theme(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.Shelf)
}

::google::protobuf::uint8* Shelf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.Shelf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string theme = 2;
  if (this->theme().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->theme().data(), static_cast<int>(this->theme().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Shelf.theme");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->theme(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.Shelf)
  return target;
}

size_t Shelf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.Shelf)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string theme = 2;
  if (this->theme().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->theme());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shelf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.Shelf)
  GOOGLE_DCHECK_NE(&from, this);
  const Shelf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shelf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.Shelf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.Shelf)
    MergeFrom(*source);
  }
}

void Shelf::MergeFrom(const Shelf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.Shelf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.theme().size() > 0) {

    theme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.theme_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Shelf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.Shelf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shelf::CopyFrom(const Shelf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.Shelf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shelf::IsInitialized() const {
  return true;
}

void Shelf::Swap(Shelf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shelf::InternalSwap(Shelf* other) {
  using std::swap;
  theme_.Swap(&other->theme_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shelf::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Book::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Book::kIdFieldNumber;
const int Book::kAuthorFieldNumber;
const int Book::kTitleFieldNumber;
const int Book::kQuotesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Book::Book()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsBook();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.Book)
}
Book::Book(const Book& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      quotes_(from.quotes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:bookstore.Book)
}

void Book::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Book::~Book() {
  // @@protoc_insertion_point(destructor:bookstore.Book)
  SharedDtor();
}

void Book::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Book::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Book::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Book& Book::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsBook();
  return *internal_default_instance();
}

Book* Book::New(::google::protobuf::Arena* arena) const {
  Book* n = new Book;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Book::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.Book)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotes_.Clear();
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Book::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.Book)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Book.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Book.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string quotes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_quotes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quotes(this->quotes_size() - 1).data(),
            static_cast<int>(this->quotes(this->quotes_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Book.quotes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.Book)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.Book)
  return false;
#undef DO_
}

void Book::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.Book)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // string author = 2;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->author(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // repeated string quotes = 4;
  for (int i = 0, n = this->quotes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotes(i).data(), static_cast<int>(this->quotes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.quotes");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->quotes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.Book)
}

::google::protobuf::uint8* Book::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.Book)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // string author = 2;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->author(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // repeated string quotes = 4;
  for (int i = 0, n = this->quotes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quotes(i).data(), static_cast<int>(this->quotes(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Book.quotes");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->quotes(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.Book)
  return target;
}

size_t Book::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.Book)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string quotes = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quotes_size());
  for (int i = 0, n = this->quotes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->quotes(i));
  }

  // string author = 2;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Book::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.Book)
  GOOGLE_DCHECK_NE(&from, this);
  const Book* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Book>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.Book)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.Book)
    MergeFrom(*source);
  }
}

void Book::MergeFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.Book)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotes_.MergeFrom(from.quotes_);
  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Book::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Book::CopyFrom(const Book& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.Book)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Book::IsInitialized() const {
  return true;
}

void Book::Swap(Book* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Book::InternalSwap(Book* other) {
  using std::swap;
  quotes_.InternalSwap(&other->quotes_);
  author_.Swap(&other->author_);
  title_.Swap(&other->title_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Book::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Author::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Author::kIdFieldNumber;
const int Author::kGenderFieldNumber;
const int Author::kFirstNameFieldNumber;
const int Author::kLastNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Author::Author()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsAuthor();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.Author)
}
Author::Author(const Author& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.first_name().size() > 0) {
    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_name().size() > 0) {
    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gender_) -
    reinterpret_cast<char*>(&id_)) + sizeof(gender_));
  // @@protoc_insertion_point(copy_constructor:bookstore.Author)
}

void Author::SharedCtor() {
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) -
      reinterpret_cast<char*>(&id_)) + sizeof(gender_));
  _cached_size_ = 0;
}

Author::~Author() {
  // @@protoc_insertion_point(destructor:bookstore.Author)
  SharedDtor();
}

void Author::SharedDtor() {
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Author::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Author::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Author& Author::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsAuthor();
  return *internal_default_instance();
}

Author* Author::New(::google::protobuf::Arena* arena) const {
  Author* n = new Author;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Author::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_) -
      reinterpret_cast<char*>(&id_)) + sizeof(gender_));
  _internal_metadata_.Clear();
}

bool Author::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.Author)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bookstore.Author.Gender gender = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gender(static_cast< ::bookstore::Author_Gender >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string first_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_first_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->first_name().data(), static_cast<int>(this->first_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Author.first_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_name = 4[json_name = "lname"];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_name().data(), static_cast<int>(this->last_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "bookstore.Author.last_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.Author)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.Author)
  return false;
#undef DO_
}

void Author::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // .bookstore.Author.Gender gender = 2;
  if (this->gender() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->gender(), output);
  }

  // string first_name = 3;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), static_cast<int>(this->first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Author.first_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->first_name(), output);
  }

  // string last_name = 4[json_name = "lname"];
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), static_cast<int>(this->last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Author.last_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.Author)
}

::google::protobuf::uint8* Author::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.Author)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // .bookstore.Author.Gender gender = 2;
  if (this->gender() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->gender(), target);
  }

  // string first_name = 3;
  if (this->first_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->first_name().data(), static_cast<int>(this->first_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Author.first_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->first_name(), target);
  }

  // string last_name = 4[json_name = "lname"];
  if (this->last_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_name().data(), static_cast<int>(this->last_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "bookstore.Author.last_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.Author)
  return target;
}

size_t Author::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.Author)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string first_name = 3;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->first_name());
  }

  // string last_name = 4[json_name = "lname"];
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_name());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  // .bookstore.Author.Gender gender = 2;
  if (this->gender() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Author::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.Author)
  GOOGLE_DCHECK_NE(&from, this);
  const Author* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Author>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.Author)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.Author)
    MergeFrom(*source);
  }
}

void Author::MergeFrom(const Author& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.Author)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.first_name().size() > 0) {

    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  if (from.last_name().size() > 0) {

    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.gender() != 0) {
    set_gender(from.gender());
  }
}

void Author::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Author::CopyFrom(const Author& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.Author)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Author::IsInitialized() const {
  return true;
}

void Author::Swap(Author* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Author::InternalSwap(Author* other) {
  using std::swap;
  first_name_.Swap(&other->first_name_);
  last_name_.Swap(&other->last_name_);
  swap(id_, other->id_);
  swap(gender_, other->gender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Author::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListShelvesResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListShelvesResponse::kShelvesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListShelvesResponse::ListShelvesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsListShelvesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.ListShelvesResponse)
}
ListShelvesResponse::ListShelvesResponse(const ListShelvesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shelves_(from.shelves_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bookstore.ListShelvesResponse)
}

void ListShelvesResponse::SharedCtor() {
  _cached_size_ = 0;
}

ListShelvesResponse::~ListShelvesResponse() {
  // @@protoc_insertion_point(destructor:bookstore.ListShelvesResponse)
  SharedDtor();
}

void ListShelvesResponse::SharedDtor() {
}

void ListShelvesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListShelvesResponse::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListShelvesResponse& ListShelvesResponse::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsListShelvesResponse();
  return *internal_default_instance();
}

ListShelvesResponse* ListShelvesResponse::New(::google::protobuf::Arena* arena) const {
  ListShelvesResponse* n = new ListShelvesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListShelvesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.ListShelvesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shelves_.Clear();
  _internal_metadata_.Clear();
}

bool ListShelvesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.ListShelvesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bookstore.Shelf shelves = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_shelves()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.ListShelvesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.ListShelvesResponse)
  return false;
#undef DO_
}

void ListShelvesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.ListShelvesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookstore.Shelf shelves = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shelves_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shelves(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.ListShelvesResponse)
}

::google::protobuf::uint8* ListShelvesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.ListShelvesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bookstore.Shelf shelves = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->shelves_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->shelves(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.ListShelvesResponse)
  return target;
}

size_t ListShelvesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.ListShelvesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .bookstore.Shelf shelves = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->shelves_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->shelves(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListShelvesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.ListShelvesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListShelvesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListShelvesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.ListShelvesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.ListShelvesResponse)
    MergeFrom(*source);
  }
}

void ListShelvesResponse::MergeFrom(const ListShelvesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.ListShelvesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shelves_.MergeFrom(from.shelves_);
}

void ListShelvesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.ListShelvesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListShelvesResponse::CopyFrom(const ListShelvesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.ListShelvesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListShelvesResponse::IsInitialized() const {
  return true;
}

void ListShelvesResponse::Swap(ListShelvesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListShelvesResponse::InternalSwap(ListShelvesResponse* other) {
  using std::swap;
  shelves_.InternalSwap(&other->shelves_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListShelvesResponse::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateShelfRequest::InitAsDefaultInstance() {
  ::bookstore::_CreateShelfRequest_default_instance_._instance.get_mutable()->shelf_ = const_cast< ::bookstore::Shelf*>(
      ::bookstore::Shelf::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateShelfRequest::kShelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateShelfRequest::CreateShelfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsCreateShelfRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.CreateShelfRequest)
}
CreateShelfRequest::CreateShelfRequest(const CreateShelfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shelf()) {
    shelf_ = new ::bookstore::Shelf(*from.shelf_);
  } else {
    shelf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bookstore.CreateShelfRequest)
}

void CreateShelfRequest::SharedCtor() {
  shelf_ = NULL;
  _cached_size_ = 0;
}

CreateShelfRequest::~CreateShelfRequest() {
  // @@protoc_insertion_point(destructor:bookstore.CreateShelfRequest)
  SharedDtor();
}

void CreateShelfRequest::SharedDtor() {
  if (this != internal_default_instance()) delete shelf_;
}

void CreateShelfRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateShelfRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateShelfRequest& CreateShelfRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsCreateShelfRequest();
  return *internal_default_instance();
}

CreateShelfRequest* CreateShelfRequest::New(::google::protobuf::Arena* arena) const {
  CreateShelfRequest* n = new CreateShelfRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateShelfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.CreateShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && shelf_ != NULL) {
    delete shelf_;
  }
  shelf_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateShelfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.CreateShelfRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bookstore.Shelf shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_shelf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.CreateShelfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.CreateShelfRequest)
  return false;
#undef DO_
}

void CreateShelfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.CreateShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bookstore.Shelf shelf = 1;
  if (this->has_shelf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->shelf_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.CreateShelfRequest)
}

::google::protobuf::uint8* CreateShelfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.CreateShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bookstore.Shelf shelf = 1;
  if (this->has_shelf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->shelf_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.CreateShelfRequest)
  return target;
}

size_t CreateShelfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.CreateShelfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bookstore.Shelf shelf = 1;
  if (this->has_shelf()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->shelf_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateShelfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.CreateShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateShelfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateShelfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.CreateShelfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.CreateShelfRequest)
    MergeFrom(*source);
  }
}

void CreateShelfRequest::MergeFrom(const CreateShelfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.CreateShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_shelf()) {
    mutable_shelf()->::bookstore::Shelf::MergeFrom(from.shelf());
  }
}

void CreateShelfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.CreateShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateShelfRequest::CopyFrom(const CreateShelfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.CreateShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateShelfRequest::IsInitialized() const {
  return true;
}

void CreateShelfRequest::Swap(CreateShelfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateShelfRequest::InternalSwap(CreateShelfRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateShelfRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetShelfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetShelfRequest::kShelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetShelfRequest::GetShelfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsGetShelfRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.GetShelfRequest)
}
GetShelfRequest::GetShelfRequest(const GetShelfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shelf_ = from.shelf_;
  // @@protoc_insertion_point(copy_constructor:bookstore.GetShelfRequest)
}

void GetShelfRequest::SharedCtor() {
  shelf_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

GetShelfRequest::~GetShelfRequest() {
  // @@protoc_insertion_point(destructor:bookstore.GetShelfRequest)
  SharedDtor();
}

void GetShelfRequest::SharedDtor() {
}

void GetShelfRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetShelfRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetShelfRequest& GetShelfRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsGetShelfRequest();
  return *internal_default_instance();
}

GetShelfRequest* GetShelfRequest::New(::google::protobuf::Arena* arena) const {
  GetShelfRequest* n = new GetShelfRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetShelfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.GetShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shelf_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetShelfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.GetShelfRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.GetShelfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.GetShelfRequest)
  return false;
#undef DO_
}

void GetShelfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.GetShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.GetShelfRequest)
}

::google::protobuf::uint8* GetShelfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.GetShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.GetShelfRequest)
  return target;
}

size_t GetShelfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.GetShelfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetShelfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.GetShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetShelfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetShelfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.GetShelfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.GetShelfRequest)
    MergeFrom(*source);
  }
}

void GetShelfRequest::MergeFrom(const GetShelfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.GetShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
}

void GetShelfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.GetShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetShelfRequest::CopyFrom(const GetShelfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.GetShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetShelfRequest::IsInitialized() const {
  return true;
}

void GetShelfRequest::Swap(GetShelfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetShelfRequest::InternalSwap(GetShelfRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetShelfRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteShelfRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteShelfRequest::kShelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteShelfRequest::DeleteShelfRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsDeleteShelfRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.DeleteShelfRequest)
}
DeleteShelfRequest::DeleteShelfRequest(const DeleteShelfRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shelf_ = from.shelf_;
  // @@protoc_insertion_point(copy_constructor:bookstore.DeleteShelfRequest)
}

void DeleteShelfRequest::SharedCtor() {
  shelf_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

DeleteShelfRequest::~DeleteShelfRequest() {
  // @@protoc_insertion_point(destructor:bookstore.DeleteShelfRequest)
  SharedDtor();
}

void DeleteShelfRequest::SharedDtor() {
}

void DeleteShelfRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteShelfRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteShelfRequest& DeleteShelfRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsDeleteShelfRequest();
  return *internal_default_instance();
}

DeleteShelfRequest* DeleteShelfRequest::New(::google::protobuf::Arena* arena) const {
  DeleteShelfRequest* n = new DeleteShelfRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteShelfRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.DeleteShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shelf_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool DeleteShelfRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.DeleteShelfRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.DeleteShelfRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.DeleteShelfRequest)
  return false;
#undef DO_
}

void DeleteShelfRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.DeleteShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.DeleteShelfRequest)
}

::google::protobuf::uint8* DeleteShelfRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.DeleteShelfRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.DeleteShelfRequest)
  return target;
}

size_t DeleteShelfRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.DeleteShelfRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteShelfRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.DeleteShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteShelfRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteShelfRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.DeleteShelfRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.DeleteShelfRequest)
    MergeFrom(*source);
  }
}

void DeleteShelfRequest::MergeFrom(const DeleteShelfRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.DeleteShelfRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
}

void DeleteShelfRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.DeleteShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteShelfRequest::CopyFrom(const DeleteShelfRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.DeleteShelfRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteShelfRequest::IsInitialized() const {
  return true;
}

void DeleteShelfRequest::Swap(DeleteShelfRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteShelfRequest::InternalSwap(DeleteShelfRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteShelfRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListBooksRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListBooksRequest::kShelfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListBooksRequest::ListBooksRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsListBooksRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.ListBooksRequest)
}
ListBooksRequest::ListBooksRequest(const ListBooksRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shelf_ = from.shelf_;
  // @@protoc_insertion_point(copy_constructor:bookstore.ListBooksRequest)
}

void ListBooksRequest::SharedCtor() {
  shelf_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ListBooksRequest::~ListBooksRequest() {
  // @@protoc_insertion_point(destructor:bookstore.ListBooksRequest)
  SharedDtor();
}

void ListBooksRequest::SharedDtor() {
}

void ListBooksRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListBooksRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListBooksRequest& ListBooksRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsListBooksRequest();
  return *internal_default_instance();
}

ListBooksRequest* ListBooksRequest::New(::google::protobuf::Arena* arena) const {
  ListBooksRequest* n = new ListBooksRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListBooksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.ListBooksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shelf_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool ListBooksRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.ListBooksRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.ListBooksRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.ListBooksRequest)
  return false;
#undef DO_
}

void ListBooksRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.ListBooksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.ListBooksRequest)
}

::google::protobuf::uint8* ListBooksRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.ListBooksRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.ListBooksRequest)
  return target;
}

size_t ListBooksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.ListBooksRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListBooksRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.ListBooksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListBooksRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListBooksRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.ListBooksRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.ListBooksRequest)
    MergeFrom(*source);
  }
}

void ListBooksRequest::MergeFrom(const ListBooksRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.ListBooksRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
}

void ListBooksRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.ListBooksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListBooksRequest::CopyFrom(const ListBooksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.ListBooksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListBooksRequest::IsInitialized() const {
  return true;
}

void ListBooksRequest::Swap(ListBooksRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListBooksRequest::InternalSwap(ListBooksRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListBooksRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateBookRequest::InitAsDefaultInstance() {
  ::bookstore::_CreateBookRequest_default_instance_._instance.get_mutable()->book_ = const_cast< ::bookstore::Book*>(
      ::bookstore::Book::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateBookRequest::kShelfFieldNumber;
const int CreateBookRequest::kBookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateBookRequest::CreateBookRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsCreateBookRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.CreateBookRequest)
}
CreateBookRequest::CreateBookRequest(const CreateBookRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_book()) {
    book_ = new ::bookstore::Book(*from.book_);
  } else {
    book_ = NULL;
  }
  shelf_ = from.shelf_;
  // @@protoc_insertion_point(copy_constructor:bookstore.CreateBookRequest)
}

void CreateBookRequest::SharedCtor() {
  ::memset(&book_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shelf_) -
      reinterpret_cast<char*>(&book_)) + sizeof(shelf_));
  _cached_size_ = 0;
}

CreateBookRequest::~CreateBookRequest() {
  // @@protoc_insertion_point(destructor:bookstore.CreateBookRequest)
  SharedDtor();
}

void CreateBookRequest::SharedDtor() {
  if (this != internal_default_instance()) delete book_;
}

void CreateBookRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateBookRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateBookRequest& CreateBookRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsCreateBookRequest();
  return *internal_default_instance();
}

CreateBookRequest* CreateBookRequest::New(::google::protobuf::Arena* arena) const {
  CreateBookRequest* n = new CreateBookRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.CreateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
  shelf_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CreateBookRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.CreateBookRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bookstore.Book book = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_book()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.CreateBookRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.CreateBookRequest)
  return false;
#undef DO_
}

void CreateBookRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.CreateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  // .bookstore.Book book = 2;
  if (this->has_book()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->book_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.CreateBookRequest)
}

::google::protobuf::uint8* CreateBookRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.CreateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  // .bookstore.Book book = 2;
  if (this->has_book()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->book_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.CreateBookRequest)
  return target;
}

size_t CreateBookRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.CreateBookRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bookstore.Book book = 2;
  if (this->has_book()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->book_);
  }

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateBookRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.CreateBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateBookRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateBookRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.CreateBookRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.CreateBookRequest)
    MergeFrom(*source);
  }
}

void CreateBookRequest::MergeFrom(const CreateBookRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.CreateBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_book()) {
    mutable_book()->::bookstore::Book::MergeFrom(from.book());
  }
  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
}

void CreateBookRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.CreateBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateBookRequest::CopyFrom(const CreateBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.CreateBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateBookRequest::IsInitialized() const {
  return true;
}

void CreateBookRequest::Swap(CreateBookRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateBookRequest::InternalSwap(CreateBookRequest* other) {
  using std::swap;
  swap(book_, other->book_);
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateBookRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBookRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBookRequest::kShelfFieldNumber;
const int GetBookRequest::kBookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBookRequest::GetBookRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsGetBookRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.GetBookRequest)
}
GetBookRequest::GetBookRequest(const GetBookRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shelf_, &from.shelf_,
    static_cast<size_t>(reinterpret_cast<char*>(&book_) -
    reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  // @@protoc_insertion_point(copy_constructor:bookstore.GetBookRequest)
}

void GetBookRequest::SharedCtor() {
  ::memset(&shelf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&book_) -
      reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  _cached_size_ = 0;
}

GetBookRequest::~GetBookRequest() {
  // @@protoc_insertion_point(destructor:bookstore.GetBookRequest)
  SharedDtor();
}

void GetBookRequest::SharedDtor() {
}

void GetBookRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBookRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBookRequest& GetBookRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsGetBookRequest();
  return *internal_default_instance();
}

GetBookRequest* GetBookRequest::New(::google::protobuf::Arena* arena) const {
  GetBookRequest* n = new GetBookRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.GetBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shelf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&book_) -
      reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  _internal_metadata_.Clear();
}

bool GetBookRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.GetBookRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 book = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &book_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.GetBookRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.GetBookRequest)
  return false;
#undef DO_
}

void GetBookRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.GetBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  // int64 book = 2;
  if (this->book() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->book(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.GetBookRequest)
}

::google::protobuf::uint8* GetBookRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.GetBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  // int64 book = 2;
  if (this->book() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->book(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.GetBookRequest)
  return target;
}

size_t GetBookRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.GetBookRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  // int64 book = 2;
  if (this->book() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->book());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBookRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.GetBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBookRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBookRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.GetBookRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.GetBookRequest)
    MergeFrom(*source);
  }
}

void GetBookRequest::MergeFrom(const GetBookRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.GetBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
  if (from.book() != 0) {
    set_book(from.book());
  }
}

void GetBookRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.GetBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBookRequest::CopyFrom(const GetBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.GetBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBookRequest::IsInitialized() const {
  return true;
}

void GetBookRequest::Swap(GetBookRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBookRequest::InternalSwap(GetBookRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  swap(book_, other->book_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBookRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateBookRequest::InitAsDefaultInstance() {
  ::bookstore::_UpdateBookRequest_default_instance_._instance.get_mutable()->book_ = const_cast< ::bookstore::Book*>(
      ::bookstore::Book::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateBookRequest::kShelfFieldNumber;
const int UpdateBookRequest::kBookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateBookRequest::UpdateBookRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsUpdateBookRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.UpdateBookRequest)
}
UpdateBookRequest::UpdateBookRequest(const UpdateBookRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_book()) {
    book_ = new ::bookstore::Book(*from.book_);
  } else {
    book_ = NULL;
  }
  shelf_ = from.shelf_;
  // @@protoc_insertion_point(copy_constructor:bookstore.UpdateBookRequest)
}

void UpdateBookRequest::SharedCtor() {
  ::memset(&book_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&shelf_) -
      reinterpret_cast<char*>(&book_)) + sizeof(shelf_));
  _cached_size_ = 0;
}

UpdateBookRequest::~UpdateBookRequest() {
  // @@protoc_insertion_point(destructor:bookstore.UpdateBookRequest)
  SharedDtor();
}

void UpdateBookRequest::SharedDtor() {
  if (this != internal_default_instance()) delete book_;
}

void UpdateBookRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateBookRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateBookRequest& UpdateBookRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsUpdateBookRequest();
  return *internal_default_instance();
}

UpdateBookRequest* UpdateBookRequest::New(::google::protobuf::Arena* arena) const {
  UpdateBookRequest* n = new UpdateBookRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.UpdateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && book_ != NULL) {
    delete book_;
  }
  book_ = NULL;
  shelf_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool UpdateBookRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.UpdateBookRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bookstore.Book book = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_book()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.UpdateBookRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.UpdateBookRequest)
  return false;
#undef DO_
}

void UpdateBookRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.UpdateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  // .bookstore.Book book = 2;
  if (this->has_book()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->book_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.UpdateBookRequest)
}

::google::protobuf::uint8* UpdateBookRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.UpdateBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  // .bookstore.Book book = 2;
  if (this->has_book()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->book_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.UpdateBookRequest)
  return target;
}

size_t UpdateBookRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.UpdateBookRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .bookstore.Book book = 2;
  if (this->has_book()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->book_);
  }

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateBookRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.UpdateBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateBookRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateBookRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.UpdateBookRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.UpdateBookRequest)
    MergeFrom(*source);
  }
}

void UpdateBookRequest::MergeFrom(const UpdateBookRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.UpdateBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_book()) {
    mutable_book()->::bookstore::Book::MergeFrom(from.book());
  }
  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
}

void UpdateBookRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.UpdateBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateBookRequest::CopyFrom(const UpdateBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.UpdateBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateBookRequest::IsInitialized() const {
  return true;
}

void UpdateBookRequest::Swap(UpdateBookRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateBookRequest::InternalSwap(UpdateBookRequest* other) {
  using std::swap;
  swap(book_, other->book_);
  swap(shelf_, other->shelf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateBookRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteBookRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteBookRequest::kShelfFieldNumber;
const int DeleteBookRequest::kBookFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteBookRequest::DeleteBookRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsDeleteBookRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.DeleteBookRequest)
}
DeleteBookRequest::DeleteBookRequest(const DeleteBookRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shelf_, &from.shelf_,
    static_cast<size_t>(reinterpret_cast<char*>(&book_) -
    reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  // @@protoc_insertion_point(copy_constructor:bookstore.DeleteBookRequest)
}

void DeleteBookRequest::SharedCtor() {
  ::memset(&shelf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&book_) -
      reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  _cached_size_ = 0;
}

DeleteBookRequest::~DeleteBookRequest() {
  // @@protoc_insertion_point(destructor:bookstore.DeleteBookRequest)
  SharedDtor();
}

void DeleteBookRequest::SharedDtor() {
}

void DeleteBookRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteBookRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteBookRequest& DeleteBookRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsDeleteBookRequest();
  return *internal_default_instance();
}

DeleteBookRequest* DeleteBookRequest::New(::google::protobuf::Arena* arena) const {
  DeleteBookRequest* n = new DeleteBookRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteBookRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.DeleteBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&shelf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&book_) -
      reinterpret_cast<char*>(&shelf_)) + sizeof(book_));
  _internal_metadata_.Clear();
}

bool DeleteBookRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.DeleteBookRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 shelf = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &shelf_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 book = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &book_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.DeleteBookRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.DeleteBookRequest)
  return false;
#undef DO_
}

void DeleteBookRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.DeleteBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->shelf(), output);
  }

  // int64 book = 2;
  if (this->book() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->book(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.DeleteBookRequest)
}

::google::protobuf::uint8* DeleteBookRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.DeleteBookRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 shelf = 1;
  if (this->shelf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->shelf(), target);
  }

  // int64 book = 2;
  if (this->book() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->book(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.DeleteBookRequest)
  return target;
}

size_t DeleteBookRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.DeleteBookRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 shelf = 1;
  if (this->shelf() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->shelf());
  }

  // int64 book = 2;
  if (this->book() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->book());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteBookRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.DeleteBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteBookRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteBookRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.DeleteBookRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.DeleteBookRequest)
    MergeFrom(*source);
  }
}

void DeleteBookRequest::MergeFrom(const DeleteBookRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.DeleteBookRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shelf() != 0) {
    set_shelf(from.shelf());
  }
  if (from.book() != 0) {
    set_book(from.book());
  }
}

void DeleteBookRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.DeleteBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteBookRequest::CopyFrom(const DeleteBookRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.DeleteBookRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteBookRequest::IsInitialized() const {
  return true;
}

void DeleteBookRequest::Swap(DeleteBookRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteBookRequest::InternalSwap(DeleteBookRequest* other) {
  using std::swap;
  swap(shelf_, other->shelf_);
  swap(book_, other->book_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteBookRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAuthorRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAuthorRequest::kAuthorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAuthorRequest::GetAuthorRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_bookstore_2eproto::InitDefaultsGetAuthorRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bookstore.GetAuthorRequest)
}
GetAuthorRequest::GetAuthorRequest(const GetAuthorRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_ = from.author_;
  // @@protoc_insertion_point(copy_constructor:bookstore.GetAuthorRequest)
}

void GetAuthorRequest::SharedCtor() {
  author_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

GetAuthorRequest::~GetAuthorRequest() {
  // @@protoc_insertion_point(destructor:bookstore.GetAuthorRequest)
  SharedDtor();
}

void GetAuthorRequest::SharedDtor() {
}

void GetAuthorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthorRequest::descriptor() {
  ::protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAuthorRequest& GetAuthorRequest::default_instance() {
  ::protobuf_bookstore_2eproto::InitDefaultsGetAuthorRequest();
  return *internal_default_instance();
}

GetAuthorRequest* GetAuthorRequest::New(::google::protobuf::Arena* arena) const {
  GetAuthorRequest* n = new GetAuthorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAuthorRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bookstore.GetAuthorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool GetAuthorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bookstore.GetAuthorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &author_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bookstore.GetAuthorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bookstore.GetAuthorRequest)
  return false;
#undef DO_
}

void GetAuthorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bookstore.GetAuthorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 author = 1;
  if (this->author() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->author(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:bookstore.GetAuthorRequest)
}

::google::protobuf::uint8* GetAuthorRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bookstore.GetAuthorRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 author = 1;
  if (this->author() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->author(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bookstore.GetAuthorRequest)
  return target;
}

size_t GetAuthorRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bookstore.GetAuthorRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 author = 1;
  if (this->author() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->author());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAuthorRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bookstore.GetAuthorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAuthorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAuthorRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bookstore.GetAuthorRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bookstore.GetAuthorRequest)
    MergeFrom(*source);
  }
}

void GetAuthorRequest::MergeFrom(const GetAuthorRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bookstore.GetAuthorRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author() != 0) {
    set_author(from.author());
  }
}

void GetAuthorRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bookstore.GetAuthorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAuthorRequest::CopyFrom(const GetAuthorRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bookstore.GetAuthorRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthorRequest::IsInitialized() const {
  return true;
}

void GetAuthorRequest::Swap(GetAuthorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAuthorRequest::InternalSwap(GetAuthorRequest* other) {
  using std::swap;
  swap(author_, other->author_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAuthorRequest::GetMetadata() const {
  protobuf_bookstore_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_bookstore_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bookstore

// @@protoc_insertion_point(global_scope)
