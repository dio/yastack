commit 4c2af0788977d3bd900585528c2d08b875b2cd39
Author: BaaMeow <38274252+BaaMeow@users.noreply.github.com>
Date:   Fri Jun 1 06:14:19 2018 -0400

    (clang-)format all the things (#610)
    
    * format all documents according to contributor guidelines and specifications
    use clang-format on/off to stop formatting when it makes excessively poor decisions
    
    * format all tests as well, and mark blocks which change too much

commit 4fbfa2f3368cb8d8a0cba48edda584c7dd9f0a14
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed May 30 13:17:41 2018 +0100

    Some platforms and environments don't pass a valid argc/argv. (#607)
    
    Specifically some iOS targets.

commit d07372e64ba16fe3d81bfffbdad7635d19a29198
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 29 14:12:51 2018 +0100

    clang-format run on the benchmark header (#606)

commit 7b8d0249d8d66040ce9ffe6b94cc8421ef3e61d8
Author: Eric <eric@efcs.ca>
Date:   Tue May 29 06:25:32 2018 -0600

    Deprecate CSVReporter - A first step to overhauling reporting. (#488)
    
    As @dominichamon and I have discussed, the current reporter interface
    is poor at best. And something should be done to fix it.
    
    I strongly suspect such a fix will require an entire reimagining
    of the API, and therefore breaking backwards compatibility fully.
    
    For that reason we should start deprecating and removing parts
    that we don't intend to replace. One of these parts, I argue,
    is the CSVReporter. I propose that the new reporter interface
    should choose a single output format (JSON) and traffic entirely
    in that. If somebody really wanted to replace the functionality
    of the CSVReporter they would do so as an external tool which
    transforms the JSON.
    
    For these reasons I propose deprecating the CSVReporter.

commit 16703ff83c1ae6d53e5155df3bb3ab0bc96083be
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 29 13:13:06 2018 +0100

    cleaner and slightly larger statistics tests (#604)

commit c8adf4531f997c2701bec5084b5d92e37b632969
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 29 13:12:48 2018 +0100

    Add some 'travis_wait' commands to avoid gcc@7 installation timeouts. (#605)

commit a6a1b0d765b116bb9c777d45a299ae84a2760981
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue May 29 13:13:28 2018 +0300

    Benchmarking is hard. Making sense of the benchmarking results is even harder. (#593)
    
    The first problem you have to solve yourself. The second one can be aided.
    The benchmark library can compute some statistics over the repetitions,
    which helps with grasping the results somewhat.
    
    But that is only for the one set of results. It does not really help to compare
    the two benchmark results, which is the interesting bit. Thankfully, there are
    these bundled `tools/compare.py` and `tools/compare_bench.py` scripts.
    
    They can provide a diff between two benchmarking results. Yay!
    Except not really, it's just a diff, while it is very informative and better than
    nothing, it does not really help answer The Question - am i just looking at the noise?
    It's like not having these per-benchmark statistics...
    
    Roughly, we can formulate the question as:
    > Are these two benchmarks the same?
    > Did my change actually change anything, or is the difference below the noise level?
    
    Well, this really sounds like a [null hypothesis](https://en.wikipedia.org/wiki/Null_hypothesis), does it not?
    So maybe we can use statistics here, and solve all our problems?
    lol, no, it won't solve all the problems. But maybe it will act as a tool,
    to better understand the output, just like the usual statistics on the repetitions...
    
    I'm making an assumption here that most of the people care about the change
    of average value, not the standard deviation. Thus i believe we can use T-Test,
    be it either [Student's t-test](https://en.wikipedia.org/wiki/Student%27s_t-test), or [Welch's t-test](https://en.wikipedia.org/wiki/Welch%27s_t-test).
    **EDIT**: however, after @dominichamon review, it was decided that it is better
    to use more robust [Mann–Whitney U test](https://en.wikipedia.org/wiki/Mann–Whitney_U_test)
    I'm using [scipy.stats.mannwhitneyu](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.mannwhitneyu.html#scipy.stats.mannwhitneyu).
    
    There are two new user-facing knobs:
    ```
    $ ./compare.py --help
    usage: compare.py [-h] [-u] [--alpha UTEST_ALPHA]
                      {benchmarks,filters,benchmarksfiltered} ...
    
    versatile benchmark output compare tool
    <...>
    optional arguments:
      -h, --help            show this help message and exit
    
      -u, --utest           Do a two-tailed Mann-Whitney U test with the null
                            hypothesis that it is equally likely that a randomly
                            selected value from one sample will be less than or
                            greater than a randomly selected value from a second
                            sample. WARNING: requires **LARGE** (9 or more)
                            number of repetitions to be meaningful!
      --alpha UTEST_ALPHA   significance level alpha. if the calculated p-value is
                            below this value, then the result is said to be
                            statistically significant and the null hypothesis is
                            rejected. (default: 0.0500)
    ```
    
    Example output:
    ![screenshot_20180512_175517](https://user-images.githubusercontent.com/88600/39958581-ae897924-560d-11e8-81b9-806db6c3e691.png)
    As you can guess, the alpha does affect anything but the coloring of the computed p-values.
    If it is green, then the change in the average values is statistically-significant.
    
    I'm detecting the repetitions by matching name. This way, no changes to the json are _needed_.
    Caveats:
    * This won't work if the json is not in the same order as outputted by the benchmark,
       or if the parsing does not retain the ordering.
    * This won't work if after the grouped repetitions there isn't at least one row with
      different name (e.g. statistic). Since there isn't a knob to disable printing of statistics
      (only the other way around), i'm not too worried about this.
    * **The results will be wrong if the repetition count is different between the two benchmarks being compared.**
    * Even though i have added (hopefully full) test coverage, the code of these python tools is staring
      to look a bit jumbled.
    * So far i have added this only to the `tools/compare.py`.
      Should i add it to `tools/compare_bench.py` too?
      Or should we deduplicate them (by removing the latter one)?

commit ec0f69c28e412ec1fb1e8d170ada4faeebdc8293
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 29 10:36:54 2018 +0100

    Update README.md

commit e776aa0275e293707b6a0901e0e8d8a8a3679508
Author: Alex Strelnikov <strel@google.com>
Date:   Fri May 25 06:18:58 2018 -0400

    Add benchmark_main target. (#601)
    
    * Add benchmark_main library with support for Bazel.
    
    * fix newline at end of file
    
    * Add CMake support for benchmark_main.
    
    * Mention optionally using benchmark_main in README.

commit d7aed73677888834d4e8af2b300d01bfb724b70f
Author: mattreecebentley <mattreecebentley@gmail.com>
Date:   Thu May 24 21:50:35 2018 +1200

    Corrections, additions to initial doc (#600)
    
    * Correct/clarify build/install instructions
    
    GTest is google test, don't obsfucate needlessly for newcomers.
    Adding google test into installation guide helps newcomers.
    Third option under this  line: "Note that Google Benchmark requires Google Test to build and run the tests. This
    dependency can be provided three ways:"
    Was not true (did not occur). If there is a further option that needs to be specified in order for that functionality to work it needs to be specified.
    
    * Add prerequisite knowledge section
    
    A lot of assumptions are made about the reader in the documentation. This is unfortunate.
    
    * Removal of abbreviations for google test

commit ce3fde16cb4e3949f8d7c20f49867023af92a6e1
Author: Samuel Panzer <espanz@gmail.com>
Date:   Thu May 24 02:33:19 2018 -0700

    Return 0 from State::iterations() when not yet started. (#598)
    
    * Return a reasonable value from State::iterations() even before starting a benchmark
    
    * Optimize State::iterations() for started case.

commit 6d74c0625b8e88c1afce72b4f383c91b9a99dbe6
Author: Deniz Evrenci <denizevrenci@gmail.com>
Date:   Mon May 14 23:02:49 2018 +0900

    split_list is not defined for assembly tests (#595)
    
    * Update AUTHORS and CONTRIBUTORS
    
    * split_list is not defined for assembly tests

commit e90801ae475f23877319d67b96c07bf0c52405f3
Author: Nan Xiao <nan@chinadtrace.org>
Date:   Wed May 9 17:31:24 2018 +0800

    Remove unnecessary memset functions. (#591)

commit 718cc91d004e15ce483cb1ba9bcd5e3a1f025184
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue May 8 13:34:31 2018 +0300

    [Tools] Fix a few python3-compatibility issues (#585)

commit e8ddd907bb6a881f40069ea73caa74cb9112c564
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue May 8 13:33:37 2018 +0300

    There is no "FATAL" in message(), only "FATAL_ERROR" (#584)

commit 16af64500fe13d63a5ad57e81f05cb0b9383875d
Author: php1ic <ian.james.cullen@gmail.com>
Date:   Tue May 8 11:29:09 2018 +0100

    Run git from the source directory (#589) (#590)
    
    Git was being executed in the current directory, so could not get the
    latest tag if cmake was run from a build directory. Force git to be
    run from with the source directory.

commit 8986839e4ac67facb52abc7fff3d5082e854aab5
Author: Sam Clegg <sbc@chromium.org>
Date:   Thu May 3 01:34:26 2018 -0700

    Use __EMSCRIPTEN__ (rather then EMSCRIPTEN) to check for emscripten (#583)
    
    The old EMSCRIPTEN macro is deprecated and not enabled when
    EMCC_STRICT is set.
    
    Also fix a typo in EMSCRIPTN (not sure how this ever worked).

commit ea5551e7b3129d8ee468b15e2a4242edd610ee02
Author: Nan Xiao <nan@chinadtrace.org>
Date:   Wed May 2 18:26:43 2018 +0800

    Porting into OpenBSD (#582)

commit 62a9d756eacf28b5be59429d25f1fae3e202e5e3
Author: Alex Strelnikov <strel@google.com>
Date:   Wed May 2 06:23:18 2018 -0400

    Update bazel WORKSPACE and BUILD files to work better on Windows. (#581)
    
    Note, bazel only supports MSVC on Windows, and not MinGW, so
    linking against shlwapi.lib only needs to follow MSVC conventions.
    
    git_repository() did not work in local testing, so is swapped for
    http_archive(). The latter is also documented as the preferred way
    to depend on an external library in bazel.

commit b678a2026df75bdcaebbda40440b8495babf078e
Author: Alex Strelnikov <strel@google.com>
Date:   Tue May 1 10:24:38 2018 -0400

    Fix bazel config to link against pthread. (#579)
    
    The benchmarks in the test/ currently build because they all
    include a dep on gtest, which brings in pthread when needed.

commit ed1bac8434b3f970a5b7de3fea8f09dc4b1773ee
Author: Tim Bradgate <timbradgate@hotmail.co.uk>
Date:   Thu Apr 26 10:56:06 2018 +0100

    Issue 571: Allow support for negative regex filtering (#576)
    
    * Allow support for negative regex filtering
    
    This patch allows one to apply a negation to the entire regex filter
    by appending it with a '-' character, much in the same style as
    GoogleTest uses.
    
    * Address issues in PR
    
    * Add unit tests for negative filtering

commit 105ac14b2f671f7d448f621290404098189f424d
Author: Yangqing Jia <jiayq84@gmail.com>
Date:   Mon Apr 23 12:57:03 2018 -0700

    Add caching for cxx_feature_check (#573)

commit 64d4805dd7861fa265e3d8f10efc056985d4e945
Author: Victor Costan <costan@gmail.com>
Date:   Mon Apr 23 03:58:02 2018 -0700

    Fix precision loss warning in MSVC. (#574)

commit c4858d8012acd54d8ef89053c74e9cdcf0fa6649
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Apr 19 18:40:08 2018 +0100

    Report the actual iterations run. (#572)
    
    Before this change, we would report the number of requested iterations
    passed to the state. After, we will report the actual number run. As a
    side-effect, instead of multiplying the expected iterations by the
    number of threads to get the total number, we can report the actual
    number of iterations across all threads, which takes into account the
    situation where some threads might run more iterations than others.

commit 64e5a13fa05693dc0243817d6081d7c0e5081d6f
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Apr 12 15:40:24 2018 +0100

    Ensure 64-bit truncation doesn't happen for complexity_n (#569)
    
    * Ensure 64-bit truncation doesn't happen for complexity results
    
    * One more complexity_n 64-bit fix
    
    * Missed another vector of int
    
    * Piping through the int64_t

commit 50ffc781b1df6d582d6a453b9942cc8cb512db69
Author: Fred Tingaud <ftingaud@hotmail.com>
Date:   Mon Apr 9 14:40:58 2018 +0200

    Optimize by using nth_element instead of partial_sort to find the median. (#565)

commit 2844167ff99edb63f629c9768ea1f3f94ebfb8fe
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Apr 5 18:31:03 2018 -0600

    Fix #564 - gmock/gmock.h not found in benchmark tests.

commit 9913418d323e64a0111ca0da81388260c2bbe1e9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Apr 3 23:12:47 2018 +0100

    Allow AddRange to work with int64_t. (#548)
    
    * Allow AddRange to work with int64_t.
    
    Fixes #516
    
    Also, tweak how we manage per-test build needs, and create a standard
    _gtest suffix for googletest to differentiate from non-googletest tests.
    
    I also ran clang-format on the files that I changed (but not the
    benchmark include or main src as they have too many clang-format
    issues).
    
    * Add benchmark_gtest to cmake
    
    * Set(Items|Bytes)Processed now take int64_t

commit e7eb54b5f8d29f3d91f5fbda0909c65c2ae70ba9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sun Mar 25 20:05:31 2018 +0100

    Fix uninitialized warning (#560)

commit 7b03df7ff76844a39359e9233f31ca8cdb073313
Author: Eric <eric@efcs.ca>
Date:   Fri Mar 23 16:10:47 2018 -0600

    Add tests to verify assembler output -- Fix DoNotOptimize. (#530)
    
    * Add tests to verify assembler output -- Fix DoNotOptimize.
    
    For things like `DoNotOptimize`, `ClobberMemory`, and even `KeepRunning()`,
    it is important exactly what assembly they generate. However, we currently
    have no way to test this. Instead it must be manually validated every
    time a change occurs -- including a change in compiler version.
    
    This patch attempts to introduce a way to test the assembled output automatically.
    It's mirrors how LLVM verifies compiler output, and it uses LLVM FileCheck to run
    the tests in a similar way.
    
    The tests function by generating the assembly for a test in CMake, and then
    using FileCheck to verify the // CHECK lines in the source file are found
    in the generated assembly.
    
    Currently, the tests only run on 64-bit x86 systems under GCC and Clang,
    and when FileCheck is found on the system.
    
    Additionally, this patch tries to improve the code gen from DoNotOptimize.
    This should probably be a separate change, but I needed something to test.
    
    * Disable assembly tests on Bazel for now
    
    * Link FIXME to github issue
    
    * Fix Tests on OS X
    
    * fix strip_asm.py to work on both Linux and OS X like targets

commit df60aeb2667e140a6c6ae93e9e1d8eb3d33d72ab
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Mar 23 11:45:15 2018 +0000

    Rely on compiler intrinsics to identify regex engine. (#555)
    
    Having the copts set on a per-target level can lead to ODR violations
    in some cases. Avoid this by ensuring the regex engine is picked
    through compiler intrinsics in the header directly.

commit e668e2a1baaa969a8e5a9220e3949e3202dea9e8
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 21 13:47:25 2018 -0600

    Fix #552 - GCC and Clang warn on possibly invalid offsetof usage.
    
    This patch disables the -Winvalid-offsetof warning for GCC and Clang
    when using it to check the cache lines of the State object.
    
    Technically this usage of offsetof is undefined behavior until C++17.
    However, all major compilers support this application as an extension,
    as demonstrated by the passing static assert (If a compiler encounters UB
    during evaluation of a constant expression, that UB must be diagnosed).
    Unfortunately, Clang and GCC also produce a warning about it.
    
    This patch temporarily suppresses the warning using #pragma's in the
    source file (instead of globally suppressing the warning in the build systems).
    This way the warning is ignored for both CMake and Bazel builds without
    having to modify either build system.

commit 68e228944e2da1b3702c6d64b01f559c8b8b91f1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 21 13:27:04 2018 -0600

    Fix #538 - gtest.h not found when building with older CMake versions.
    
    Older CMake versions, in particular 2.8, don't seem to correctly handle
    interface include directories. This causes failures when building the
    tests. Additionally, older CMake versions use a different library install
    directory than expected (i.e. they use lib/<target-triple>). This caused
    certain tests to fail to link.
    
    This patch fixes both those issues. The first by manually adding the
    correct include directory when building the tests. The second by specifying
    the library output directory when configuring the GTest build.

commit 674d0498b80097d8bc720eaa7980805b5332c7ad
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Mar 16 10:14:38 2018 +0000

    Move thread classes out to clean up monolithic code (#554)

commit a9beffda0b89a6995372100456a4ad894d29b93b
Author: jmillikin-stripe <jmillikin@stripe.com>
Date:   Thu Mar 8 04:48:46 2018 -0800

    Add support for building with Bazel. (#533)
    
    * Add myself to CONTRIBUTORS under the corp CLA for Stripe, Inc.
    
    * Add support for building with Bazel.
    
    Limitations compared to existing CMake rules:
    * Defaults to using C++11 `<regex>`, with an override via Bazel flag
      `--define` of `google_benchmark.have_regex`. The TravisCI config sets
      the regex implementation to `posix` because it uses ancient compilers.
    * Debug vs Opt mode can't be set per test. TravisCI runs all the tests
      in debug mode to satisfy `diagnostics_test`, which depends on `CHECK`
      being live.
    
    * Set Bazel workspace name so other repos can refer to it by stable name.
    
    This is recommended by the Bazel style guide to avoid each dependent
    workspace defining its own name for the dependency.

commit 61497236ddc0d797a47ef612831fb6ab34dc5c9d
Author: Wink Saville <wink@saville.com>
Date:   Wed Mar 7 03:20:06 2018 -0800

    Make string_util naming more consistent (#547)
    
    * Rename StringXxx to StrXxx in string_util.h and its users
    
    This makes the naming consistent within string_util and moves is the
    Abseil convention.
    
    * Style guide is 2 spaces before end of line "//" comments
    
    * Rename StrPrintF/StringPrintF to StrFormat for absl compatibility.

commit f48a28d12a762feb5469dee397adb91d09bc4cd6
Author: Wink Saville <wink@saville.com>
Date:   Tue Mar 6 10:15:03 2018 -0800

    Do not let StrCat be renamed to lstrcatA (#546)
    
    On Windows the Shlwapi.h file has a macro:
    
      #define StrCat lstrcatA
    
    And benchmark/src/string_util.h defines StrCat and it is renamed to
    lstrcatA if we don't undef the macro in Shlwapi.h. This is an innocuous
    bug if string_util.h is included after Shlwapi.h, but it is a compile
    error if string_util.h is included before Shlwapi.h.
    
    This fixes issue #545.

commit 69a52cff4fdc6a12b639c0d2ec532f6f4ab65c48
Author: Wink Saville <wink@saville.com>
Date:   Tue Mar 6 03:44:25 2018 -0800

    Spelling fixes (#543)
    
    Upstream spelling fix changes from Pony, ec47ba8f565726414552f4bbf97d7,
    by ka7@la-evento.com that effected google/benchmark.

commit 47df49e5731fd795043bd40c0285ba44ab3e2dbb
Author: alekseyshl <alekseys@google.com>
Date:   Fri Mar 2 03:53:58 2018 -0800

    Add Solaris support (#539)
    
    * Add Solaris support
    
    Define BENCHMARK_OS_SOLARIS for Solaris.
    
    Platform specific implementations added:
    * number of CPUs detection
    * CPU cycles per second detection
    * Thread CPU usage
    * Process CPU usage
    
    * Remove the special case for per process CPU time for Solaris, it's the same as the default.

commit ff2c255af5bb2fc2e5cd3b3685f0c6283117ce73
Author: Robert Guo <robertguo@me.com>
Date:   Fri Mar 2 06:22:03 2018 -0500

    Use STCK to get the CPU clock on s390x (#540)

commit 56f52ee228783547f544d9ac4a533574b9010e3f
Author: Eric <eric@efcs.ca>
Date:   Wed Feb 21 09:43:57 2018 -0700

    Print the executable name as part of the context. (#534)
    
    * Print the executable name as part of the context.
    
    A common use case of the library is to run two different
    versions of a benchmark to compare them. In my experience
    this often means compiling a benchmark twice, renaming
    one of the executables, and then running the executables
    back-to-back. In this case the name of the executable
    is important contextually information.  Unfortunately the
    benchmark does not report this information.
    
    This patch adds the executable name to the context reported
    by the benchmark.
    
    * attempt to fix tests on Windows
    
    * attempt to fix tests on Windows

commit e9a49be7f1fd6e3717687e42ad318957e8cd6c8e
Author: Jonathan Wakely <github@kayari.org>
Date:   Wed Feb 21 16:42:16 2018 +0000

    Update note about linking with pthreads (#536)

commit 19048b7b65875e08c1e882e644a7a5f9bcfd3f82
Author: Jonathan Wakely <github@kayari.org>
Date:   Wed Feb 21 16:41:52 2018 +0000

    Fix typo in README.md (#535)

commit 858688b845b86dc43a7e23f8ec0f94a8e63bfe20
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Feb 21 00:54:19 2018 -0700

    Ensure std::iterator_traits<StateIterator> instantiates.
    
    Due to ADL lookup performed on the begin and end functions
    of `for (auto _ : State)`, std::iterator_traits may get
    incidentally instantiated. This patch ensures the library
    can tolerate that.

commit 6ecf8a8e80b92a7292558ae32466b4df331c851d
Author: Ian McKellar <ian@mckellar.org>
Date:   Wed Feb 14 13:17:12 2018 -0800

    Don't include <sys/resource.h> on Fuchsia. (#531)
    
    * Don't include <sys/resource.h> on Fuchsia.
    
    It doesn't support POSIX resource measurement and timing APIs.
    
    Change-Id: Ifab4bac4296575f042c699db1ce5a4f7c2d82893
    
    * Add BENCHMARK_OS_FUCHSIA for Fuchsia
    
    Change-Id: Ic536f9625e413270285fbfd08471dcb6753ddad1

commit 207b9c7aeccd70a1c11a27504e1627ef9f8b5938
Author: Eric <eric@efcs.ca>
Date:   Wed Feb 14 13:44:41 2018 -0700

    Improve State packing: put important members on first cache line. (#527)
    
    * Improve State packing: put important members on first cache line.
    
    This patch does a few different things to ensure commonly accessed
    data is on the first cache line of the `State` object.
    
    First, it moves the `error_occurred_` member to reside after
    the `started_` and `finished_` bools, since there was internal
    padding there that was unused.
    
    Second, it moves `batch_leftover_` and `max_iterations` further up
    in the struct declaration. These variables are used in the calculation
    of `iterations()` which users might call within the loop. Therefore
    it's more important they exist on the first cache line.
    
    Finally, this patch turns the bool members into bitfields. Although
    this shouldn't have much of an effect currently, because padding is
    still needed between the last bool and the first size_t, it should
    help in future changes that require more "bool like" members.
    
    * Remove bitfield change for now
    
    * Move bools (and their padding) to end of "first cache line" vars.
    
    I think it makes the most sense to move the padding required
    following the group of bools to the end of the variables we want
    on the first cache line.
    
    This also means that the `total_iterations_` variable, which is the
    most accessed, has the same address as the State object.
    
    * Fix static assertion after moving bools

commit 3924ee7b8a6c6427083662c861c0f51be2a38bd9
Author: Samuel Panzer <espanz@gmail.com>
Date:   Tue Feb 13 15:54:46 2018 -0500

    Fixups following addition of KeepRunningBatch (296ec5693) (#526)
    
    * Support State::KeepRunningBatch().
    
    State::KeepRunning() can take large amounts of time relative to quick
    operations (on the order of 1ns, depending on hardware). For such
    sensitive operations, it is recommended to run batches of repeated
    operations.
    
    This commit simplifies handling of total_iterations_. Rather than
    predecrementing such that total_iterations_ == 1 signals that
    KeepRunning() should exit, total_iterations_ == 0 now signals the
    intention for the benchmark to exit.
    
    * Create better fast path in State::KeepRunningBatch()
    
    * Replace int parameter with size_t to fix signed mismatch warnings
    
    * Ensure benchmark State has been started even on error.
    
    * Simplify KeepRunningBatch()
    
    * Implement KeepRunning() in terms of KeepRunningBatch().
    
    * Improve codegen by helping the compiler undestand dead code.
    
    * Dummy commit for build bots' benefit.

commit 37dbe80f9b190b263f6eb437e93b9c8fa4df2849
Author: Eric <eric@efcs.ca>
Date:   Mon Feb 12 21:28:23 2018 -0700

    Attempt to fix travis timeouts during apt-get. (#528)
    
    * Attempt to fix travis timeouts during apt-get.
    
    During some builds, travis fails to update the apt-get indexes.
    This causes the build to fail in different ways.
    
    This patch attempts to avoid this issue by manually calling
    apt-get update. I'm not sure if it'll work, but it's worth a try.
    
    * Fix missing semicolons in command

commit dd8dcc8da1fb03cced6129041e3f06a607889346
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Feb 12 19:07:19 2018 -0700

    Make output tests more stable on slow machines.
    
    The appveyor bot sometimes fails because the time it
    outputs is 6 digits long, but the output test regex expects at most
    5 digits. This patch increases the size to 6 digits to placate the
    test. This should not *really* affect the correctness of the test.

commit 562f9d256d30fdd2a4200109e0f79ba57d05f488
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Feb 12 18:43:32 2018 -0700

    Fix GTest workaround on MSVC

commit 906749a48e3ead4dda1e61378759c11267451fe0
Author: Eric <eric@efcs.ca>
Date:   Mon Feb 12 18:11:01 2018 -0700

    Work around Gtest build failure caused by -Werror=unused-function. (#529)
    
    We're propagating extra warning flags to the gtest build, which
    can cause it to fail. This patch prevents passing "-Wextra" to
    gtest, since the library itself doesn't test with that flag.

commit 296ec5693e7dae47c50244a70297172fab69ccae
Author: Samuel Panzer <espanz@gmail.com>
Date:   Fri Feb 9 23:57:04 2018 -0500

    Support State::KeepRunningBatch(). (#521)
    
    * Support State::KeepRunningBatch().
    
    State::KeepRunning() can take large amounts of time relative to quick
    operations (on the order of 1ns, depending on hardware). For such
    sensitive operations, it is recommended to run batches of repeated
    operations.
    
    This commit simplifies handling of total_iterations_. Rather than
    predecrementing such that total_iterations_ == 1 signals that
    KeepRunning() should exit, total_iterations_ == 0 now signals the
    intention for the benchmark to exit.
    
    * Create better fast path in State::KeepRunningBatch()
    
    * Replace int parameter with size_t to fix signed mismatch warnings
    
    * Ensure benchmark State has been started even on error.
    
    * Simplify KeepRunningBatch()

commit bc83262f9d687ac7e31509b3f5177ff391a7452a
Author: Tim <timothy.joseph.ohearn@gmail.com>
Date:   Sat Feb 3 23:04:36 2018 -0600

    .vs/ and CmakeSettings.json to gitignore (#522)

commit df415adb2abac7fc275c2cd25b0ef6e117688e1e
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Jan 29 08:38:47 2018 -0800

    Some small clang-tidy fixes (#520)

commit 4fe0206b658c6aa1d74a2278c26b50f0938a4e64
Author: oskidan <al.skidan@gmail.com>
Date:   Fri Jan 19 19:17:01 2018 +0200

    Fixes compilation error caused by integer precision loss due to implicit (#518)
    
    conversion in sysinfo.cc

commit 9f5694ceb6ed34c1eecb1be17415f3fb2d19828f
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Jan 11 17:22:45 2018 -0800

    Wrap COMPILER macros. (#514)
    
    Some command line or build systems may already set these (eg, bazel) so
    make sure that takes priority.
    
    Fixes #513

commit e1c3a83b8197cf02e794f61228461c27d4e78cfb
Merge: 052421c 778b85a
Author: Eric <eric@efcs.ca>
Date:   Fri Jan 5 12:51:03 2018 -0700

    Merge pull request #509 from efcs/fix-gtest-install
    
    Prevent GTest and GMock from being installed with Google Benchmark.

commit 778b85a7a938edccdb77b6c4fc0610999131bc1a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jan 5 11:04:22 2018 -0700

    Prevent GTest and GMock from being installed with Google Benchmark.
    
    When users satisfy the GTest dependancy by placing a googletest
    directory in the project, the targets from GTest and GMock incorrectly
    get installed along side this library. We shouldn't be installing
    our test dependancies.
    
    This patch forces the options that control installation for googletest
    to OFF.

commit 052421c82337774e769051581a00e66dca58c122
Author: Winston Du <wenhaodu694@gmail.com>
Date:   Thu Jan 4 19:13:34 2018 -0500

    Updated documentation. (#503)
    
    For people who get this library via CMake's AddExternalProject like me.
    Would like a long term tutorial from someone who really understands CMake on how to actually link an externalproject's dependencies to another added external project.

commit e4ccad7c4a36f2a6dfaa2d391c00c5ec4ea63d7c
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Dec 14 09:40:26 2017 -0800

    Update README.md

commit 7db02be244cb2a960c3da48cbdb5018c7a72b5d7
Author: Eric <eric@efcs.ca>
Date:   Wed Dec 13 16:26:47 2017 -0700

    Add support for GTest based unit tests. (#485)
    
    * Add support for GTest based unit tests.
    
    As Dominic and I have previously discussed, there is some
    need/desire to improve the testing situation in Google Benchmark.
    
    One step to fixing this problem is to make it easier to write
    unit tests by adding support for GTest, which is what this patch does.
    
    By default it looks for an installed version of GTest. However the
    user can specify -DBENCHMARK_BUILD_EXTERNAL_GTEST=ON to instead
    download, build, and use copy of gtest from source. This is
    quite useful when Benchmark is being built in non-standard configurations,
    such as against libc++ or in 32 bit mode.

commit de725e5a7c788311e802f5ed0c3763331a9db60b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Dec 13 14:51:56 2017 -0700

    Document new 'v2' branch meant for unstable development.
    
    This patch documents the newly added v2 branch, which will
    be used to stage, test, and receive feedback on upcoming
    features, most of which will be breaking changes which can't
    be directly applied to master.

commit 7f2d2cd5b9d8f892862e9c7974ede413c76f9bff
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 7 14:20:59 2017 -0800

    fix xcode travis builds by skipping mkdir errors

commit 5b2c08668c2bab4120b02830d38416c3402b7894
Author: Louis Dionne <ldionne.2@gmail.com>
Date:   Sun Dec 3 17:45:07 2017 -0800

    Enforce using a semicolon after BENCHMARK_MAIN to remove compiler warnings (#495)

commit 0bbaeeaf7a557469c1f672ee3b7ca926e1a13e88
Author: Victor Costan <costan@gmail.com>
Date:   Thu Nov 30 15:21:32 2017 -0800

    Add GCC on OSX to list of Travis CI configurations. (#492)

commit 95a1435b8171f7e781fe0465bff8146609a488c1
Author: Victor Costan <costan@gmail.com>
Date:   Thu Nov 30 08:05:38 2017 -0800

    Fix compilation error with GCC on OSX (issue #490). (#491)

commit c45f01866bdfe7c62a83b51dfb974acb7fa5cab6
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Wed Nov 29 23:48:43 2017 +0300

    CMake: implement LTO for clang. Fixes #478 (#487)
    
    * CMake: implement LTO for clang. Fixes #478
    
    * LTO: add basic docs about required executables.

commit eae42212ced6a5cbd5658b629f70d8851a922b61
Author: Kishan Kumar <Kumar-Kishan@users.noreply.github.com>
Date:   Wed Nov 29 23:21:19 2017 +0545

    Added the installation guide for Ubuntu (#489)
    
    * Initial CLA Requirement
    
    * Added Installation steps to the Readme.md
    
    * Fixed error in running benchmark of Installation
    
    * Remove unwanted commands
    
    Removed the lengthy install procedure with suggested install mechanism

commit ec5684ed759e01b62a82a21cf1a268da3b8ecc5d
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Mon Nov 27 20:01:01 2017 +0300

    Console reporter: properly account for the lenght of custom counter names (#484)
    
    Old output example:
    ```
    Benchmark                                                 Time           CPU Iterations  CPUTime,s   Pixels/s ThreadingFactor
    ------------------------------------------------------------------------------------------------------------------------------
    20170525_0036TEST.RAF/threads:8/real_time                45 ms         45 ms         16   0.718738 79.6277M/s   0.999978   2.41419GB/s    22.2613 items/s FileSize,MB=111.050781; MPix=57.231360
    ```
    
    New output example:
    ```
    Benchmark                                                 Time           CPU Iterations  CPUTime,s   Pixels/s ThreadingFactor
    ------------------------------------------------------------------------------------------------------------------------------
    20170525_0036TEST.RAF/threads:8/real_time                45 ms         45 ms         16   0.713575 80.1713M/s        0.999571   2.43067GB/s    22.4133 items/s FileSize,MB=111.050781; MPix=57.231360
    ```

commit 2ec7399cf1682f1e4f8f9b9f777a81e1a0cce74b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Nov 26 13:55:37 2017 -0700

    Improve BENCHMARK_UNREACHABLE() implementation.
    
    This patch primarily changes the BENCHMARK_UNREACHABLE()
    implementation under MSVC to use __assume(false) instead
    of being a NORETURN function, which ironically caused
    unreachable code warnings.
    
    Second, since the NOTHROW function attempt generated the
    warnings we meant to avoid, it has been replaced with a dummy
    null statement.

commit 11dc36822b2aaccb51bb1c75dbd43d2026b23cf6
Author: Eric <eric@efcs.ca>
Date:   Sun Nov 26 13:33:01 2017 -0700

    Improve CPU Cache info reporting -- Add Windows support. (#486)
    
    * Improve CPU Cache info reporting -- Add Windows support.
    
    This patch does a couple of thing regarding CPU Cache reporting.
    
    First, it adds an implementation on Windows. Second it fixes
    the JSONReporter to correctly (and actually) output the CPU
    configuration information.
    
    And finally, third, it detects and reports the number of
    physical CPU's that share the same cache.

commit 27e0b439cf0f9be329f617056795b4e5c3612f34
Author: Eric <eric@efcs.ca>
Date:   Wed Nov 22 09:33:52 2017 -0700

    Refactor System information collection -- Add CPU Cache Info (#483)
    
    * Refactor System information collection.
    
    This patch refactors the system information collection,
    and in particular information about the target CPU. The
    motivation is to make it easier to access CPU information,
    and easier to add new information as need be.
    
    This patch additionally adds information about the cache
    sizes of the CPU.
    
    * Address review comments: Clean up integer types.
    
    This commit cleans up the integer types used in ValueUnion to
    follow the Google style guide.
    
    Additionally it adds a BENCHMARK_UNREACHABLE macro to assist
    in documenting/catching unreachable code paths.
    
    * Rename ValueUnion accessors.

commit aad6a5fa767529d3353bd3beb89e126c7b0868ca
Author: Kamil Rytarowski <krytarowski@users.noreply.github.com>
Date:   Fri Nov 17 17:46:08 2017 +0100

    Add NetBSD support (#482)
    
    Define BENCHMARK_OS_NETBSD for NetBSD.
    
    Add detection of cpuinfo_cycles_per_second and cpuinfo_num_cpus.
    This code shared detection of these properties with FreeBSD.

commit 0c3ec998c4cc6b7bba7226a3b35a7917613b3802
Author: Steinar H. Gunderson <steinar+github@gunderson.no>
Date:   Wed Nov 15 20:51:22 2017 +0100

    Add a pkg-config file, for the benefit of projects not using CMake. (#480)

commit ed5764ea2815aa7cfbdf5ad2693a99fab10e0451
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Nov 13 09:20:12 2017 -0800

    Add doc specifying the scope of the timing calculation
    
    Fixes #479

commit 5e66248b44747fcfbbc096fa2428680358892f73
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Wed Nov 8 00:35:25 2017 +0300

    [Tools] A new, more versatile benchmark output compare tool (#474)
    
    * [Tools] A new, more versatile benchmark output compare tool
    
    Sometimes, there is more than one implementation of some functionality.
    And the obvious use-case is to benchmark them, which is better?
    
    Currently, there is no easy way to compare the benchmarking results
    in that case:
        The obvious solution is to have multiple binaries, each one
    containing/running one implementation. And each binary must use
    exactly the same benchmark family name, which is super bad,
    because now the binary name should contain all the info about
    benchmark family...
    
    What if i tell you that is not the solution?
    What if we could avoid producing one binary per benchmark family,
    with the same family name used in each binary,
    but instead could keep all the related families in one binary,
    with their proper names, AND still be able to compare them?
    
    There are three modes of operation:
    1. Just compare two benchmarks, what `compare_bench.py` did:
    ```
    $ ../tools/compare.py benchmarks ./a.out ./a.out
    RUNNING: ./a.out --benchmark_out=/tmp/tmprBT5nW
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:16:44
    ------------------------------------------------------
    Benchmark               Time           CPU Iterations
    ------------------------------------------------------
    BM_memcpy/8            36 ns         36 ns   19101577   211.669MB/s
    BM_memcpy/64           76 ns         76 ns    9412571   800.199MB/s
    BM_memcpy/512          84 ns         84 ns    8249070   5.64771GB/s
    BM_memcpy/1024        116 ns        116 ns    6181763   8.19505GB/s
    BM_memcpy/8192        643 ns        643 ns    1062855   11.8636GB/s
    BM_copy/8             222 ns        222 ns    3137987   34.3772MB/s
    BM_copy/64           1608 ns       1608 ns     432758   37.9501MB/s
    BM_copy/512         12589 ns      12589 ns      54806   38.7867MB/s
    BM_copy/1024        25169 ns      25169 ns      27713   38.8003MB/s
    BM_copy/8192       201165 ns     201112 ns       3486   38.8466MB/s
    RUNNING: ./a.out --benchmark_out=/tmp/tmpt1wwG_
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:16:53
    ------------------------------------------------------
    Benchmark               Time           CPU Iterations
    ------------------------------------------------------
    BM_memcpy/8            36 ns         36 ns   19397903   211.255MB/s
    BM_memcpy/64           73 ns         73 ns    9691174   839.635MB/s
    BM_memcpy/512          85 ns         85 ns    8312329   5.60101GB/s
    BM_memcpy/1024        118 ns        118 ns    6438774   8.11608GB/s
    BM_memcpy/8192        656 ns        656 ns    1068644   11.6277GB/s
    BM_copy/8             223 ns        223 ns    3146977   34.2338MB/s
    BM_copy/64           1611 ns       1611 ns     435340   37.8751MB/s
    BM_copy/512         12622 ns      12622 ns      54818   38.6844MB/s
    BM_copy/1024        25257 ns      25239 ns      27779   38.6927MB/s
    BM_copy/8192       205013 ns     205010 ns       3479    38.108MB/s
    Comparing ./a.out to ./a.out
    Benchmark                 Time             CPU      Time Old      Time New       CPU Old       CPU New
    ------------------------------------------------------------------------------------------------------
    BM_memcpy/8            +0.0020         +0.0020            36            36            36            36
    BM_memcpy/64           -0.0468         -0.0470            76            73            76            73
    BM_memcpy/512          +0.0081         +0.0083            84            85            84            85
    BM_memcpy/1024         +0.0098         +0.0097           116           118           116           118
    BM_memcpy/8192         +0.0200         +0.0203           643           656           643           656
    BM_copy/8              +0.0046         +0.0042           222           223           222           223
    BM_copy/64             +0.0020         +0.0020          1608          1611          1608          1611
    BM_copy/512            +0.0027         +0.0026         12589         12622         12589         12622
    BM_copy/1024           +0.0035         +0.0028         25169         25257         25169         25239
    BM_copy/8192           +0.0191         +0.0194        201165        205013        201112        205010
    ```
    
    2. Compare two different filters of one benchmark:
    (for simplicity, the benchmark is executed twice)
    ```
    $ ../tools/compare.py filters ./a.out BM_memcpy BM_copy
    RUNNING: ./a.out --benchmark_filter=BM_memcpy --benchmark_out=/tmp/tmpBWKk0k
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:37:28
    ------------------------------------------------------
    Benchmark               Time           CPU Iterations
    ------------------------------------------------------
    BM_memcpy/8            36 ns         36 ns   17891491   211.215MB/s
    BM_memcpy/64           74 ns         74 ns    9400999   825.646MB/s
    BM_memcpy/512          87 ns         87 ns    8027453   5.46126GB/s
    BM_memcpy/1024        111 ns        111 ns    6116853    8.5648GB/s
    BM_memcpy/8192        657 ns        656 ns    1064679   11.6247GB/s
    RUNNING: ./a.out --benchmark_filter=BM_copy --benchmark_out=/tmp/tmpAvWcOM
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:37:33
    ----------------------------------------------------
    Benchmark             Time           CPU Iterations
    ----------------------------------------------------
    BM_copy/8           227 ns        227 ns    3038700   33.6264MB/s
    BM_copy/64         1640 ns       1640 ns     426893   37.2154MB/s
    BM_copy/512       12804 ns      12801 ns      55417   38.1444MB/s
    BM_copy/1024      25409 ns      25407 ns      27516   38.4365MB/s
    BM_copy/8192     202986 ns     202990 ns       3454   38.4871MB/s
    Comparing BM_memcpy to BM_copy (from ./a.out)
    Benchmark                               Time             CPU      Time Old      Time New       CPU Old       CPU New
    --------------------------------------------------------------------------------------------------------------------
    [BM_memcpy vs. BM_copy]/8            +5.2829         +5.2812            36           227            36           227
    [BM_memcpy vs. BM_copy]/64          +21.1719        +21.1856            74          1640            74          1640
    [BM_memcpy vs. BM_copy]/512        +145.6487       +145.6097            87         12804            87         12801
    [BM_memcpy vs. BM_copy]/1024       +227.1860       +227.1776           111         25409           111         25407
    [BM_memcpy vs. BM_copy]/8192       +308.1664       +308.2898           657        202986           656        202990
    ```
    
    3. Compare filter one from benchmark one to filter two from benchmark two:
    (for simplicity, the benchmark is executed twice)
    ```
    $ ../tools/compare.py benchmarksfiltered ./a.out BM_memcpy ./a.out BM_copy
    RUNNING: ./a.out --benchmark_filter=BM_memcpy --benchmark_out=/tmp/tmp_FvbYg
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:38:27
    ------------------------------------------------------
    Benchmark               Time           CPU Iterations
    ------------------------------------------------------
    BM_memcpy/8            37 ns         37 ns   18953482   204.118MB/s
    BM_memcpy/64           74 ns         74 ns    9206578   828.245MB/s
    BM_memcpy/512          91 ns         91 ns    8086195   5.25476GB/s
    BM_memcpy/1024        120 ns        120 ns    5804513   7.95662GB/s
    BM_memcpy/8192        664 ns        664 ns    1028363   11.4948GB/s
    RUNNING: ./a.out --benchmark_filter=BM_copy --benchmark_out=/tmp/tmpDfL5iE
    Run on (8 X 4000 MHz CPU s)
    2017-11-07 21:38:32
    ----------------------------------------------------
    Benchmark             Time           CPU Iterations
    ----------------------------------------------------
    BM_copy/8           230 ns        230 ns    2985909   33.1161MB/s
    BM_copy/64         1654 ns       1653 ns     419408   36.9137MB/s
    BM_copy/512       13122 ns      13120 ns      53403   37.2156MB/s
    BM_copy/1024      26679 ns      26666 ns      26575   36.6218MB/s
    BM_copy/8192     215068 ns     215053 ns       3221   36.3283MB/s
    Comparing BM_memcpy (from ./a.out) to BM_copy (from ./a.out)
    Benchmark                               Time             CPU      Time Old      Time New       CPU Old       CPU New
    --------------------------------------------------------------------------------------------------------------------
    [BM_memcpy vs. BM_copy]/8            +5.1649         +5.1637            37           230            37           230
    [BM_memcpy vs. BM_copy]/64          +21.4352        +21.4374            74          1654            74          1653
    [BM_memcpy vs. BM_copy]/512        +143.6022       +143.5865            91         13122            91         13120
    [BM_memcpy vs. BM_copy]/1024       +221.5903       +221.4790           120         26679           120         26666
    [BM_memcpy vs. BM_copy]/8192       +322.9059       +323.0096           664        215068           664        215053
    ```
    
    * [Docs] Document tools/compare.py
    
    * [docs] Document how the change is calculated

commit 90aa8665b5080f7a931567fbc92cda883bc870b4
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Nov 7 10:33:07 2017 -0800

    Reorder inline to avoid warning on MSVC (#469)
    
    Fixes #467

commit f4009ef8e3c3b29e3fb3b8846b42f58e0e23a5a2
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Nov 7 10:30:17 2017 -0800

    Fix #476. Explicit coersion of size_t to boolean (#477)

commit 72a4581caf5897f94256dea4be7efa745b46f719
Author: Eric <eric@efcs.ca>
Date:   Tue Nov 7 10:44:39 2017 -0700

    Fix #382 - MinGW often reports negative CPU times. (#475)
    
    When stopping a timer, the current time is subtracted
    from the start time. However, when the times are identical,
    or sufficiently close together, the subtraction can result
    in a negative number.
    
    For some reason MinGW is the only platform where this problem
    manifests. I suspect it's due to MinGW specific behavior in either
    the CPU timing code, floating point model, or printf formatting.
    
    Either way, the fix for MinGW should be correct across all platforms.

commit f65c6d9a2cfb01d268d0f0aa7aafa2c2ff9f1b8f
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Nov 6 08:53:23 2017 -0800

    Remove deprecated headers (#473)

commit 1e52560157d73d7e180e6e2c8d928be5a8e99795
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Nov 3 12:45:16 2017 -0700

    Add releasing doc (#472)

commit 336bb8db986cc52cdf0cefa0a7378b9567d1afee
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Fri Nov 3 20:00:29 2017 +0300

    Update AUTHORS/CONTRIBUTORS (#471)
    
    As requested, in a pr form :)

commit 4463a60efe6d70ae9af2d58261f30d2fff06920f
Author: Stefan Sauer <ensonic@hora-obscura.de>
Date:   Thu Nov 2 16:34:06 2017 +0100

    Mention how to disable CPU frequency scaling while running the benchmark. (#466)
    
    Describe how to use the cpupower command to disable CPU frequency scaling.
    Document this, since there are other ways that don't see to have the same
    effect. See #325

commit fa341e51cb7f6bce69a7577f4000381a03f61c70
Author: Leo Koppel <lkoppel@uwaterloo.ca>
Date:   Tue Oct 31 14:00:39 2017 -0400

     Improve BM_SetInsert example (#465)
    
    * Fix BM_SetInsert example
    
    Move declaration of `std::set<int> data` outside the timing loop, so that the
    destructor is not timed.
    
    * Speed up BM_SetInsert test
    
    Since the time taken to ConstructRandomSet() is so large compared to the time
    to insert one element, but only the latter is used to determine number of
    iterations, this benchmark now takes an extremely long time to run in
    benchmark_test.
    
    Speed it up two ways:
      - Increase the Ranges() parameters
      - Cache ConstructRandomSet() result (it's not random anyway), and do only
        O(N) copy every iteration
    
    * Fix same issue in BM_MapLookup test
    
    * Make BM_SetInsert test consistent with README
    
    - Use the same Ranges everywhere, but increase the 2nd range
    - Change order of Args() calls in README to more closely match the result of Ranges
    - Don't cache ConstructRandomSet, since it doesn't make sense in README
    - Get a smaller optimization inside it, by givint a hint to insert()

commit 491360b833aaab96818dce256a8409f6296dd995
Author: Yangqing Jia <jiayq84@gmail.com>
Date:   Fri Oct 20 13:49:37 2017 -0700

    Add option to install benchmark (#463)
    
    * Add option to install benchmark
    
    * Change to BENCHMARK_ENABLE_INSTALL per @dominichamon

commit 25acf220a44ccc41104a690731fcf646cc3e8192
Author: Eric <eric@efcs.ca>
Date:   Tue Oct 17 12:17:02 2017 -0600

    Refactor most usages of KeepRunning to use the perfered ranged-for. (#459)
    
    Recently the library added a new ranged-for variant of the KeepRunning
    loop that is much faster. For this reason it should be preferred in all
    new code.
    
    Because a library, its documentation, and its tests should all embody
    the best practices of using the library, this patch changes all but a
    few usages of KeepRunning() into for (auto _ : state).
    
    The remaining usages in the tests and documentation persist only
    to document and test behavior that is different between the two formulations.
    
    Also note that because the range-for loop requires C++11, the KeepRunning
    variant has not been deprecated at this time.

commit 22fd1a556eadce4f314a9819ed29cc886e9ba552
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Oct 17 10:24:13 2017 -0600

    Fix and document SkipWithError(...) using ranged-for loop.

commit a37fc0c48a73beefeca240e9fa853fa2def1dd06
Author: Eric <eric@efcs.ca>
Date:   Tue Oct 17 09:40:44 2017 -0600

    Improve KeepRunning loop performance to be similar to the range-based for. (#460)
    
    This patch improves the performance of the KeepRunning loop in two ways:
    
    (A) it removes the dependency on the max_iterations variable, preventing
    it from being loaded every iteration.
    
    (B) it loops to zero, instead of to an upper bound. This allows a single
    decrement instruction to be used instead of a arithmetic op followed by a
    comparison.

commit 2fc2ea0e45578704378ae452b6745d0c54b528fb
Author: Fred Tingaud <ftingaud@hotmail.com>
Date:   Mon Oct 16 18:17:17 2017 +0200

    Correct typo in sample code for range-based for loop. (#458)

commit cacd3218080fa648efdfe0b09227ab7f96fb6bb2
Author: Raúl Marín <git@rmr.ninja>
Date:   Fri Oct 13 17:17:02 2017 +0100

    Avoid implicit float to double conversion (#457)
    
    Triggered by -Werror=double-promotion

commit 05267559447a610476515d1d089d142e5941f61b
Author: Eric <eric@efcs.ca>
Date:   Tue Oct 10 09:56:42 2017 -0600

    Add C++11 Ranged For loop alternative to KeepRunning (#454)
    
    * Add C++11 Ranged For loop alternative to KeepRunning
    
    As pointed out by @astrelni and @dominichamon, the KeepRunning
    loop requires a bunch of memory loads and stores every iterations,
    which affects the measurements.
    
    The main reason for these additional loads and stores is that the
    State object is passed in by reference, making its contents externally
    visible memory, and the compiler doesn't know it hasn't been changed
    by non-visible code.
    
    It's also possible the large size of the State struct is hindering
    optimizations.
    
    This patch allows the `State` object to be iterated over using
    a range-based for loop. Example:
    
    void BM_Foo(benchmark::State& state) {
    	for (auto _ : state) {
    		[...]
    	}
    }
    
    This formulation is much more efficient, because the variable counting
    the loop index is stored in the iterator produced by `State::begin()`,
    which itself is stored in function-local memory and therefore not accessible
    by code outside of the function. Therefore the compiler knows the iterator
    hasn't been changed every iteration.
    
    This initial patch and idea was from Alex Strelnikov.
    
    * Fix null pointer initialization in C++03

commit f3cd636f18aff1dc47837b37ccee5331c6427f64
Author: mwinterb <mike.winterberg@gmail.com>
Date:   Mon Oct 9 15:19:01 2017 -0700

    Always use inline asm DoNotOptimize with clang. (#452)
    
    * Always use inline asm DoNotOptimize with clang.
    
    clang-cl masquerades as MSVC but not GCC, so it was using the
    MSVC-compatible definitions of DoNotOptimize and ClobberMemory.
    Presumably, it's better in general to use the targeted assembly for
    this functionality (the codegen is different), but the specific issue
    is that clang-cl deprecates the usage of _ReadWriteBarrier, and this
    gets rid of that warning.
    
    * triggering another AppVeyor run

commit 819adb4cd111df5bbe89f8a3ecccc716b50832ca
Author: Anton Lashkov <lenton_91@mail.ru>
Date:   Mon Oct 9 23:10:37 2017 +0400

    Add macros for create benchmark with templated fixture (#451)
    
    * Add macros for create benchmark with templated fixture
    
    * Add info about templated fixtures to README.md
    
    * Add tests for templated fixtures

commit 2409cb2eb153558f66d5762a3b4228ac4e37b264
Author: Dominic Hamon <dominic@google.com>
Date:   Mon Oct 9 12:01:30 2017 -0700

    Minor move of code to cleanup up namespace spaghetti a bit

commit a96ff121b34532bb007c51ffd8e626e38decd732
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 27 11:53:16 2017 -0700

    Alphabets are hard. AUTHORS version.
    
    #448

commit 5d47e9878ff3bd6d18f3ceae4730404518346bf3
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 27 11:52:47 2017 -0700

    Alphabets are hard. CONTRIBUTORS version.
    
    #448

commit 8792dff1c9452eb5acf0374e6856b2791f6102dc
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 27 20:01:49 2017 +0200

    Remove myself from AUTHORS
    
    Covered by Google Inc here and i'm in CONTRIBUTORS

commit 359120be78c17b2293c7f03f632ec0cd1b759c4e
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 27 20:01:10 2017 +0200

    Order CONTRIBUTORS
    
    Fixes #448

commit 84a54ae9f49268d3eda9e1e1b6923775a9b2bd59
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 27 20:00:12 2017 +0200

    Organize AUTHORS
    
    Part of #448

commit 6d8339dd97afea4633e54ed4b42307aff4386040
Author: Eric <eric@efcs.ca>
Date:   Thu Sep 14 15:50:33 2017 -0600

    Fix #444 - Use BENCHMARK_HAS_CXX11 over __cplusplus. (#446)
    
    * Fix #444 - Use BENCHMARK_HAS_CXX11 over __cplusplus.
    
    MSVC incorrectly defines __cplusplus to report C++03, despite the compiler
    actually providing C++11 or greater. Therefore we have to detect C++11 differently
    for MSVC. This patch uses `_MSVC_LANG` which has been defined since
    Visual Studio 2015 Update 3; which should be sufficient for detecting C++11.
    
    Secondly this patch changes over most usages of __cplusplus >= 201103L to
    check BENCHMARK_HAS_CXX11 instead.
    
    * remove redunant comment

commit 2a05f248be98999d14975c409683fd9f1a753ba2
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Thu Sep 14 09:31:35 2017 +0200

    Improve README's basic usage example (#433)

commit 24b804273382d258b92b3c4beceed3a2ab8ddc65
Author: Andre Schroeder <schrdr.andre@gmail.com>
Date:   Wed Sep 13 23:42:45 2017 +0200

    Fix Markdown typos in readme. (#445)

commit 886585a3b79710d67eb3e7368f0cb8d748eb1d5f
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue Aug 29 02:12:18 2017 +0300

    [RFC] Tools: compare-bench.py: print change% with two decimal digits (#440)
    
    * Tools: compare-bench.py: print change% with two decimal digits
    
    Here is a comparison of before vs. after:
    ```diff
    -Benchmark                      Time           CPU      Time Old      Time New       CPU Old       CPU New
    ----------------------------------------------------------------------------------------------------------
    -BM_SameTimes                  +0.00         +0.00            10            10            10            10
    -BM_2xFaster                   -0.50         -0.50            50            25            50            25
    -BM_2xSlower                   +1.00         +1.00            50           100            50           100
    -BM_1PercentFaster             -0.01         -0.01           100            99           100            99
    -BM_1PercentSlower             +0.01         +0.01           100           101           100           101
    -BM_10PercentFaster            -0.10         -0.10           100            90           100            90
    -BM_10PercentSlower            +0.10         +0.10           100           110           100           110
    -BM_100xSlower                +99.00        +99.00           100         10000           100         10000
    -BM_100xFaster                 -0.99         -0.99         10000           100         10000           100
    -BM_10PercentCPUToTime         +0.10         -0.10           100           110           100            90
    +Benchmark                        Time             CPU      Time Old      Time New       CPU Old       CPU New
    +-------------------------------------------------------------------------------------------------------------
    +BM_SameTimes                  +0.0000         +0.0000            10            10            10            10
    +BM_2xFaster                   -0.5000         -0.5000            50            25            50            25
    +BM_2xSlower                   +1.0000         +1.0000            50           100            50           100
    +BM_1PercentFaster             -0.0100         -0.0100           100            99           100            99
    +BM_1PercentSlower             +0.0100         +0.0100           100           101           100           101
    +BM_10PercentFaster            -0.1000         -0.1000           100            90           100            90
    +BM_10PercentSlower            +0.1000         +0.1000           100           110           100           110
    +BM_100xSlower                +99.0000        +99.0000           100         10000           100         10000
    +BM_100xFaster                 -0.9900         -0.9900         10000           100         10000           100
    +BM_10PercentCPUToTime         +0.1000         -0.1000           100           110           100            90
    +BM_ThirdFaster                -0.3333         -0.3333           100            67           100            67
    
    ```
    
    So the first ("Time") column is exactly where it was, but with
    two more decimal digits. The position of the '.' in the second
    ("CPU") column is shifted right by those two positions, and the
    rest is unmodified, but simply shifted right by those 4 positions.
    
    As for the reasoning, i guess it is more or less the same as
    with #426. In some sad times, microbenchmarking is not applicable.
    In those cases, the more precise the change report is, the better.
    
    The current formatting prints not so much the percentages,
    but the fraction i'd say. It is more useful for huge changes,
    much more than 100%. That is not always the case, especially
    if it is not a microbenchmark. Then, even though the change
    may be good/bad, the change is small (<0.5% or so),
    rounding happens, and it is no longer possible to tell.
    
    I do acknowledge that this change does not fix that problem. Of
    course, confidence intervals and such would be better, and they
    would probably fix the problem. But i think this is good as-is
    too, because now the you see 2 fractional percentage digits!1
    
    The obvious downside is that the output is now even wider.
    
    * Revisit tests, more closely documents the current behavior.

commit 6e06648133f65e336489be99d0b7448bd7839463
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue Aug 29 02:10:19 2017 +0300

    Attempting to resolve a submoduling issues... (#439)

commit a271c36af93c7a3b19dfeb2aefa9ca77a58e52e4
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Thu Aug 24 02:44:29 2017 +0300

    Drop Stat1, refactor statistics to be user-providable, add median. (#428)
    
    * Drop Stat1, refactor statistics to be user-providable, add median.
    
    My main goal was to add median statistic. Since Stat1
    calculated the stats incrementally, and did not store
    the values themselves, it is was not possible. Thus,
    i have replaced Stat1 with simple std::vector<double>,
    containing all the values.
    
    Then, i have refactored current mean/stdev to be a
    function that is provided with values vector, and
    returns the statistic. While there, it seemed to make
    sense to deduplicate the code by storing all the
    statistics functions in a map, and then simply iterate
    over it. And the interface to add new statistics is
    intentionally exposed, so they may be added easily.
    
    The notable change is that Iterations are no longer
    displayed as 0 for stdev. Is could be changed, but
    i'm not sure how to nicely fit that into the API.
    
    Similarly, this dance about sometimes (for some fields,
    for some statistics) dividing by run.iterations, and
    then multiplying the calculated stastic back is also
    dropped, and if you do the math, i fail to see why
    it was needed there in the first place.
    
    Since that was the only use of stat.h, it is removed.
    
    * complexity.h: attempt to fix MSVC build
    
    * Update README.md
    
    * Store statistics to compute in a vector, ensures ordering.
    
    * Add a bit more tests for repetitions.
    
    * Partially address review notes.
    
    * Fix gcc build: drop extra ';'
    
    clang, why didn't you warn me?
    
    * Address review comments.
    
    * double() -> 0.0
    * early return

commit d70417994a3c845c49c4443e92b26a52b320a759
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Aug 21 16:05:24 2017 -0700

    Allow the definition of 1k to be flexible. (#438)
    
    When generating a human-readable number for user counters, we don't
    generally expect 1k to be 1024. This is the default due to the more
    general purpose string utility.
    
    Fixes #437

commit c7192c8a9af0a1cb4d013c589af92d6dceedef60
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Fri Aug 18 20:55:27 2017 +0300

    compare_bench.py: fixup benchmark_options. (#435)
    
    https://github.com/google/benchmark/commit/2373382284918fda13f726aefd6e2f700784797f
    reworked parsing, and introduced a regression
    in handling of the optional options that
    should be passed to both of the benchmarks.
    
    Now, unless the *first* optional argument starts with
    '-', it would just complain about that argument:
    	Unrecognized positional argument arguments: '['q']'
    which is wrong. However if some dummy arg like '-q' was
    passed first, it would then happily passthrough them all...
    
    This commit fixes benchmark_options behavior, by
    restoring original passthrough behavior for all
    the optional positional arguments.

commit 902936033d90dc42ddaa5ca5c120722d32c90602
Author: Victor Costan <costan@gmail.com>
Date:   Tue Aug 15 15:53:30 2017 -0700

    CMake: Fallback from try_run to try_compile when cross-compiling. (#436)

commit 3347a20e0e7aff733371cdc2ec371ea73bfdcecb
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue Aug 1 04:04:02 2017 +0300

    reporter_output_test: json: iterations is int, not float (#431)
    
    May be relevant for flakiness of win builds
    
    Noted by @KindDragon

commit abafced9909c7e5e8f6b8236eecd953caa4f8e6f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Jul 30 18:41:57 2017 -0600

    Suppress -Wodr on C++03 tests when LTO is enabled.
    
    The benchmark library is compiled as C++11, but certain
    tests are compiled as C++03. When -flto is enabled GCC 5.4
    and above will diagnose an ODR violation in libstdc++'s <map>.
    
    This ODR violation, although real, should likely be benign. For
    this reason it seems sensible to simply suppress -Wodr when building
    the C++03 test.
    
    This patch fixes #420 and supersede's PR #424.

commit d474450b8931c2c5c53e5d950341cb65f39c0f40
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue Jul 25 19:09:26 2017 +0300

    Tooling: generate_difference_report(): show old/new for both values (#427)
    
    While the percentages are displayed for both of the columns,
    the old/new values are only displayed for the second column,
    for the CPU time. And the column is not even spelled out.
    
    In cases where b->UseRealTime(); is used, this is at the
    very least highly confusing. So why don't we just
    display both the old/new for both the columns?
    
    Fixes #425

commit b9be142d1e2dbc06cf2efd44919f6c422c43cddb
Author: Roman Lebedev <lebedev.ri@gmail.com>
Date:   Tue Jul 25 02:13:55 2017 +0300

    Json reporter: don't cast floating-point to int; adjust tooling (#426)
    
    * Json reporter: passthrough fp, don't cast it to int; adjust tooling
    
    Json output format is generally meant for further processing
    using some automated tools. Thus, it makes sense not to
    intentionally limit the precision of the values contained
    in the report.
    
    As it can be seen, FormatKV() for doubles, used %.2f format,
    which was meant to preserve at least some of the precision.
    However, before that function is ever called, the doubles
    were already cast to the integer via RoundDouble()...
    
    This is also the case for console reporter, where it makes
    sense because the screen space is limited, and this reporter,
    however the CSV reporter does output some( decimal digits.
    
    Thus i can only conclude that the loss of the precision
    was not really considered, so i have decided to adjust the
    code of the json reporter to output the full fp precision.
    
    There can be several reasons why that is the right thing
    to do, the bigger the time_unit used, the greater the
    precision loss, so i'd say any sort of further processing
    (like e.g. tools/compare_bench.py does) is best done
    on the values with most precision.
    
    Also, that cast skewed the data away from zero, which
    i think may or may not result in false- positives/negatives
    in the output of tools/compare_bench.py
    
    * Json reporter: FormatKV(double): address review note
    
    * tools/gbench/report.py: skip benchmarks with different time units
    
    While it may be useful to teach it to operate on the
    measurements with different time units, which is now
    possible since floats are stored, and not the integers,
    but for now at least doing such a sanity-checking
    is better than providing misinformation.

commit 5b7683f49e1e9223cf9927b24f6fd3d6bd82e3f8
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sat Jul 15 00:21:20 2017 +0200

    more clang tidy cleanups (#417)

commit e8fc2a2b8ccd33fefdd7f95e1a2aabee0788c4d6
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Jul 13 18:33:43 2017 +0200

    Google-style cleanups (#416)

commit ee3cfca651deae5c8af3e873f5d085074cde9fad
Author: Tom Madams <tom.ej.madams@gmail.com>
Date:   Thu Jul 6 15:59:13 2017 -0700

    Fix ThreadCPUUsage when running on RTEMS. (#414)
    
    Change ThreadCPUUsage to call ProcessCPUUsage if __rtems__ is defined.
    
    RTEMS real time OS doesn't support CLOCK_THREAD_CPUTIME_ID. See
    https://github.com/RTEMS/rtems/blob/master/cpukit/posix/src/clockgettime.c#L58-L59
    
    Prior to this change, ThreadCPUUsage would fail when running on RTEMS with:
      ERROR: clock_gettime(CLOCK_THREAD_CPUTIME_ID, ...) failed

commit 9d4b719daeda35acf3a3d81b9ac1f38fc13333d1
Author: Eric <eric@efcs.ca>
Date:   Tue Jul 4 16:31:47 2017 -0600

    Make Benchmark a single header library (but not header-only) (#407)
    
    * Make Benchmark a single header library (but not header-only)
    
    This patch refactors benchmark into a single header, to allow
    for slightly easier usage.
    
    The initial reason for the header split was to keep C++ library
    components from being included by benchmark_api.h, making that
    part of the library STL agnostic. However this has since changed
    and there seems to be little reason to separate the reporters from
    the rest of the library.
    
    * Fix internal_macros.h
    
    * Remove more references to macros.h

commit 710c2b89d8c6e839e51ac148b4e840ce2c009dbb
Author: Jern-Kuan Leong <jernkuan@gmail.com>
Date:   Fri Jun 16 21:46:11 2017 +0000

    Fix #403 HAVE_${VAR} not passed to makefile (#404)
    
    Add definition of ${VAR} to makefiles if specified as part of cmake
    parameter.

commit b8a2206fb20107c8a60a543928106a0ed71e89b5
Author: Eric <eric@efcs.ca>
Date:   Wed Jun 14 10:16:53 2017 -0600

    Add ClearRegisteredBenchmark() function. (#402)
    
    * Add ClearRegisteredBenchmark() function.
    
    Since benchmarks can be registered at runtime using the RegisterBenchmark(...)
    functions, it makes sense to have a ClearRegisteredBenchmarks() function too,
    that can be used at runtime to clear the currently registered benchmark and
    re-register an entirely new set.
    
    This allows users to run a set of registered benchmarks, get the output using
    a custom reporter, and then clear and re-register new benchmarks based on the
    previous results.
    
    This fixes issue #400, at least partially.
    
    * Remove unused change

commit d6aacaf48f18d076feb2ab8c0655efc74e82dfbd
Author: Eric <eric@efcs.ca>
Date:   Tue Jun 13 18:42:32 2017 -0600

    Revert "Use NEW settings for CMP0063 policy (#399)" (#401)
    
    This reverts commit af542061c53f9c1746c5c1c84493c903978988a7.

commit af542061c53f9c1746c5c1c84493c903978988a7
Author: Tim <tdhutt@gmail.com>
Date:   Wed Jun 14 01:42:07 2017 +0100

    Use NEW settings for CMP0063 policy (#399)
    
    This removes warnings when using CMake >= 3.3 if you have symbol visibility set.

commit f3b3dd99be97c330f9f4a7c0a2e5dbc3f767c558
Author: Yixuan Qiu <yixuan.qiu@cos.name>
Date:   Mon Jun 5 10:32:15 2017 -0700

    Use the sample version of standard deviation (#383)
    
    * remove unnecessary weights
    
    * use sample standard deviation
    
    * add contributor information
    
    * remove redundant code
    
    * initialize variable to eliminate compiler warning

commit 93bfabc8b89270c00816c3cafb601475eaf85364
Author: Eric <eric@efcs.ca>
Date:   Fri Jun 2 16:47:24 2017 -0600

    Fix #342: DoNotOptimize causes compile errors on older GCC versions. (#398)
    
    * Fix #342: DoNotOptimize causes compile errors on older GCC versions.
    
    DoNotOptimize uses inline assembly contraints to tell
    the compiler what the type of the input variable. The 'g'
    operand allows the input to be any register, memory, or
    immediate integer operand. However this constraint seems
    to be too weak on older GCC versions, and certain inputs
    will cause compile errors.
    
    This patch changes the constraint to 'X', which is documented
    as "any operand whatsoever is allowed". This appears to fix
    the issues with older GCC versions.
    
    However Clang doesn't seem to like "X", and will attempt
    to put the input into a register even when it can't/shouldn't;
    causing a compile error. However using "g" seems to work like
    "X" with GCC, so for this reason Clang still uses "g".
    
    * Try alternative formulation to placate GCC

commit 15e9ebaf8363e723478cba23d0651274201c7750
Author: David Kruger <deityprometheus@gmail.com>
Date:   Tue May 23 11:40:31 2017 -0400

    Associate the required include directory with the benchmark library (#393)
    
    Using target_include_directories CMake will implicitly add the the
    necessary include paths to targets which link against the benchmark
    library. This is useful when the benchmark repo is included as a
    subdirectory in another CMake build.

commit febd0d7a7a22dc98db3303eebfaecac9c7007af0
Author: Dominic Hamon <dominic@google.com>
Date:   Mon May 22 09:27:28 2017 -0700

    Remove unnecessary whitespace in travis yaml

commit b1f33d44ea028bc662d8721ecd370d2472173334
Author: Tushar Maheshwari <tushar27192@gmail.com>
Date:   Mon May 22 21:56:05 2017 +0530

    Add macOS builds to .travis.yml (#389)

commit cb8a0cc10f8b634fd554251ae086da522b58f50e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed May 3 23:43:16 2017 -0600

    test commit

commit 4cfe790a253d2cb47f33b29676c0a27c462704cb
Merge: da8cd74 ec6f035
Author: Dominic Hamon <dominic@google.com>
Date:   Wed May 3 09:11:45 2017 -0700

    Merge branch 'biojppm-compact'

commit ec6f03579eb7fe1296d161c838f960ca993fd182
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Wed May 3 00:05:15 2017 +0100

    Trying again to fix error caused by -Wunused-function.
    
    This thing with the pragma ignore was getting out of hand: now
    MinGW (and probably GCC) was erroring too. So I chose to move
    the definition of IsZero() out of the anonymous namespace into
    benchmark.cc.

commit 17354131886a9eec06e5e34e0be0583ac32728ca
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 23:35:46 2017 +0100

    Fix pragma clang ignore with gcc.

commit 160770fd08f8da8167edf66f55a047af1bc6291f
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 23:30:36 2017 +0100

    Fix dropped-style elses.

commit a31088632a54d179308d3d937f2e0f9a19df353d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 23:25:22 2017 +0100

    Fix (that is, ignore) clang compile error.

commit 020bac985b93308750b90cca6921b7425ca57b3d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 23:00:45 2017 +0100

    Extend tabular counter tests to different counter sets.

commit 25060449020a5f1e739064fc155ca7c4c94935a1
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 22:14:49 2017 +0100

    Add unit test for counter sets.

commit ea019f3cd8cf8433416f1c42d5e0a7e18fcbcc6f
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 22:10:08 2017 +0100

    Allow different counter sets in CSV reporting.

commit 3db6254c391174b47cee8c98a2bba08bf363ffe2
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 20:48:29 2017 +0100

    Console reporter: add /s prefix to counter rates.

commit cf20dc967f2cf5307ca6e4bc06a36490c1b5c835
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 20:47:41 2017 +0100

    Add test for tabular output of rate counters.

commit c69b385c9ce92ce4b05c3109cfdb8086d75600d6
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 20:33:28 2017 +0100

    Add first unit test for benchmark_tabular_counters.

commit 17a012d7549fa0e962dfa0622de8aef60c42bd3a
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 20:31:54 2017 +0100

    Fix: --benchmark_counters_tabular was not being passed to tests.

commit 615151723e43b4e925732e33ab428b6d9b3f8b43
Merge: 707dd89 da8cd74
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 18:54:37 2017 +0100

    Merge remote-tracking branch 'upstream/master' into compact

commit da8cd74d85fa44c8feb08e886847517caa35a0d1
Merge: feb69ae 25af505
Author: Dominic Hamon <dominic@google.com>
Date:   Tue May 2 08:44:55 2017 -0700

    Merge branch 'biojppm-test_usercounters'

commit 25af505d9fbcc1ac5480a28824bdb621d004dc26
Merge: feb69ae eb2bf34
Author: Dominic Hamon <dominic@google.com>
Date:   Tue May 2 08:43:46 2017 -0700

    Merge branch 'test_usercounters' of git://github.com/biojppm/benchmark into biojppm-test_usercounters

commit feb69ae7102e6bdcb5736cd7c1669969217d45c0
Author: Felix Duvallet <felixduvallet@users.noreply.github.com>
Date:   Tue May 2 17:19:35 2017 +0200

    Ensure all the necessary keys are present before parsing JSON data (#380)
    
    This prevents errors when additional non-timing data are present in
    the JSON that is loaded, for example when complexity data has been
    computed (see #379).

commit eb2bf345244eff2ceaa129e32ad112254e7603e2
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Tue May 2 11:37:46 2017 +0100

    Fix indentation.
    
    [ci-skip]

commit 77b9362b06d7fdef3937a28d56eb6ea24b3d9696
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:33:44 2017 +0100

    Add output_test.h to output_test_helper for VisualStudio editing.

commit b57b2cfd771216af2029aa2c8b6dfec5e62d70af
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:33:19 2017 +0100

    Improve some comments.

commit 64b5f3ff2da8278c4c066bdd18a53b5057a24837
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:32:40 2017 +0100

    Make Results::GetTime() receive an enum.

commit 62b1dd9c4ae8664b1e0ddc05ccc774f2462da93a
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:29:26 2017 +0100

    CHECK_BENCHMARK_RESULTS() was too inconspicuous.

commit 3443ac2103c891c75d29563b3a2bd5c8b822a133
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:27:56 2017 +0100

    Fix brace formatting (Habits die hard!).

commit 21600b966f2c7736815fc95a27d9bb0ae03d04d1
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 22:22:11 2017 +0100

    Fix VS warning.

commit 47226ccd565fa04a6064fd55cea7164ff8b78c64
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Mon May 1 21:48:13 2017 +0100

    CHECK(): rename EPS to FLOAT for consistency with googletest style.

commit 2a2eb44b3004ec67f694c26dacf488e57c63e568
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 22:27:55 2017 +0100

    Fix VS2013 quirk.

commit cdbcaaf2b64fbe113c9fe3b3526f22d2be282c15
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:47:32 2017 +0100

    Fix g++-4.8 compile errors.

commit ef6b4fb8577a7107622026d4e6028db62d21412a
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:41:33 2017 +0100

    Simplify  printing of counters in console reporter.

commit 8f69e4f6ce05fb53084030017480133446cd9137
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:35:25 2017 +0100

    Remove whitespace.

commit c16c8fffacb5ee51fe364605db9673b7a0b41b48
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:35:02 2017 +0100

    CHECK_EPS: Use parentheses to wrap macro arguments.

commit c81960a899135feff8adbd0a51390ce4d5f211f2
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:31:44 2017 +0100

    Add missing include of stringstream.

commit b5effb30f9f01ff94d412259eea623a3c511e5e0
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:24:26 2017 +0100

    Add missing include for providing std::function.

commit 55876610f169b3cf5fdfde98d49d9e9521cccbe8
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:02:19 2017 +0100

    Remove unused prototype.

commit 180719d0d6dedb7a9f892f4f2dab13d95ca5ed4d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 20:01:18 2017 +0100

    Rename ResultsCheckerEntry to Results.

commit f3b82a8edad1e2bb01125804bc80701e8c92b3c6
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:44:13 2017 +0100

    Adopt standard style.

commit 86249c57a574462cb0b30aefda0f91ae01e2f077
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:40:39 2017 +0100

    Result checking: move some function definitions to source file.

commit 03b0655d12c6c0102778ed1cdfe3789c5f4c58fe
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:35:43 2017 +0100

    Fix expected values of user counters as rates in unit tests.

commit 921a51abcfd22b4e554e25bb69387b4e3213c6ab
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:34:37 2017 +0100

    Console reporting of user counters: print rates like non-rates.

commit 5ed1b1dea7532c0bd08850bea3cf6591d4b7f167
Merge: 78548f8 1295ce8
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:27:53 2017 +0100

    Merge branch 'master' of https://github.com/vladoovtcharov/benchmark into test_usercounters

commit 78548f8c6edf1c2a537c6482badfda1505eda5e3
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:26:34 2017 +0100

    Add (currently failing) tests for user counters with threads.

commit 2814e9d8dc5a4bb59397d8f2c58ddeb54a4b109f
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:25:51 2017 +0100

    Fix ResultsCheckerEntry::NumThreads()

commit 92034a8b84fd97306b1abe2ed1d3b733b3d03d5d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 19:02:07 2017 +0100

    Make result checkers execute on all regex-matching benchmarks.

commit 738fcd9e6a947f979667e431ed126cf3ae5ee268
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 18:30:28 2017 +0100

    Add log of the benchmark name when checking results.

commit 1ce286f632fb9d741a6d6828c7582de09207ebb0
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 29 18:26:30 2017 +0100

    Avoid compiler-specific pragmas in result check macros.
    
    - Epsilon is now understood as relative to expected value.
    - Improve error messages for epsilon checks.

commit da69e5de4579df378f1148ae4d5edd47ded57531
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 20:45:30 2017 +0100

    User counters: add more tests.

commit 8c757a3bb9891064172d7b1ec52965a05d0fdf8a
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 20:44:27 2017 +0100

    Results check: add checks with epsilon.

commit 1826feb164f0f935900e1819d70b60106f56ffc3
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 20:43:44 2017 +0100

    ResultsCheckerEntry: add more getter functions.

commit 2a8d0dd1b1c128d3058898bbbadc3099a0434915
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 20:42:28 2017 +0100

    Use const char* instead of std::string in entry name lookup.

commit 8adf59d7620616f435cbe37907a5eec3faba9712
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 20:40:21 2017 +0100

    Add epsilon check macros for float comparison.

commit e869e3749a2a75654f92a9dfc5258530920e862a
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 15:38:21 2017 +0100

    Remove some whitespace.

commit 6452883027b6642157a54cb5ec61c55c34f4948e
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Fri Apr 28 15:02:27 2017 +0100

    Unit testing: add facilities to check benchmark results.
    
    This is needed for examining the values of user counters (needed
    for #348). It is also needed for checking the values of standard
    benchmark results like items_processed or complexities (for example,
    checking the standard deviation is needed for unit testing #357
    as discussed in #362).

commit 693a43013d5e7344e5f627bc773aff7fe0151391
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 22:11:40 2017 +0100

    User counters: add more unit tests. ...
    
    The tests are still missing a way to check actual validity of
    numerical results; this will be done next. As they currently are,
    the tests pass, but the problem detected with #378 is still
    standing and the results with non-standard counters are wrong.

commit 3c2d7f5348ed0e0a6b0dfda242a8b0211858ebe5
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 19:25:20 2017 +0100

    User counter tests: first version.

commit b273d9b7d5e49d29e60b98776d5cb8fc161952bf
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 19:24:06 2017 +0100

    Reporter tests: reuse csv header.

commit 409f35da50c3f2db5a8187ea1fb98342bddaa317
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 19:22:36 2017 +0100

    User counters: fix misplaced newline in console reporter header.

commit 1295ce8f23717d910caf602ee4458212e9a3e746
Author: vladoovt <vlado@indicalab.com>
Date:   Thu Apr 27 09:56:43 2017 -0600

    Fixes #378 coercion to double was causing counter to forget its flags, changed it so that its value is updated directly

commit 2d1a34626fec7db18e7198aad9e2b2439e1bf186
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 13:16:49 2017 +0100

    Fixes #378 (hopefully). Unit tests for counters to follow.
    
    The problem was that the call to Finish() the user counters was
    lost in a big merge. If I had already written the tests for the
    user counters, this would probably have been catched earlier.

commit 27b3bd4dc4eb859a397d027d37997bd4ada3bc75
Merge: 9986589 3336ea0
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 27 12:38:28 2017 +0100

    Merge branch 'master' of https://github.com/google/benchmark

commit 3336ea00d892fc312715c3a00d33a9568261e86a
Author: Arkady Shapkin <arkady.shapkin@gmail.com>
Date:   Mon Apr 24 20:45:24 2017 +0300

    Support VS2017 on AppVeyor (#376)

commit 7a74b74856bae690a0998c967c7807dd2272af82
Author: Dmitry Trifonov <slonegg@gmail.com>
Date:   Fri Apr 21 05:07:52 2017 +0300

    fix for android NDK r10e (#375)

commit 09b93ccc6a9aed84c269b6f5b8130c878e518ebb
Author: Dmitry Trifonov <slonegg@gmail.com>
Date:   Tue Apr 18 08:48:07 2017 -0700

    fix android compilation (#372)
    
    * fix android compilation
    
    * checking __GLIBCXX__ and __GLIBCPP__ macro in addition to __ANDROID__
    
    * using vsnprintf instead of std::vsnprintf to compile on Android
    
    * removed __GLIBCPP__ check on Android
    
    * StringPrintF instead of std::to_string for Android

commit 46afd8e69339b546526706056da9dd5009fa01f1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Apr 18 00:13:18 2017 -0600

    Don't limit benchmarks with manual timers to 5x the elapsed real time.
    
    When using CPU time to determine the correct number of iterations the
    library additionally checks if the benchmark has consumed 5x the minimum
    required time according to the wall clock. This prevents benchmarks
    with low CPU usage from running for much longer than actually intended.
    
    However when a benchmark uses a manual timer this heuristic isn't helpful
    and likely isn't correct since we don't know what the manual timer actually
    measures.
    
    This patch removes the above restriction when a benchmark specifies a manual
    timer.

commit 74b24058ad4914b837200d0341050657ba154e4a
Author: Eric <eric@efcs.ca>
Date:   Mon Apr 17 22:29:28 2017 -0600

    Add Benchmark::Iterations for explicit iteration count control - Fixes #370 (#373)
    
    * Add Benchmark::Iterations for explicitly specifying the number of iterations to use.
    
    * Document that benchmark::Iterations should not be used to limit benchmark runtimes

commit 7f87c98d36279b1819e9c8ee0dc93c6a8ea64aee
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Apr 17 20:49:51 2017 -0600

    Enable <cassert> by removing -DNDEBUG when running the tests.
    
    In non-debug builds CMake automatically adds -DNDEBUG, this means
    that uses of `assert` in the tests are disabled for non-debug builds.
    Obviously we want these tests to run, regardless of configuration.
    
    This patch strips -DNDEBUG during non-debug builds and adds
    -UNDEBUG just to be sure.

commit 312d9d0ac5c280e81aee0689045a10ae441b4db1
Author: Daniel Varga <vargad88@gmail.com>
Date:   Mon Apr 10 17:43:05 2017 +0200

    Fix cmake file not to use CMAKE_SOURCE_DIR (#367)
    
    Using CMAKE_SOURCE_DIR benchmark cannot be built as part of a project.
    This change allows to add benchmark using add_subdirectory to a bigger
    project.

commit 9986589fff66cd3336d112e891306ffcedc82b8f
Merge: ea26e62 9a5072d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Apr 6 14:12:09 2017 +0100

    Merge branch 'master' of https://github.com/google/benchmark

commit 9a5072d1bf9187b32ce9a88842dffa31ef416442
Author: jpmag <dev@jpmag.me>
Date:   Tue Apr 4 20:31:28 2017 +0100

    Fixes #357: broken RMS values when time unit is set. (#362)

commit 2fa6dfff32ef57a5f5501427f77765b25ecddf3c
Merge: 17298b2 858581e
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Apr 4 08:39:10 2017 -0700

    Merge branch 'piribes-1.1'

commit 858581ea766794aa9f37bc047adffdcef912c04a
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Apr 4 08:39:02 2017 -0700

    Remove unnecessary benchmark subfolder

commit 66283598e60b3d63567fbfd71c729721ced64204
Merge: 17298b2 128fe25
Author: Dominic Hamon <dominic@knine.roam.corp.google.com>
Date:   Tue Apr 4 08:35:51 2017 -0700

    Merge branch '1.1' of git://github.com/piribes/benchmark into piribes-1.1

commit 128fe25025dcf75baa2e1c533b1aaf90a5f1c7fc
Author: Giuseppe Roberti <gr@silenti.net>
Date:   Tue Apr 4 02:13:20 2017 +0200

    Fix ${include_install_dir}

commit 824bbb818e2d34e546c77d719687ab732264603c
Author: Giuseppe Roberti <gr@silenti.net>
Date:   Mon Apr 3 01:46:59 2017 +0200

    Add CMake Package Config files during install
    
    - Remove target_include_directories of ${PROJECT_SOURCE_DIR}/include to
      fix error: Target "benchmark" INTERFACE_INCLUDE_DIRECTORIES property
      contains path which is prefixed in the source directory.

commit 707dd893448cc0bcacde78a45cf4d9d7454eb2fd
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 1 22:31:39 2017 +0100

    User counters: document tabular output in README.md

commit ea26e62a0dcaa2df529c5b0e901745a1b914063d
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Sat Apr 1 17:04:37 2017 +0100

    Fixes #357: broken RMS values when time unit is set.

commit 17298b2dc0e6dc9f78b149ab9256064d0ac96520
Author: Ray Glover <ray.glover@uk.ibm.com>
Date:   Wed Mar 29 11:39:18 2017 +0100

    Python 2/3 compatibility (#361)
    
    * [tools] python 2/3 support
    
    * update authors/contributors

commit 0dbcdf56a0d0ed817a7fccf8f622259ee8dafa18
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 28 01:43:42 2017 -0600

    Add BENCHMARK_BUILD_32_BITS option and add builders to test it (#360)
    
    * Add BENCHMARK_BUILD_32_BITS option and add builders to test it
    
    * Attempt to fix travis configuration
    
    * Make add_required_cxx_compiler_flag cause an error when the flag isn't supported
    
    * add gcc-multilib dependancy on travis
    
    * attempt to fix travis.yml parsing error
    
    * Require g++-multilib instead of gcc-multilib
    
    * Add 32 bit release configurations
    
    * Attempt to fix libc++ travis build w/ 32 bits
    
    * Work around CMake configuration failure on Travis

commit ec15860da5808a0b0fa43ab74a5c4404dbcc7ac5
Author: MVafin <maxim.vafin@intel.com>
Date:   Tue Mar 28 09:35:17 2017 +0300

    Fix CPU frequency parsing on Linux (#355) (#356)
    
    * Fix reading CPU info from file
    
    Macro CHECK do nothing for release mode, meaning it doesn't invoke the
    arguments
    
    * Add myself to AUTHORS and CONTRIBUTORS

commit 94c512c0439aa9b625d9e179767ce870df9f76a8
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 27 18:32:12 2017 -0600

    Replace int64_t usages with 'int' instead. (#359)
    
    Previously the constants used for converting between
    different units of time were declared using int64_t. However
    we should only use explicitly sized integer types when they
    are required, and should use 'int' everwhere else, and there is
    no good reason to use int64_t here.
    
    For that reason this patch changes the type of the constants.
    This should help address issue #354 as well.

commit 9b92ed76a8620354403b5f1d089560048b6843bb
Author: rolandschulz <roland@rschulz.eu>
Date:   Mon Mar 27 17:30:54 2017 -0700

    Fix ICC compiler warnings (#358)
    
    fixes #354
    
    The build fails with ICC17 because of warnings and Werror. What is the correct solution to fix it?
    Should a patch
    
    disable Werror for ICC (or maybe all non known compilers)
    disable the false postive warnings for all files. This could be done using:
    add_cxx_compiler_flag(-wd2102) #ICC17u2: Many false positives for Wstrict-aliasing
    add_cxx_compiler_flag(-wd2259) #ICC17u2: non-pointer conversion from "long" to "int" may lose significant bits (even for explicit static cast, sleep.cc(44))
    add_cxx_compiler_flag(-wd654) #ICC17u2: overloaded virtual function "benchmark::Fixture::SetUp" is only partially overridden (because of deprecated overload)
    disable warnings at file level or some other granularity

commit f5ff6d0e0d3d00cf07bb8306548b637e98b13720
Author: Yasushi Saito <yasushi.saito@gmail.com>
Date:   Mon Mar 13 19:30:19 2017 -0700

    Include cstdlib for timespec. Clang modules demands that. (#353)

commit f682f7e9a41a88468c72ce5f7f6abe76913b82ad
Author: Eric <eric@efcs.ca>
Date:   Fri Mar 10 18:47:39 2017 -0700

    Implement ClobberMemory() and fix DoNotOptimize on MSVC. (#352)
    
    I recently learned Windows provides a function called _ReadWriteBarrier
    which is literally ClobberMemory under a different name. This patch
    uses it to implement ClobberMemory under MSVC.

commit 8ae6448cc7ec6353e3491a2a15f972f9735f124b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 10 17:52:02 2017 -0700

    Fix std::string detection hack for SetLabel.
    
    Previously benchmark_api.h wasn't allowed to include standard library
    headers. For this reason SetLabel had a hack to accept std::string
    without including <string>. The hack worked by attempting to detect
    the injected class name `basic_string`. However Clang has changed
    it's behavior regarding injected class names so this hack no longer
    works.
    
    This patch removes the hack and replaces it with a function that
    actually names std::string. However we still cannot pass std::string
    across the dylib boundary because of libstdc++'s dual C++11 ABI.

commit d84d911d37b27e0adeb780266c34ba97c11cb6e5
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Mar 2 12:19:56 2017 +0000

    Tabular counters: fix missing cast on MSVC.

commit c846eedfebbacaca755db7dcbf45a0cb9fbdb320
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Mar 2 12:10:43 2017 +0000

    Fix use of C-style cast.

commit cbb2eb83d132d16aa2a6df2bc249712795e826ec
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Mar 2 12:10:06 2017 +0000

    Tabular counters: fix dangling reference to color_output_.

commit 0de985ae9d4ea1582125a5414a99ca90c368ca10
Author: Joao Paulo Magalhaes <dev@jpmag.me>
Date:   Thu Mar 2 02:55:36 2017 +0000

    Add command line option --benchmark_counters_tabular

commit 9e3465560240ffb242b50a47cb7f19251a12ee42
Author: jpmag <dev@jpmag.me>
Date:   Thu Mar 2 00:50:19 2017 +0000

    Rename BenchmarkCounters to UserCounters (#346)
    
    The name UserCounters seems more accurate than the pleonastic BenchmarkCounters.

commit a9a66c85bbfda1d744c267c5e5aa073ef3d1c1d5
Author: jpmag <dev@jpmag.me>
Date:   Thu Mar 2 00:23:42 2017 +0000

    Add user-defined counters. (#262)
    
    * Added user counters, and move use of bytes_processed and items_processed to user counter logic.
    
    Each counter is a string-value pair. The counters were
    made available through the State class. Two helper virtual
    methods were added to the Fixture class to allow convenient
    initialization and termination of the counters: InitState()
    and TerminateState(). The reporting of the counters is buggy
    and is still a work in progress, to be completed in the next commits.
    
    * fix bad removal of BenchmarkCounters code during the merge
    
    * add myself to AUTHORS/CONTRIBUTORS
    
    * fix printing to std::cout in csv_reporter
    
    * bytes_per_second and items_per_second are now in the UserCounters class
    
    * add user counters to json reporter
    
    * moving bytes_per_second and items_per_second to their old state
    
    * console reporter dealing ok with user counters.
    
    * update unit tests for user counters
    
    * CSVReporter now prints user counters too.
    
    * cleanup user counters
    
    * reverted changes to cmake files which should have gone into later commits
    
    * fixture_test: fix gcc 4.6 compilation
    
    * remove ctor with default argument
    
    see https://github.com/google/benchmark/pull/262#discussion_r72298055
    
    * use (auto-defined) BENCHMARK_HAS_CXX11 instead of BENCHMARK_INITLIST.
    
    https://github.com/google/benchmark/pull/262#discussion_r72298310
    
    * leanify counters API
    
    Discussions:
    API complexity: https://github.com/google/benchmark/pull/262#discussion_r72298731
    remove std::string dependency (WIP): https://github.com/google/benchmark/pull/262#discussion_r72298142
    spacing & alignment: https://github.com/google/benchmark/pull/262#discussion_r72298422
    
    * remove std::string dependency on public API - changed counter name storage to char*
    
    * Counter ctor: use overloads instead of default arguments
    
    discussion:
    https://github.com/google/benchmark/pull/262#discussion_r72298055
    
    * Use raw pointers to remove dependency on std::vector from public API .
    
    For more info, see discussion at https://github.com/google/benchmark/pull/262#discussion_r72319678 .
    
    * Move counter implementation from benchmark.cc to counter.cc.
    
        See discussion: https://github.com/google/benchmark/pull/262#discussion_r72298980 .
    
    * Remove unused (commented-out) code.
    
    * Moved thread counters to ThreadStats.
    
    * Counters: fixed copy and move constructors.
    
    * Counter: use an inplace buffer for small names.
    
    * benchmark_test: move counters test out of CXX11 preprocessor conditional.
    
    * Counter: fix VS2013 compilation error in char[] initialization.
    
    * Fix typo.
    
    * Expose counters from State.
    
    See discussion: https://github.com/google/benchmark/pull/262#issuecomment-237156951
    
    * Changed counters interface to map-like.
    
    * Fix printing of user counters in ConsoleReporter.
    
    * Applied clang-format to counter.cc and console_reporter.cc.
    
    Command was `clang-format -style=Google -i counter.cc console_reporter.cc`
    I also applied to all other files, but the changes were very
    far-reaching so I rolled those back.
    
    * Rename Counter::Flags_e to Counter::Flags
    
    * Fix use of reserved names in Counter and BenchmarkCounters.
    
    * Counter: Fix move ctor bug + change order of members.
    
    * Fixture: remove tentative methods InitState() and TerminateState().
    
    * Update fixture_test to the new Fixture interface.
    
    * BenchmarkCounters: fixed a bug in the move ctor. Remove call to CHECK_LT().
    
    CHECK_LT() was making the size_t lookup take ~double the time of a string lookup!
    
    * BenchmarkCounters: add option to not print zero counters (defaults to false).
    
    * Add test to compare counter storage and access with std::map.
    
    * README: clarify cost of counter access modes.
    
    * move counter access test to an own test.
    
    * BenchmarkCounters: add move Insert()
    
    * Counters access test: add accelerated lookup by name.
    
    * Fix old range syntax.
    
    * Fix missing include of cstdio
    
    * Fix Visual Studio warning
    
    * VS2013 and lower: fix use of snprintf()
    
    * VS2013: fix use of char[] as a member of std::pair<>.
    
    * change counter storage to std::map
    
    * Remove skipZeroCounters logic
    
    * Fix VS compilation error.
    
    * Implemented request changes to PR #262.
    
    * PR #262: More requested changes.
    
    * README: cleanup counter text.
    
    * PR #262: remove clang-format changes for preexisting code
    
    * Complexity+Counters: fix counter flags which were being ignored.
    
    * Document all Counter::Flag members
    
    * fixed loss of counter values
    
    * ConsoleReporter: remove tabular printing of user counters.
    
    * ConsoleReporter: header printing should not be contingent on user counter names.
    
    * Minor white space and alignment fixes.
    
    * cxx03_test + counters: reuse the BM_empty() function.
    
    * user counters: add note to README on how counters are gathered across threads

commit 070c0ca0a9abeaa6076d6a6118e54aa39b31d0a2
Author: Marat Dukhan <maratek@gmail.com>
Date:   Sat Feb 11 05:31:40 2017 -0500

    Support for Web platforms (#340)
    
    * Implement cycleclock::Now for PNaCl
    
    * Make cycleclock::Now compatible with NaCl/ARM
    
    * Support Emscripten (Asm.js, WebAssembly)
    
    * Rearrange #ifs from to handle specific cases first
    
    * DoNotOptimize without inline asm for Emscripten & PNaCl

commit fef203bd021bad019421abf5785a4ae89bd6ea15
Author: guray <guray.ozen@gmail.com>
Date:   Mon Jan 30 21:50:21 2017 +0100

    Fix typename for powerpc (#337)

commit 246ee86428758be3d3af1d2c502086eb6036d9fe
Author: Matt Sieren <matthias@s-r-n.de>
Date:   Tue Jan 24 20:31:14 2017 +0100

    Disable iOS CPU Frequency readout (#335)
    
    * Add macro definition for iOS
    
    Add an additional macro definition for iOS.
    iOS is defined as a Mac OSX invariant in the TargetConditionals include,
    thus we treat it as a subset of OSX within the defines.
    
    * Skip error for hw.cpufrequency on iOS
    
    hw.cpufrequency is not available on iOS devices. As there is no way to reliably
    retrieve the CPU frequency on iOS we are printing out a warning
    that we were unable to detect the CPU frequency and set it to 0.
    
    This only disables cpu frequency readouts on actual physical iOS devices.
    Running this code on the simulator still gives the cpu architecture of
    the host computer as the simulator passes down the sysctl calls to OSX.

commit 817bfee273246f2a90c08e700e67a5f32711f979
Author: Niklas Rosenstein <NiklasRosenstein@users.noreply.github.com>
Date:   Wed Jan 18 04:28:20 2017 +0100

    Report unrecognized arguments from BENCHMARK_MAIN() macro (#332)
    
    * BENCHMARK_MAIN() now reports unrecognised command-line flags (see google/benchmark#320)
    
    * add benchmark::ReportUnrecognizedArguments()
    
    Update BENCHMARK_MAIN() to use ReportUnrecognizedArguments() instead of
    having the reporting code directly in the macro.
    
    See issue google/benchmark#320 for reference
    
    * let's stick to american english -- fix type in ReportUnrecognizedArguments()
    
    * make ReportUnrecognizedArguments() print to stderr
    
    * make ReportUnrecognizedArguments() return true if any arguments have been reported (i.e. argc > 1)

commit b4fdf6e9df82ea5a424440436dcc4ac0474decce
Author: jpmag <biojppm@users.noreply.github.com>
Date:   Fri Jan 13 22:19:42 2017 +0000

    HumanReadableNumber(): Simplify output for simple numbers. Examples: (#291)
    
    * HumanReadableNumber(): Simplify output for simple numbers. Examples:
    
    HumanReadableNumber(    0.0)=      0    ---->         0
    HumanReadableNumber(    0.5)=   512m    ---->       0.5
    HumanReadableNumber(    0.9)= 921.6m    ---->       0.9
    HumanReadableNumber(    1.0)=  1024m    ---->         1
    HumanReadableNumber(   1.05)=1075.2m    ---->      1.05
    HumanReadableNumber(    1.1)=    1.1    ---->       1.1
    HumanReadableNumber(    1.2)=    1.2    ---->       1.2
    HumanReadableNumber( 0.0e-1)=      0    ---->         0
    HumanReadableNumber( 0.5e-1)=  51.2m    ---->      0.05
    HumanReadableNumber( 0.9e-1)= 92.16m    ---->      0.09
    HumanReadableNumber( 1.0e-1)= 102.4m    ---->       0.1
    HumanReadableNumber(1.05e-1)=107.52m    ---->     0.105
    HumanReadableNumber( 1.1e-1)=112.64m    ---->      0.11
    HumanReadableNumber( 1.2e-1)=122.88m    ---->      0.12
    HumanReadableNumber( 0.0e-3)=      0    ---->         0
    HumanReadableNumber( 0.5e-3)=524.288u   ---->   524.288u
    HumanReadableNumber( 0.9e-3)=943.718u   ---->   943.718u
    HumanReadableNumber( 1.0e-3)=1048.58u   ---->   1048.58u
    HumanReadableNumber(1.05e-3)=  1101u    ---->   0.00105
    HumanReadableNumber( 1.1e-3)=1.1264m    ---->    0.0011
    HumanReadableNumber( 1.2e-3)=1.2288m    ---->    0.0012
    
    * HumanReadableNumber(): change simple printing threshold to 0.01.
    
    * ToExponentAndMantissa(): refactor branch sequence.

commit 34010beecb0f6fe6af6b0af4f83098c0a493c5bb
Author: Alt <psialt@mail.ru>
Date:   Fri Jan 13 19:41:29 2017 +0300

    Fix librt linking on systems which has it (#331)

commit 4bf28e611b55de8a2d4eece3c335e014f8b0f630
Author: BRevzin <barry.revzin@gmail.com>
Date:   Tue Dec 20 13:37:17 2016 -0600

    Issue 327 (#328)
    
    Arguments shouldn't be AppendHumanReadable()-ed, they should just be shown as-is.

commit e381139474cfd997941f7c48fe17001bf6bfdedd
Author: Pavel Campr <pavel@campr.cz>
Date:   Fri Dec 9 13:24:31 2016 +0100

    fix compare script - output formatting - correctly align numbers >9999 (#322)
    
    * fix compare script - output formatting - correctly align numbers >9999
    
    * fix failing test (report.py); fix compare script output formatting (large numbers alignment)

commit 56336e70f151f9eb828176e795f7c5dfe6d6bb59
Author: Niklas Rosenstein <NiklasRosenstein@users.noreply.github.com>
Date:   Tue Dec 6 17:38:03 2016 +0100

    fix argv accessed out of bounds in ParseCommandLineFlags() (#321)

commit efd4e992a6aa07ac46859dadb96246430959538d
Author: Eric <eric@efcs.ca>
Date:   Mon Dec 5 10:24:09 2016 -0700

    Add support for building w/o exceptions (#317)

commit a3eac442c23ab74a81ffd665a7a531c51dbb8a2c
Author: Eric <eric@efcs.ca>
Date:   Mon Dec 5 10:22:46 2016 -0700

    Update the required CMake version to 2.8.12 (#316)

commit 83ac086fbd96b7c0a4aae91a882fc9cf8cefb26a
Author: Eric <eric@efcs.ca>
Date:   Fri Dec 2 19:47:27 2016 -0700

    Add compare_bench.py documentation. Fixes #309 (#318)

commit a8aa40c596edf5454ccc72604037ffc8183398fe
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Nov 19 05:17:52 2016 -0700

    Fix obvious typo in string formatting

commit 2373382284918fda13f726aefd6e2f700784797f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Nov 18 15:42:02 2016 -0700

    Rewrite compare_bench.py argument parsing.
    
    This patch cleans up a number of issues with how compare_bench.py handled
    the command line arguments.
    
    * Use the 'argparse' python module instead of hand rolled parsing. This gives
      better usage messages.
    
    * Add diagnostics for certain --benchmark flags that cannot or should not
      be used with compare_bench.py (eg --benchmark_out_format=csv).
    
    * Don't override the user specified --benchmark_out flag if it's provided.
    
    In future I would like the user to be able to capture both benchmark output
    files, but this change is big enough for now.
    
    This fixes issue #313.

commit 4f8bfeae470950ef005327973f15b0044eceaceb
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Oct 28 14:22:22 2016 -0700

    Report error when no benchmarks match regex. (#308)
    
    Fixes #306

commit 0064c56abdcfebc6998a66a8cb837ec88cfc9840
Author: Marek Kurdej <mkurdej@users.noreply.github.com>
Date:   Fri Oct 28 18:13:57 2016 +0200

    Add tests for reporters (#307)
    
    * Test bytes_per_second and items_per_second.
    
    * Test SetLabel.
    
    * Reformat.
    
    * Make State::error_occurred_ private.
    
    * Fix tests with floats.
    
    * Merge private blocks

commit 8e08aa75d9d25ae88ca2fbb8859238aec60b6ed4
Merge: 44c25c8 3f23832
Author: Dominic Hamon <dominic@google.com>
Date:   Wed Oct 26 09:22:18 2016 -0700

    Merge branch 'mkurdej-arg-names'

commit 3f23832a097db2da0d9823987dc574be3cefa1f3
Author: Marek Kurdej <marek@quasardb.net>
Date:   Wed Oct 26 09:36:39 2016 +0200

    Allow calling Args and ArgNames in any order.

commit cfee1a54e4d4dcc455ee077092aa5e2d054899c7
Author: Marek Kurdej <marek@quasardb.net>
Date:   Wed Oct 26 09:29:28 2016 +0200

    Check argument count in `ArgName` and `ArgNames`.

commit c1c01b2cd303826cab1f419f1a1582d18d5905df
Author: Marek Kurdej <marek@quasardb.net>
Date:   Tue Oct 25 09:45:35 2016 +0200

    Handle the case when the argument name is an empty string.

commit 17e1c405dd67858ca47b53b5968e564895dba965
Author: Marek Kurdej <marek@quasardb.net>
Date:   Mon Oct 24 09:49:36 2016 +0200

    Add ArgName() and ArgNames() methods to name arguments/ranges.

commit 44c25c892a6229b20db7cd9dc05584ea865896de
Merge: 57a22c6 8aeb20f
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Oct 21 09:24:46 2016 -0700

    Merge branch 'mkurdej-fix-time-unit'

commit 8aeb20f16b7d539e3d3cf857fb4c82bf56d1a605
Author: Marek Kurdej <marek@quasardb.net>
Date:   Fri Oct 21 14:59:06 2016 +0200

    Add tests.

commit 5aa385562739652eddfd018d84e5d43c5c4777b8
Author: Marek Kurdej <marek@quasardb.net>
Date:   Fri Oct 21 14:33:23 2016 +0200

    Fix displayed time unit in mean and standard deviation.

commit 57a22c69b382b3f010ec4042c9574ea3fd8dcbb4
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Oct 8 02:12:40 2016 -0600

    Fix typo in timer.cc that caused negative CPU times on OS X. Fixes #293

commit 721c9224b96ad6b6559bf1695ec633a35e69027c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Oct 8 01:36:54 2016 -0600

    Fix getting the CPU frequency on OS X

commit f67ee4ad9b565ec6bca595df1278162198962998
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Oct 8 01:03:23 2016 -0600

    Fix #294. Add -D_GNU_SOURCE when building under Cygwin

commit 03c4485d84e68f4d70ae33224570dac31a54b624
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Oct 7 22:54:06 2016 -0600

    Fix #295. Remove use of BSD extensions for comparing strings

commit 36a251ab3ee4e6dc668129e0ef5fa62b1b8d5d49
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Oct 7 22:26:01 2016 -0600

    Fix #300. Emit RMS as a float not a percentage in JSON

commit 2555035f44d82160e51261c3add92cc38af352a7
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Oct 7 21:56:22 2016 -0600

    Use correct RE for floating point numbers in reporter_output_test.cc

commit 332f677b8bec401641a2743ab5d741c13cc6811d
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Oct 7 11:35:03 2016 -0700

    Apply clang-format to all headers and source (#303)

commit 1100e9190709a48b0819c84b3cebeaf2bf904d65
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Oct 7 11:04:50 2016 -0700

    Simplify clang-format and apply to tests (#302)

commit d1daeee4e90c1125b52baa9bcaff46a987c2a795
Author: ktnyt <ktnyt@users.noreply.github.com>
Date:   Thu Oct 6 01:19:14 2016 +0900

    Pass flag string to `check_cxx_compiler_flag` (#298)

commit 2aca242bf69870cc208cb7da3c026c1f64b12cdb
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Sep 28 18:21:36 2016 -0600

    Fix various uninitialized members

commit 6cadcf7f142b6de4cdd0d513f8d4a89a588d43c1
Author: Alt <psialt@mail.ru>
Date:   Tue Sep 27 01:48:25 2016 +0300

    Fix working on mac clock_gettime (#292)
    
    * fix working on mac clock_gettime
    
    * Comment fixme

commit 62c68ba4f0b093f1249715d7aa276891497ec6a5
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Sep 23 12:44:22 2016 -0700

    s/resolved/unresolved/

commit 917b86e615f659d9fb9819d1fa765cd459fc6861
Author: Nicholas Hutchinson <nshutchinson@gmail.com>
Date:   Thu Sep 15 22:10:35 2016 +0100

    Auto-detect whether Benchmark should produce colorized output (#126)
    
    * Auto-detect whether to produce colorized output
    
    Rename --color_print to --benchmark_color for consistency with the other
    flags (and Google Test). Old flag name is kept around for compatibility.
    
    The --benchmark_color/--color_print flag takes a third option, "auto",
    which is the new default. In this mode, we attempt to auto-detect
    whether to produce colorized output. (The logic for deciding whether to
    use colorized output was lifted from GTest:
    <https://github.com/google/googletest/blob/master/googletest/src/gtest.cc#L2925>.)
    
    * Update CONTRIBUTORS, AUTHORS

commit b826143ac20a105f7caba6d1d5afe4c5204864cf
Author: Nicholas Hutchinson <nshutchinson@gmail.com>
Date:   Sun Sep 11 22:36:14 2016 +0100

    Flush reporters' output streams after writing a benchmark run (#288)
    
    If a reporter's output stream isn't line-buffered (e.g. it's not writing
    to a terminal) then it can be some time before a write to it becomes
    visible.
    
    This is problematic if, say, you're wanting to use tail -f to view the
    file written to via --benchmark_out. Or if the application crashes,
    leaving you with no results.
    
    Addressed by flushing the reporters' output streams whenever we invoke
    methods that may write to them.

commit c6f3f0eb9cd68150371c0c45b84aeb0dc72114c9
Author: Eric <eric@efcs.ca>
Date:   Tue Sep 6 02:28:35 2016 -0600

    Cleanup RunBenchmark code. (#289)
    
    * Cleanup the code for generating and running benchmarks
    
    * Rework calculation of real/manual time
    
    * Add back TSAN builder

commit d038472c18e7aa5b206896a9cd71b220b36b5eb8
Author: Eric <eric@efcs.ca>
Date:   Mon Sep 5 15:48:40 2016 -0600

    Refactor benchmark.cc into benchmark_register.cc and benchmark.cc (#287)
    
    * Refactor benchmark.cc into benchmark_register.cc and benchmark_run.cc
    
    The benchmark.cc file is getting really big and it contains a bunch of
    unrelated components. This patch separates the files into two separate
    parts. The "runtime" parts and the "registration" parts.
    
    This patch also removes the PIMPL used by Benchmark. Previously we couldn't
    have STL types in the interface but now we can. Therefore there is no reason
    to keep BenchmarkImp.
    
    * add missing include
    
    * rework windows timers again
    
    * Guard timespec on older Windows versions
    
    * Remove old thread safety annotation workarounds

commit 9c261681266d051c0b04ddbe2064b569c8b19528
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Sep 5 15:40:12 2016 -0600

    Document --benchmark_filter. Thanks to NAThompson for the original patch

commit 72be9523bb88d5b96e3891776fad18b790bfd2d2
Author: Ronny <ronnybrendel@gmail.com>
Date:   Sat Sep 3 21:56:46 2016 +0200

    Add Benchmark::ThreadRange() version with increment instead of multiply (#283)
    
    * add additive thread range
    
    * add test

commit 60e88c21e44c34a847b5c11e7b9f28107602cfc3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 02:11:42 2016 -0600

    Remove TSAN builder for now.

commit db376c8654c18701c111f7e789f9f2bd0ec8d689
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 01:45:59 2016 -0600

    Tweak TSAN flags

commit 183999c0020a33cef8f6e068d18fb5d281015a2b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 00:40:44 2016 -0600

    Add Thread Sanitizer bot to Travis

commit 07ee194092e8ad246dea873b57f00d296c16b691
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 00:19:37 2016 -0600

    Fix wording because an idiot came up with it.

commit 309ecb737f4ad24ff5c8fa442245192423d18e97
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 00:18:02 2016 -0600

    Increase complexity_test runtime slightly less.

commit f261c68074ef621b1ff4079a451518ff830a166a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 00:13:20 2016 -0600

    Try and add MSVC NORETURN attribute again

commit 756f069918f7791110c867064e225b467f3a45bf
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Sep 3 00:06:51 2016 -0600

    Increase complexity_test.cc runtime to attempt to avoid appveyor failures

commit 2314368cb51cd19518e9c69e7cd7449ff081d969
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Sep 2 23:59:07 2016 -0600

    Add another workaround for Appveyor warnings

commit 5224b63c35c6a51670cd6e922607d870d750843e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Sep 2 23:54:58 2016 -0600

    Fix BENCHMARK_NORETURN on MSVC

commit a85f2a8e5b57ebabd936f1414238251f988c7419
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Sep 2 23:48:17 2016 -0600

    attempt to suppress apveyor warnings

commit cba945e37dd8f336c7c8f5367f3c7d9498d5e09b
Author: Eric <eric@efcs.ca>
Date:   Fri Sep 2 21:34:34 2016 -0600

    Make `PauseTiming()` and `ResumeTiming()` per thread. (#286)
    
    * Change to using per-thread timers
    
    * fix bad assertions
    
    * fix copy paste error on windows
    
    * Fix thread safety annotations
    
    * Make null-log thread safe
    
    * remove remaining globals
    
    * use chrono for walltime since it is thread safe
    
    * consolidate timer functions
    
    * Add missing ctime include
    
    * Rename to be consistent with Google style
    
    * Format patch using clang-format
    
    * cleanup -Wthread-safety configuration
    
    * Don't trust _POSIX_FEATURE macros because OS X lies.
    
    * Fix OS X thread timings
    
    * attempt to fix mingw build
    
    * Attempt to make mingw work again
    
    * Revert old mingw workaround
    
    * improve diagnostics
    
    * Drastically improve OS X measurements
    
    * Use average real time instead of max

commit 94c2a30a3eefa6ae91b2e44825a8ca5884b47707
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Sep 2 14:49:59 2016 -0700

    Add clang-format file

commit 6a28f1e96819be19377472fa59a04602769c9c9d
Author: biojppm <biojppm@users.noreply.github.com>
Date:   Thu Sep 1 18:51:48 2016 +0100

    Fixture: add non const Setup() and TearDown(). (#285)
    
    * Fixture: add non const Setup() and TearDown().
    
    This allows write-access to the State variable, which is important in
    upcoming user-defined counter functionality.
    
    * Fix const placement in the Fixture methods.
    
    * Fixture: use const_cast instead of static_cast.

commit 83561f05803dc2001626b61652e02192fa528690
Author: biojppm <biojppm@users.noreply.github.com>
Date:   Wed Aug 31 23:28:43 2016 +0100

    CMake: add headers to the list of source files. (#284)
    
    cmake does not require this, but IDEs such as VisualStudio or QtCreator
    need this to add the headers to the generated project.

commit 61f570e82a9334ef13f794b9149013feeb1a2ab1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 30 03:41:58 2016 -0600

    Fix #202 - Document Windows dependency on shlwapi.lib

commit df7bd92afd9e5b803cb29d92f4f545291a5f045e
Author: Eric <eric@efcs.ca>
Date:   Mon Aug 29 12:43:55 2016 -0600

    Add warning for large benchmark families (#279)
    
    * Add warning for large benchmark families
    
    * reflow comment

commit 6e259170011cd2fbac069b9d4ff83b42445a96cc
Author: Eric <eric@efcs.ca>
Date:   Mon Aug 29 12:43:30 2016 -0600

    Add -DBENCHMARK_USE_LIBCXX:BOOL=<value> option. (#280)
    
    * Add BENCHMARK_USE_LIBCXX option.
    
    * Add comments
    
    * re-add zero null pointer warning

commit 49bbff2c66c7be2192a779eb4a158e91f62ce489
Author: Eric <eric@efcs.ca>
Date:   Mon Aug 29 11:59:46 2016 -0600

    Supply old `RangePair` and `ArgPair` API for C++03 compatibility. (#278)
    
    * changes
    
    * remove other changes
    
    * remove unneeded test
    
    * cleanup unused include

commit 2e0796e1487d2f060d5fb526d6e0e387c55233aa
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 28 23:15:55 2016 -0600

    Cleanup and optimize Range generation.

commit db1af86d16f6ffb59e8fc628be2bfc660ec54470
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 28 23:07:38 2016 -0600

    Fix out-of-bounds std::vector access.
    
    In the `Ranges(...)` generation code a "control" vector which stores
    the current index for each range passed to `Ranges`. Previously this vector
    was incorrectly initialized to the size of the subranges not the number
    of subranges.
    
    Additionally this patch suppresses unused warnings generated by
    `stream_init_anchor`.

commit cbcd7b656eb921d6a8ad8643a20439e71c42a76c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 28 22:48:48 2016 -0600

    Fix std::cout/std::cerr static initialization order fiasco.
    
    The benchmark library internals write to std::cout/std::cerr during program
    startup. This can cause segfaults when the user doesn't include <iostream> in
    the benchmark (which init's the streams). This patch fixes this by emitting
    a dynamic initializer in every TU which initializes the streams.

commit 78e22f10de53033cbc1139df91274bc2c8fbf802
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 28 14:26:54 2016 -0600

    Update libc++ install script to use new names

commit aaa25ac376f2c6e68a46afacd552bc0f50052e6e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 28 14:22:11 2016 -0600

    Improve diagnostic output for output tests.

commit 0ed44560973cad74be04848a74eca3dda0ed7957
Author: Eric <eric@efcs.ca>
Date:   Sun Aug 28 13:24:16 2016 -0600

    Refactor output test runner into standalone module. (#277)
    
    * refactor
    
    * Move default substitutions into library
    
    * Move default substitutions to the *right* place in the library
    
    * Fix init order issues that caused test failures
    
    * improve diagnostics
    
    * add missing include
    
    * general cleanup
    
    * Address review comments

commit 577baa0dbdc6ea6d916db0f12ed2dcc5cee19b99
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Aug 10 18:23:50 2016 -0600

    Remove MinGW builder in preference of MinGW-w64.
    
    The plain MinGW enviroment does not provide any threading supporting, including
    in the C++ STL. The MinGW-w64 enviroment does not have this problem.
    
    This patch removes the 32 bit bot since it's always going to fail.

commit a11fb69c89eae0f5619917da209c6a7f057b6bd1
Author: Eric <eric@efcs.ca>
Date:   Wed Aug 10 18:20:54 2016 -0600

    Add --benchmark_report_aggregates_only={true|false} flag for better summary output. (#267)

commit c9d747e5e6faf333dfde286dad7243a2907697da
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 9 14:36:15 2016 -0600

    Test different Appveyor MinGW installation

commit a7a7c561524d3fc7e3606c983ede3445c2deb550
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 9 14:14:15 2016 -0600

    Workaround flaky complexity_test.cc test case.
    
    See https://github.com/google/benchmark/issues/272

commit 5eac66249ce28f6baae80a2565d8d53e1a3f3945
Author: Eric <eric@efcs.ca>
Date:   Tue Aug 9 12:33:57 2016 -0600

    Add a "compare_bench.py" tooling script. (#266)
    
    This patch adds the compare_bench.py utility which can be used to compare the result of benchmarks.
    The program is invoked like:
    
    $ compare_bench.py <old-benchmark> <new-benchmark> [benchmark options]...
    Where <old-benchmark> and <new-benchmark> either specify a benchmark executable file, or a JSON output file. The type of the input file is automatically detected. If a benchmark executable is specified then the benchmark is run to obtain the results. Otherwise the results are simply loaded from the output file.

commit de4ead7a53a3ee1128e0d86150fc8ef598d7ffbd
Author: Eric <eric@efcs.ca>
Date:   Tue Aug 9 12:31:44 2016 -0600

    Document compiler requirements (#269)

commit 96a5965b6ed2f3723b5c71e6ef32a008b8b0c107
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 9 12:09:37 2016 -0600

    Use pre-installed MinGW on Appveyor
    
    Currently out Appveyor CI downloads and stashes a custom MinGW installation.
    However the builder already provides both 64 and 32 bit installations of MinGW.
    This patch changes our CI to use those instead.
    
    I'm hoping this will fix issues where the g++ is broken due to the Appveyor
    package caching semantics.

commit 95dee3c699e0c972fca9ad414f80e451e0bf4d7f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Aug 8 02:22:49 2016 -0600

    Work around bogus GCC warning

commit ee54a3f03e66f69d9355013486f3d5e963a36dd4
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Aug 8 02:04:59 2016 -0600

    Rework Appveyor config
    
    Currently the Appveyor bot is a PIT. It never passes and it often hangs
    or gives very poor output. This patch rewrites the configuration.
    
    This patch also attempts to fix a flaky complexity test as a drive-by.

commit cfd717e43be63ba778cc50eb8716e22065629246
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Aug 8 01:41:01 2016 -0600

    Increase Appveyor timeout and fix build warning

commit 9e13b95b7285d2bcca4a79baa6af60a91066b99b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Aug 8 00:04:59 2016 -0600

    fix Appveyor config and add timeout

commit 85e7ed7eea3e4da4676942ab2c5ecedc04c6dac3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 23:44:34 2016 -0600

    Add libc++ and MSAN builders to to travis.
    
    This patch adds three new build configurations to the travis CI.
    
    * Clang 3.8 w/ libc++
    * Clang 3.8 w/ libc++, UBSAN, ASAN
    * Clang 3.8 w/ libc++, MSAN

commit 8228b3e8a7298c4725cc079f96e5fa4bc96919b6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 20:09:52 2016 -0600

    Make Appveyor show test output on failure

commit 8267117a92c0c30294839f4c5006b2e1b77dd14a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 19:25:19 2016 -0600

    Add ASAN and UBSAN builders to travis for both GCC and Clang.
    
    This patch adds new builders that test against GCC 6 and Clang 3.8 respectivly.
    They also enable both address and undefined sanitizer. MSAN currently won't work
    since it requires a sanitized STL.

commit c04f703ab499058c62d6e3c4e05c11d3cb1e8781
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 17:33:18 2016 -0600

    Fix signed integer overflow UB in complexity computations.
    
    Previously the FittingCurve functions for n^2 and n^3 did the calculation
    using int types. This can overflow and cause UB. This patch changes the
    calculations to use std::pow to prevent this.
    
    Also re-enable VC 2013 appveyor bot since I *hope* this is what was causing
    the failures.

commit 5121b8546b58afb03d0507ec4002fb3b5a67d083
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 17:09:31 2016 -0600

    Temporarly disable VC 2013 appveyor build in order to test VC 2015

commit 9820035998dea3dbcfd4be0e46a0d56a0e8ed53e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 16:31:43 2016 -0600

    Whitespace change to trigger appveyor.

commit 1b57a2ad056a80f919eb3841aefc859c0bde64fb
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 15:19:20 2016 -0600

    Add myself to AUTHORS.
    
    This is secretly just a test commit to get appveyor to run again.

commit f30028b2a8ebe7f6aec5e5b23da7912de6faccaa
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sun Aug 7 14:57:39 2016 -0600

    Attempt to fix VC 2013 build.
    
    VC 2013 injects valid when  assigning an initializer list to std::set.
    This attempts to work around this issue by using std::set's constructors
    instead of the assignment operators.

commit dfe026075480f117f424d254c2f701ac97ea4cdd
Author: Marcin Kolny <marcin.kolny@gmail.com>
Date:   Thu Aug 4 21:30:14 2016 +0200

    Support multiple ranges in the benchmark (#257)
    
    * Support multiple ranges in the benchmark
    
    google-benchmark library allows to provide up to two ranges to the
    benchmark method (range_x and range_y). However, in many cases it's not
    sufficient. The patch introduces multi-range features, so user can easily
    define multiple ranges by passing a vector of integers, and access values
    through the method range(i).
    
    * Remove redundant API
    
    Functions State::range_x() and State::range_y() have been removed. They should
    be replaced by State::range(0) and State::range(1).
    Functions Benchmark::ArgPair() and Benchmark::RangePair() have been removed.
    They should be replaced by Benchmark::Args() and Benchmark::Ranges().

commit 7f1da4a68b83fa8474ff61c13d26922866871285
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 2 22:09:06 2016 -0600

    Hide yet another test from MSVC 2013

commit 25eae60c4c8145553a50d536dac922a5b65bcee6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 2 19:33:41 2016 -0600

    Attempt to fix MSVC build failures

commit 5f5ca31ce0f9e5fa33e622aa98f9feee31b0c099
Author: Eric <eric@efcs.ca>
Date:   Tue Aug 2 17:22:46 2016 -0600

    Add `RegisterBenchmark(name, func, args...)`  for creating/registering benchmarks. (#259)
    
    * Add RegisterBenchmark
    
    * fix test inputs
    
    * fix UB caused by unitialized value
    
    * Add RegisterBenchmark
    
    * fix test inputs
    
    * fix UB caused by unitialized value
    
    * Work around GCC 4.6/4.7/4.8 bug

commit b7f8e355eea6e1f19007fd80b4ecbeca9d9ab541
Author: Eric <eric@efcs.ca>
Date:   Tue Aug 2 15:47:29 2016 -0600

    update travis, squash history (#265)

commit 44128d87d2846fc20d540ef41eda6da9ffbb6aba
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Aug 2 15:12:43 2016 -0600

    Add --benchmark_out=<filename> and --benchmark_out_format=<format> options.
    
    These options allow you to write the output of a benchmark to the specified
    file and with the specified format. The goal of this change is to help support
    tooling.

commit f68e64c60a6b20a1f50046df58111107a09fd6a3
Author: Vadym <drozdvadym@gmail.com>
Date:   Mon Jul 25 22:13:09 2016 +0300

    add support for step in DenseRange() (#260)

commit a2ca94dd10eb663345070bab68df510ffa2dc145
Author: Eric Fiselier <eric@efcs.ca>
Date:   Sat Jul 23 16:22:13 2016 -0600

    Fix missing SYSTEM_INFO initializers

commit 3b2d0abd2b4d9c31c70eb13dc14e7ee627621b3c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jul 22 17:48:37 2016 -0600

    Use correct integer type for complexity. MSVC warns otherwise

commit 950c8b74403f6f0ad962cac63efe1ccb18100692
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jul 22 17:31:05 2016 -0600

    Fix suprious failures in complexity_test.cc

commit 440df36e7a3b69ff46bead20b1b30ac7e0c811e2
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jul 22 16:18:34 2016 -0600

    Improve failure mode in complexity_test.cc

commit 1bd62bd0becbb692c7088f331c876ca3aeff4c65
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jul 22 15:42:26 2016 -0600

    Revert "Workaround missing std::this_thread::sleep_for function in tests."
    
    GCC 4.6 doesn't provide std::chrono::steady_clock and GCC 4.7 doesn't provide
    std::this_thread::sleep_for. I would prefer to support GCC 4.7 but I'm
    reverting this since the bots are GCC 4.6.
    
    This reverts commit c5f454957d457e8b6ae5a1a1eaf8eb6739c17f67.

commit c5f454957d457e8b6ae5a1a1eaf8eb6739c17f67
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Jul 22 15:35:26 2016 -0600

    Workaround missing std::this_thread::sleep_for function in tests.
    
    GCC 4.7 doesn't provide std::this_thread::sleep_for on my system.
    This patch changes the tests to use a different method for wasting
    cycles.

commit ebd37b191c757cd0b20c9c8517e38d1e1ac45069
Author: Sven <sven@sven-johannsen.de>
Date:   Wed Jul 13 22:00:32 2016 +0200

    set cpuinfo_num_cpus on Windows (#254)

commit b805b7c6e02d0a1d1709f14295c0b05b988a5668
Author: Elliott Hughes <enh@users.noreply.github.com>
Date:   Tue Jul 12 12:40:09 2016 -0700

    Add missing `volatile`s to 32-bit ARM cycleclock assembler. (#253)
    
    Without these, clang reorders these instructions as if they were
    regular loads/stores which causes SIGILL from the kernel because
    it performs all the loads before it starts testing the values.

commit 7e40ff9e35699ea14a6addd2ce20cd23be519430
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Jul 11 14:58:50 2016 -0600

    Provide a better implementation of DoNotOptimize(...).
    
    This implementation is less likely to ICE compilers, and is more correct.
    It also acts as a memory barrier which will help prevent writes to global memory
    from being optimized away.

commit 2149577f892116d4080d16fbf0b0455b1026b219
Author: Steve Downey <sdowney@gmail.com>
Date:   Wed Jul 6 15:36:56 2016 -0400

    Add export linker flags policy to cmake (#251)
    
    Add policy CMP0056, which honors the link flags in try_compile and
    try_run. This allows for building against non-system libc++ by providing
    the correct -L and rpath options in a containing project.
    
    For example:
    
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L ${LLVM_ROOT}/lib -l c++ -l c++abi")
        set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,${LLVM_ROOT}/lib")

commit 885ca41cf835313eca052ad112608631685ae6f2
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Mon Jun 27 20:26:23 2016 +0200

    added check for SetComplexityN (#248)

commit a0783fd7f629789cd406d74392427a73a692bf57
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Mon Jun 27 20:25:43 2016 +0200

    fix 244 (#247)

commit d147797aaccb71f44d7ee3df94dcf14f8d713247
Author: Nick <NAThompson@users.noreply.github.com>
Date:   Mon Jun 27 13:24:13 2016 -0500

    Add  state.SetComplexityN to docs. (#245)
    
    Add `state.SetComplexityN(state.range_x());` to documentation so that complexity is calculated correctly.

commit 1d53e5e0d8d0c5b69fc19d7e95dda2c8385d03f4
Author: Ryan <ryanvo@users.noreply.github.com>
Date:   Mon Jun 20 12:15:09 2016 -0400

    Clarified output formats (#241)

commit 3fdd76bd14ff122c6881d7f15ec5cb2629241e7a
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Fri Jun 3 18:33:17 2016 +0200

    fix issue 235 (#236)

commit 2d088a9f2d41acb77afc99d045f669e1a21b61ef
Merge: 84cd50b e498143
Author: Dominic Hamon <dominic@google.com>
Date:   Thu Jun 2 14:37:31 2016 -0700

    Merge branch 'ismaelJimenez-added_lambdas'

commit e49814316891c8d6e125da5d3f72c7bc45f31bf4
Author: Dominic Hamon <dominic@google.com>
Date:   Thu Jun 2 14:37:14 2016 -0700

    fix warning on loss of integer precision

commit 51c23a9115e4c4eb91e8286ba00069380374937d
Merge: 84cd50b 2859ae9
Author: Dominic Hamon <dominic@google.com>
Date:   Thu Jun 2 14:33:14 2016 -0700

    Merge branch 'added_lambdas' of git://github.com/ismaelJimenez/benchmark into ismaelJimenez-added_lambdas

commit 2859ae93949a7a3415082e65001f25e8e5e78284
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 23:27:29 2016 +0200

    changed complexity_n to int and fix some whitespaces

commit 8ba94b4c1842d9424c592258a6dfc9beea4912c8
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 22:40:21 2016 +0200

    changed global string to const char *

commit 1a633969b31b2a486bdfae80576c53f40293281e
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 22:23:39 2016 +0200

    changed BigO logic order

commit 240ba4e64eb46e1f5acbafaadae34c2b2ca701eb
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 22:21:52 2016 +0200

    changed BigOFunc argument from size_t to int

commit f964480080c3e2b3f6f437b76ccd07bbfdb92ad1
Merge: 22cb9d9 3ef6339
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 22:02:17 2016 +0200

    Merge branch 'added_lambdas' of https://github.com/ismaelJimenez/benchmark into added_lambdas

commit 22cb9d9ce0ff12219f5ca6c4a28124d11730e66f
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 22:01:31 2016 +0200

    google formated

commit 3ef63399716c7ac213d4016ab9454422f4f9d6d1
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Thu Jun 2 20:58:14 2016 +0200

    Update Readme.md

commit 109f528a4039c298e1f02ff4ce2fd32c552c5a38
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 19:48:53 2016 +0200

    removed functional library not needed

commit 11e304355492670709c60e6d39eb42fc01fd878a
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 19:42:08 2016 +0200

    checked format before pull request

commit 212cfe1c2e659d9523cbc453917d0cdde4699bcd
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu Jun 2 19:01:10 2016 +0200

    removed check on automatic fit, to avoid random convergence misfits breaking the build

commit 8c73d49b775610a4ee027a7f44b37962684a2370
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed Jun 1 23:13:10 2016 +0200

    fixed reporter_output_test

commit 867f9145a0a45f8b993cec8b48309c19391acaa0
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed Jun 1 23:08:01 2016 +0200

    added lambdas to complexity report

commit 84cd50b85e2c7ff384a362933446691d3c3be357
Author: Billy O'Neal <billy.oneal@gmail.com>
Date:   Tue May 31 16:54:02 2016 -0700

    Add workaround for VS2013 const-incorrect atomic (#230)

commit 3685cad68c5180e0da2afb7c05bd03422c0fe454
Author: Billy O'Neal <billy.oneal@gmail.com>
Date:   Tue May 31 14:52:26 2016 -0700

    Added new noexcept macros for VS2013 (#229)

commit 74a278e206f9387dec72ec000436a18bfcb3070e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 30 17:13:41 2016 -0600

    Fix flaky test

commit 519e8d0e56ac41813aa60bb6b39bf05308205b5b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 30 16:52:24 2016 -0600

    Fix missing declaration of FLAGS_color_print

commit 7188824c333d86fe999988ad61cbb0825780ab8b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 30 15:33:52 2016 -0600

    Fix windows build in console_reporter.cc. Fixes #228

commit 02230445e065456371cea2a18d5fee6a33b0c1d9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri May 27 16:53:30 2016 -0600

    Move UnitTime helpers to reporter.h

commit 1b263fe6d906bb0854b84247f1b395bbacd3b88e
Author: Eric <eric@efcs.ca>
Date:   Fri May 27 16:45:25 2016 -0600

    Cleanup reporters (#226)
    
    * Move ComputeStats call out of the reporters
    
    * Cleanup adjusted time calculations in reporters
    
    * Move ComputeBigO call out of reporters
    
    * Remove ReportComplexity interface using ReportRuns instead
    
    * Factor out reporting of basic context information
    
    * Attempt to fix GCC 4.6 build errors
    
    * Move ComputeStats to complexity.cc

commit 238e558fdb6f00a2e3eb75d6c353030f8a510f8c
Author: Eric <eric@efcs.ca>
Date:   Fri May 27 13:37:10 2016 -0600

    Allow benchmarks to take arbitrary arguments. (#221)
    
    * Add lambda benchmarks
    
    * Remove lambda capture since the lambda is not at a block scope
    
    * Remove LambdaBenchmark helper since FunctionBenchmark can be used with non-capturing lambas
    
    * Add lambda benchmarks
    
    * Remove lambda capture since the lambda is not at a block scope
    
    * Remove LambdaBenchmark helper since FunctionBenchmark can be used with non-capturing lambas
    
    * Add more docs for BENCHMARK_CAPTURE.
    
    * Fix use of misnamed parameter
    
    * Guard BENCHMARK_CAPTURE tests against non-c++11 compilers
    
    * Move tests out of basic_test.cc

commit 5686bf1b38f8aa713267097d7c1944140f71b5d3
Author: Eric <eric@efcs.ca>
Date:   Fri May 27 13:34:37 2016 -0600

    Change reporters to use a specified output and error stream. Add tests for output. (#219)
    
    * Add test for reporter output.
    
    * setup err_stream tests
    
    * Fix warnings in tests
    
    * whitespace
    
    * Fix build errors caused by super pedantic compilers
    
    * Pass streams by pointer not non-const reference

commit 3f7a9c76fbbd0a4b8f54f866ccbcc4d6871c7cd1
Merge: 3ff8a6e d6bc7e1
Author: Dominic Hamon <dominic@google.com>
Date:   Thu May 26 14:02:58 2016 -0700

    Merge branch 'ismaelJimenez-update_complexity'

commit d6bc7e1581c4c8c6c3fcccd093c047158b4bf461
Merge: 3ff8a6e c1c7d33
Author: Dominic Hamon <dominic@google.com>
Date:   Thu May 26 14:01:28 2016 -0700

    Merge branch 'update_complexity' of git://github.com/ismaelJimenez/benchmark into ismaelJimenez-update_complexity

commit c1c7d33279b463088550986fe6f311a3ad2faa2e
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu May 26 22:39:17 2016 +0200

    added benchmar_apit to complexity.cc

commit 805e8baee9da3744428e3f646f321c29283c4072
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu May 26 21:26:43 2016 +0200

    small refactor

commit ac3ec2ded37e4f9e4083f8b65644f7c4b60336d7
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu May 26 21:16:40 2016 +0200

    moved complexity.h into src and BigO enum into benchmark_api

commit d82f0c313133c60e3a5db5be6f7d2299cd5ffdd8
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu May 26 20:57:27 2016 +0200

    added includes

commit 37ab858e4b245a49805b01358655fab069474a7c
Author: Ismael <ijimenezm@hotmail.es>
Date:   Thu May 26 19:44:11 2016 +0200

    initialized doubles to 0.0

commit 3ff8a6ecc8bfbfa62af85ccfc07b035149eb13cb
Merge: a38f022 74e82e8
Author: Eric <eric@efcs.ca>
Date:   Thu May 26 00:53:38 2016 -0600

    Merge pull request #224 from zabereer/donotoptimize_with_test_merged
    
    Force DoNotOptimize operand to memory for both gcc and clang

commit 74e82e822f55871a969b1642019d57639d9a4eb4
Author: Albert Pretorius <pretoalb@gmail.com>
Date:   Wed May 25 07:31:20 2016 +0100

    Force DoNotOptimize operand to memory for both gcc and clang

commit a38f022b5a2b21c272c672f2d7651e1bee1c18bf
Merge: 84bc4d7 5e51e43
Author: Dominic Hamon <dominic@google.com>
Date:   Wed May 25 15:35:17 2016 -0700

    Merge branch 'efcs-skip_with_error'

commit 5e51e439a8a65ca5aec52e7d8caff5c21a6e9ec4
Merge: 9686f17 90a069f
Author: Dominic Hamon <dominic@google.com>
Date:   Wed May 25 15:35:04 2016 -0700

    Merge branch 'skip_with_error' of git://github.com/efcs/benchmark into efcs-skip_with_error

commit 171588561112744263caa5847847e76e9bbde562
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 23:33:25 2016 +0200

    fixed typos

commit 340fe557e2995addcb2af24dfdc7d86801487330
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 23:22:53 2016 +0200

    indent

commit 290ac9ee0ed445811897c790715e47d490dacd9f
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 23:19:32 2016 +0200

    updated complexity_test.cc to new interface for auto

commit 1ee11056c1f1117142af36dd3ac4df2c2e6ce1bb
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 23:13:19 2016 +0200

    move include from .h into .cc

commit 90a85080636d0626ed975531d08bc1339a405fa9
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Wed May 25 23:06:27 2016 +0200

    Update Readme.md

commit 2f61f8aee0bc8b09429fce8b7d2718f805ed18ac
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 22:57:52 2016 +0200

    refactor leastsq into complexity

commit 087f0d3f1bc6610ceaa346f8e573dd23236cea08
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 22:26:57 2016 +0200

    upgraded leastsq

commit e246699f25f50e80fad71a1352313f5f3d3e21d3
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 25 21:18:56 2016 +0200

    added auto as default value for complexity

commit 9686f1769e2a4e053cf51fdd69beec58ca8d7081
Merge: 84bc4d7 1003a70
Author: Dominic Hamon <dominic@google.com>
Date:   Wed May 25 09:00:31 2016 -0700

    Merge branch 'skip_with_error' of git://github.com/efcs/benchmark into efcs-skip_with_error

commit 90a069f67f6674248faa7c46ca791f0afb211008
Merge: 1003a70 84bc4d7
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 21:52:55 2016 -0600

    Merge branch 'master' into skip_with_error

commit 84bc4d703b6f27a0bdcb48443c9bca3f60e1818c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 21:52:23 2016 -0600

    Add a per benchmark 'Repetitions' option.

commit 1003a70e5fe80967fe465da54c2f924944ad9fa6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 19:45:18 2016 -0600

    Fix csv_reporter when reporting errors

commit 6f84ffcd8b53b035fe4430070dbca19641892def
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 18:25:44 2016 -0600

    fix another bad merge

commit ee8e37c67db9a717059f9f7bdfb83549208d65e9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 16:19:04 2016 -0600

    Fix bad merge which caused the benchmark name to be printed twice

commit 6a45324e1d1c1f2c7e56a2df970e38a62122fc4f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 16:12:30 2016 -0600

    Address review comments.

commit b195f82554819d7e152e2b32b39220b85af18cf7
Merge: 525858e 1080b17
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 15:45:02 2016 -0600

    Merge branch 'master' into skip_with_error

commit 525858e68797d053ab4c859528164974978162ba
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 15:44:58 2016 -0600

    Fix error-handling in reporters

commit 924b8cee7af0a302ecb07b3429760c4a906460c7
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 15:21:41 2016 -0600

    Reflow some wording. NFC

commit 1080b17bf5d0a093e5aa6fb2a474df443e05bb82
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 15:09:31 2016 -0600

    Fix build error with libc++

commit bdeb38718e23468613c000463e7e42e3b5516b23
Merge: 90c9ab1 2440b75
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 15:01:07 2016 -0600

    merge

commit 2440b752fd335d00349b6dd77d67e5a6401565fb
Author: Dominic Hamon <dominic@google.com>
Date:   Tue May 24 13:25:59 2016 -0700

    Formatting updates

commit a86545874a2c4c84a7361f268d621c72c1af24c8
Merge: 31cdabf f126852
Author: Dominic Hamon <dominic@google.com>
Date:   Tue May 24 13:15:55 2016 -0700

    Merge branch 'ismaelJimenez-complexity'

commit f126852c8fe0cbd4f702d696b88d3ca8c4911499
Author: Dominic Hamon <dominic@google.com>
Date:   Tue May 24 13:15:16 2016 -0700

    simplify format string for complexity output

commit 31cdabf6bbb63c5dd55cc679b84cd38db7cd3658
Merge: 9341d70 029f374
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 24 13:09:41 2016 -0700

    Merge pull request #216 from efcs/diagnostic-checks
    
    Add checks that <Resume|Pause>Timing functions are not called outside of the KeepRunning() loop. Fixes #204

commit a24ef95e1199c463bb088d321caa1b0591817813
Author: Ismael <ijimenezm@hotmail.es>
Date:   Tue May 24 20:48:34 2016 +0200

    adapt complexity_n to leastsq inteface

commit 64d72ee7b27c719be3233b1f1dd691084e07ffde
Author: Ismael <ijimenezm@hotmail.es>
Date:   Tue May 24 20:35:39 2016 +0200

    changed complexity_n from int to size_t

commit 5e10e120db2ddf36d75e910ec2c77adebbf7543f
Author: Ismael <ijimenezm@hotmail.es>
Date:   Tue May 24 20:26:21 2016 +0200

    fixed overshadow

commit e5cf020d9730d24391e1cd1dfb37aef2c163d82c
Author: Ismael <ijimenezm@hotmail.es>
Date:   Tue May 24 20:06:54 2016 +0200

    fixed warning

commit 36a9ae197f220df65ef7ed1a21015a8fb4ef1ece
Author: Ismael <ijimenezm@hotmail.es>
Date:   Tue May 24 19:56:49 2016 +0200

    added SetComplexityN

commit 9341d705a14afed7c4e0f8a22b1e6e8a6259fcc4
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue May 24 00:42:11 2016 -0600

    Change --benchmark_list_tests to respect the benchmark filter.
    
    This behavior mirrors how GTest handles these two flags.

commit e0de8171c678c0f0c643efa9e18de40ad119122b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 23:32:05 2016 -0600

    Change RunSpecifiedBenchmarks to return the number of benchmarks run. Fixes #145

commit 9fcdd6fc25fcb232038355c6103eb6f06bcd5dd5
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 20:51:15 2016 -0600

    Prevent re-execution of slow feature tests.

commit c7108df977c40c7794701c369a8cb66135d75e14
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 20:44:10 2016 -0600

    Only compile and run the C++03 test when -std=c++03 is supported. Fixes #164

commit 90c9ab1d8e0a44d229dae6b4f5f6355161de761a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 20:35:09 2016 -0600

    add doc

commit 43017f8b1510a50855e6b0ea145a534d3d754068
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 19:24:56 2016 -0600

    Add SkipWithError(...) function.

commit 029f37446daeef98db8dc3b26165405a1df2cc80
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 15:38:30 2016 -0600

    Allow test to compile with -fno-exceptions

commit 481e06e65acc2d82e8f3a02fba2fd226de56b3ad
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 15:27:43 2016 -0600

    Address review comments

commit 751e07d42da22f8ab554394cd3e242fc2ac80002
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 15:07:54 2016 -0600

    add newline

commit 69d1a524079e07508b4af08cbd1e83576387b468
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 15:05:55 2016 -0600

    Add checks that <Resume|Pause>Timing functions are not called outside of the benchmark. Fixes #204

commit 855786acf518db0162779f8196d930820e4f6b8c
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 22:49:16 2016 +0200

    added end of file carriage return

commit 0c23d2852f58dd8e264f67045fd6e454cf481c5c
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 22:31:40 2016 +0200

    extracted BigO and GetBigO in own file

commit 266b3bd635a37b28d6e92125c615d3e17f5022ea
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 22:09:55 2016 +0200

    changed color and remove iterations

commit f434ce3fb650d40db186780ea3506269d5035ffd
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon May 23 12:59:12 2016 -0600

    Add myself to the CONTRIBUTORS file

commit 43ef17441cc8767f5523031878a2f43ab1d7790b
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:50:35 2016 +0200

    refactor names

commit d577987fd76595cb52602bd75b2866886e95b0f2
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:40:41 2016 +0200

    changed indentation

commit ea69a8479046413d96b0eb826f1d982985281a67
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:34:54 2016 +0200

    fix

commit fed9b6f211a9ca67860bcaf183cb450e3695bb07
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:34:01 2016 +0200

    refactor least square .h

commit 266addc3f51f07ec182ed34af06e6d75b0f6d09f
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:21:34 2016 +0200

    fixed last_benchmark_instance

commit ac05c045335d3e32ec75e3aae930ecc1c6533212
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 20:12:54 2016 +0200

    refactor MinimalLEastSq

commit 5e52d2d6c048205626c4103d397bedf0527f67d8
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 19:19:29 2016 +0200

    refactor fitting curve

commit 5f9823bd92b2a24da06fac7b43f6658ec20cc901
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 23 18:51:29 2016 +0200

    fixed non-const reference arguments

commit 8afbf0ed3801ad12c4066d10e9d25764181321f4
Author: Ismael <ijimenezm@hotmail.es>
Date:   Sat May 21 16:45:45 2016 +0200

    reworked comment for complexity report

commit 07efafbf5c0e95fabbae284eedcc1dfe3d57a396
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Sat May 21 16:34:12 2016 +0200

    Update Readme

commit dc667d048678f3cb6b4355d4da8b5d121db8bbf2
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Sat May 21 12:40:27 2016 +0200

    Added asymptotic complexity to Readme

commit 5812d545efcd3bcbfd4e2e8d203bd42b8e5a7148
Author: Ismael <ismaelJimenez@users.noreply.github.com>
Date:   Sat May 21 12:16:40 2016 +0200

    Added range multiplier to Readme

commit 290bd60289ef571875415cf82be805f9a446c6a9
Author: Ismael <ijimenezm@hotmail.es>
Date:   Sat May 21 11:51:42 2016 +0200

    Refactor for pull request

commit 2e5c397b4829503a5cb023ac67d2a1f13ebda3aa
Author: Ismael <ijimenezm@hotmail.es>
Date:   Sat May 21 08:55:43 2016 +0200

    implemented complexity reporting

commit 872ff01a49390ccaf8ee5f13c18ae7be9cce8275
Author: Ismael <ijimenezm@hotmail.es>
Date:   Fri May 20 16:49:39 2016 +0200

    addaptation of minimal_leastsq library

commit b73dc22944cb933289bbdbf5bb6616dbfc50168f
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 18 21:25:00 2016 +0200

    implemented Complexity for O(1)

commit 27f0baa190b4ebd31436b3e8a89bee7fbdc50eb9
Author: Ismael <ijimenezm@hotmail.es>
Date:   Wed May 18 19:59:34 2016 +0200

    Added test file and Complexity() interface

commit 0a60062b3e8ae0376e6fcd41c5da50714a9ef47b
Merge: 360e66c d2103de
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 16 09:37:08 2016 -0700

    Merge pull request #212 from ismaelJimenez/master
    
    added option to change range multiplier

commit d2103de3d390715845f0cb42d3f070a039814580
Author: Ismael <ijimenezm@hotmail.es>
Date:   Mon May 16 18:17:11 2016 +0200

    Modified check for range multiplier

commit c60eefdbb78b29522568b1055941f3c20c843e78
Author: Ismael <ijimenezm@hotmail.es>
Date:   Sat May 14 15:56:34 2016 +0200

    added option to change range multiplier

commit 360e66c1c4777c99402cf8cd535aa510fee16573
Merge: 336fd11 fa0e7ef
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed May 11 12:07:59 2016 -0700

    Merge pull request #210 from BillyONeal/travis-init
    
    Mark sudo: required for Travis

commit fa0e7ef8c66f85007170e69f28afe9e1b86a957f
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Wed May 11 11:16:48 2016 -0700

    Mark sudo: required for Travis
    
    Google Benchmark's Travis build currently requires "sudo" to install newer
    versions of CMake and similar. See this for more details:
    
    https://docs.travis-ci.com/user/workers/container-based-infrastructure/
    
    Since Google Benchmark was put into Travis before 2015-01-01, it gets the
    standard infrastructure implicitly, so sudo works. But anyone who forks this
    repository and tries to add Travis.CI (so they can see if the build works
    before creating a PR) gets broken builds before this change.

commit 336fd111f56b60ff5b622041bc1ba60856dae787
Merge: 539da11 09edc48
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed May 11 09:20:54 2016 -0700

    Merge pull request #208 from BillyONeal/msvc-cli-warnings
    
    Fix MSVC++ command line warnings and support RELWITHDEBINFO / MINSIZEREL builds

commit 539da1125089ae6c29b361663a47bb4b33e7f647
Merge: 354b14d df9ab80
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed May 11 09:06:55 2016 -0700

    Merge pull request #209 from BillyONeal/fix-appveyor
    
    Fix appveyor's older MSVC++ builds by working around 2015 Update 2 bugfix

commit df9ab80113a890c38ff93ef37699078eeceb29fc
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Tue May 10 17:35:36 2016 -0700

    Use nanoseconds instead of duration<double, milli>
    
    MSVC++ before 2015 Update 2 has a bug in sleep_for where it tries to
    implicitly += the input with a nanoseconds variable. Work around this by
    using nanoseconds directly (which can be implicitly +='d with
    chrono::nanoseconds).

commit 09edc486b851ab948cc859e2c4a85a189378b284
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Wed Apr 27 18:49:17 2016 -0700

    Added GCC/Clang support for other rel configs

commit d89ab075fd0b545f4c69732839e2a978df602abf
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Wed Apr 27 18:48:43 2016 -0700

    Added support for CMake's other rel configs
    
    In addition to release, CMake supports RELWITHDEBINFO and MINSIZEREL
    build configurations. In particular, debug info is necessary for many
    profilers to do anything useful, making RELWITHDEBINFO important here.
    
    MINSIZEREL was added for completeness' sake.

commit 9bb1ba6b76f6af2f32e2f146c3e97fdac67e8340
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Wed Apr 27 18:47:03 2016 -0700

    Fix clobbering of default CMAKE_CXX_FLAGS_RELEASE
    
    BENCHMARK_ENABLE_LTO=true was completely replacing
    CMAKE_CXX_FLAGS_RELEASE; meaning neither CMake's release defaults nor
    user customizations were being applied.

commit 60b59217359ecac2060637906e9eae14216a47d7
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Wed Apr 27 18:44:39 2016 -0700

    Remove redundant MSVC++ /W3 triggering warnings
    
    This change looks for CMake's default setting for MSVC++, /W3 (and any
    other level should that change in the future), and removes it before
    adding /W4. This stops the build for MSVC++ emitting warnings about
    /W4 overriding /W3 earlier on the command line.

commit fa8b2d617152ee840ee924910cf3f20bf9c61277
Author: Billy Robert O'Neal III <bion@microsoft.com>
Date:   Tue May 10 16:46:26 2016 -0700

    Add myself to the contributors list

commit 354b14d1a0770da28f1725fa8409af3264de3a79
Merge: 277e7aa e253a28
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu May 5 14:07:46 2016 -0700

    Merge pull request #199 from jknuuttila/master
    
    Support for manual timing (see issue #198, https://github.com/google/benchmark/issues/198)

commit e253a284029c34f764fc26bb7859298d4ec0551b
Author: Jussi Knuuttila <jussi.knuuttila@gmail.com>
Date:   Sat Apr 30 16:23:58 2016 +0300

    Manual timing support.

commit dce2ebb40394237f75e577e1a5e2b4dfc20eb006
Author: Jussi Knuuttila <jussi.knuuttila@gmail.com>
Date:   Sat Apr 30 14:55:19 2016 +0300

    Fixed a warning caused by an implicit narrowing cast.

commit 277e7aafe693e3617c0911bc5defbc0804326cb4
Merge: 9fa66eb 02f409a
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 2 12:10:54 2016 -0700

    Merge pull request #201 from google/200
    
    Only output optional fields if they're set

commit 02f409a71f5231bf9b8803e771bdfa1056da23cc
Author: Dominic Hamon <dominic@google.com>
Date:   Mon May 2 12:04:16 2016 -0700

    Only output optional fields if they're set

commit 9fa66eb1305a4d12db94e4c7162326ae8aca1eac
Merge: 0500ec0 fb73389
Author: Dominic Hamon <dominic@google.com>
Date:   Mon May 2 11:17:36 2016 -0700

    Merge branch 'NewProggie-feature/add-ms-time-report'

commit fb733897c5eea5b9a04ebed5cfae37d608262129
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Mon May 2 19:53:45 2016 +0200

    Remove sleep.h dependency for tests

commit f352c30f1cc4312760c5d704433945a492276947
Merge: 1203b3c 0500ec0
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Fri Apr 29 21:42:21 2016 +0200

    Merge branch 'master' into feature/add-ms-time-report

commit 0500ec0ab877f4eebaefd4ec89a391ed22c95ef2
Merge: 27f8a62 a574110
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Apr 25 09:11:57 2016 -0700

    Merge pull request #174 from alycm/fix-leak
    
    Close a memory leak in configuration code

commit 27f8a6231368c679a04f351cf2632ce1f315ed40
Merge: 075a8a6 d6f96ed
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Apr 20 08:31:33 2016 -0700

    Merge pull request #196 from google/iterationdoc
    
    Add section on iterations.

commit d6f96ed6399bd943be7592e1114bf0ddf64d68b0
Author: Dominic Hamon <dominic@google.com>
Date:   Tue Apr 19 09:34:13 2016 -0700

    Add section on iterations.
    
    Also add some subheadings, and fix up the line lengths.
    
    Fixes #194

commit 075a8a6fbf90edeb653865657b8caa1854e4e411
Merge: b2e7340 838719d
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Apr 18 09:54:56 2016 -0700

    Merge pull request #195 from dvyukov/patch-1
    
    Fix SetLabel usage example

commit 838719dc02d1104153fb4193acea32a64d5559e7
Author: Dmitry Vyukov <dvyukov@google.com>
Date:   Mon Apr 18 14:24:13 2016 +0200

    Update benchmark_api.h

commit 1203b3cbe47ad772291fe520efb2a029687229ed
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Wed Mar 30 09:14:04 2016 +0200

    Fix missing <tuple> header in csv/json_reporter

commit 1043f45bedb5afcd982f4a4b4be716bcabb286f4
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Tue Mar 29 22:10:07 2016 +0200

    Add explanatory comment why src headers are needed in test/CMakeLists.txt

commit e6d62fd135d7c1c621ff3b25056bd5ea4d1754ec
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Tue Mar 29 20:35:38 2016 +0200

    Add GetTimeAndMultiplier to json and csv reporter as well

commit 0b4111c3b31db8806e0c3960c7f1f541b20cdb8b
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Mon Mar 28 21:32:11 2016 +0200

    Refactor GetTimeUnitAndMultiplier and add example

commit 7c69b36078b5773fbd6b09b539a30400138607a7
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Fri Mar 25 22:47:27 2016 +0100

    Add an additional parameter for time units

commit 3a02c462c795fd60e2620fc78c6f8c5b63aa1764
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Thu Mar 24 22:34:23 2016 +0100

    Add myself to the contributors list

commit cded70a1660e81f854b5d41795a514ec0825c32a
Author: Kai Wolf <kai.wolf@gmail.com>
Date:   Thu Mar 24 22:18:55 2016 +0100

    Add optional ms time unit for console reporter
    
    Some benchmarks may run a few milliseconds which makes it kind of hard to visually compare, since the currently only available nanoseconds numbers can get very large in this case. Therefore this commit adds an optional command line flag --benchmark_time_unit which lets the user choose between ns and ms time units for displaying the mean execution time.

commit b2e734087532897b7bb4c51a6b4f503060c9a20f
Merge: e4ad1af 0dca953
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Feb 26 02:39:44 2016 +0100

    Merge pull request #187 from insertinterestingnamehere/libcpp_include_fix
    
    Fix missing include in map_test.cc

commit 0dca953b135d967d1a8d3271718d9729ec026280
Author: Ian Henriksen <insertinterestingnamehere@gmail.com>
Date:   Wed Feb 24 12:31:31 2016 -0700

    Include cstdlib in map_test to make sure std::rand is available when
    building with libc++.

commit e4ad1afa1f3cb6ba60704878d4964a31784477dc
Merge: c5b80ff 53aca9b
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Feb 24 16:46:44 2016 +0100

    Merge pull request #186 from amin-jabri/multithreaded_Fixture_TearDown
    
    Pass const State to Fixture::TearDown. Fix memory leak in fixture_test

commit 53aca9bc7128b7c0cd513163c5432481f12025ee
Author: Mohamed Amin JABRI <amin.jabri@gmail.com>
Date:   Wed Feb 24 17:36:34 2016 +0900

    Pass const State to Fixture::TearDown. Fix memory leak in fixture_test

commit c5b80ff1acd56407b295a5bcb8a2a69d8c87c48e
Merge: 31e71be 8da907c
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Feb 17 11:45:59 2016 +0100

    Merge pull request #184 from KindDragon/patch-1
    
    Format json in README.md

commit 8da907c2c2786685c7da9f4759de052e3990f6f1
Author: Arkady Shapkin <arkadiy_s@inbox.ru>
Date:   Tue Feb 16 23:29:24 2016 +0300

    Update README.md

commit 31e71be77c0f45400628cf618c0360d544a522c5
Merge: 7fd3fa8 53068f9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Feb 16 02:08:29 2016 -0800

    Merge pull request #181 from google/map_test
    
    Pass const state to Fixture::SetUp. Add map_test.

commit 7fd3fa8e3c67c550a98e35a6d22962edd8460db9
Merge: bdb9f69 007efee
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Feb 16 02:08:02 2016 -0800

    Merge pull request #182 from buchgr/state_threads
    
    Add number of threads to State.

commit 007efee75186d1aa54be7e83e80986e753a2ee44
Author: Jakob Buchgraber <jakob.buchgraber@tum.de>
Date:   Mon Feb 15 14:19:43 2016 +0100

    Add number of threads to State.
    
    Having access to the thread count from within a benchmark is useful,
    for when one wants to distribute a workload dynamically among the
    benchmarks running in parallel e.g when using ThreadRange() or
    ThreadPerCpu().

commit 53068f974c0d69849b6437ffe0d545aec2932309
Author: Dominic Hamon <dominic@google.com>
Date:   Mon Feb 15 03:04:19 2016 -0800

    Pass const state to Fixture::SetUp. Add map_test.

commit bdb9f697d77bdf399569a3d5872d4c2d12fa458a
Merge: af489cd 211f23e
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sun Feb 14 09:29:40 2016 -0800

    Merge pull request #180 from google/release
    
    Add section on optimisations to README

commit 211f23ee1366cb7dab68c038edd329cdcf15377d
Author: Dominic Hamon <dominic@google.com>
Date:   Sun Feb 14 09:28:10 2016 -0800

    Add section on optimisations to README

commit af489cd4a36e52102246bcd7300290836f13883c
Merge: cff1541 d9630ae
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sat Feb 13 13:05:16 2016 -0800

    Merge pull request #176 from enh/cycle-timer-aarch64
    
    Add aarch64 support to src/cycleclock.h.

commit cff1541b0ccc4459284e5851192c0a68717ffbf6
Merge: 1c4df75 930d3af
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sat Feb 13 13:05:09 2016 -0800

    Merge pull request #177 from enh/cpuinfo-arm
    
    Fix ARM /proc/cpuinfo parsing.

commit 1c4df750c45abf701cc53fc62cc490ec25748fcc
Merge: cd525ae 9e37d69
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sat Feb 13 13:04:57 2016 -0800

    Merge pull request #175 from KindDragon/master
    
    Support MSVC on appveyor

commit 9e37d69b23743db226a284ca709a3a89bda30c2d
Author: Arkadiy Shapkin <arkady.shapkin@gmail.com>
Date:   Tue Feb 9 01:48:19 2016 +0300

    Support MSVC on appveyor

commit 930d3af052bcbe7cbea5f6c510cc7eee2c16b79b
Author: Elliott Hughes <enh@google.com>
Date:   Wed Feb 10 16:13:51 2016 -0800

    Fix ARM /proc/cpuinfo parsing.
    
    Also fix related warning message typos.

commit d9630aee882b7f36aeca5fb797ebd2a4aea81f03
Author: Elliott Hughes <enh@google.com>
Date:   Wed Feb 10 15:48:27 2016 -0800

    Add aarch64 support to src/cycleclock.h.
    
    From google3's base/cycleclock.

commit a5741100482eb50bb00ac0f8d22198277cd41fa5
Author: Alastair Murray <alastair.murray@codeplay.com>
Date:   Tue Feb 9 13:08:56 2016 +0000

    Close a memory leak in configuration code
    
    This was causing configuration failures on address sanitizer builds.

commit cd525ae85d4a46ecb2e3bdbdd1df101e48c5195e
Merge: f662e8b c7ab1b9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Dec 30 10:22:39 2015 -0800

    Merge pull request #171 from eliben/update-doc-userealtime
    
    Update README to mention UseRealTime for wallclock time measurements.

commit c7ab1b987ba9badeda367145b2e2073fc0ed0d57
Author: Eli Bendersky <eliben@gmail.com>
Date:   Wed Dec 30 06:01:19 2015 -0800

    Update README to mention UseRealTime for wallclock time measurements.
    
    Also adding a use case in the API header.
    
    Fixes #170

commit f662e8be5bc9d40640e10b72092780b401612bf2
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Dec 14 15:02:30 2015 -0700

    Rename OS_MACOSX macro to new name BENCHMARK_OS_MACOSX. Fix #169

commit 0a1f4849a6a6d704036f1189f62ffd7c8f061b06
Merge: 475fc83 d2917bc
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Nov 30 09:50:29 2015 -0800

    Merge pull request #166 from disconnect3d/master
    
    Fixes #165: CustomArguments ret type in README

commit d2917bcdeddff6da6cab8a85c77df8ed45060aef
Author: Dominik Czarnota <dominik.b.czarnota@gmail.com>
Date:   Mon Nov 30 16:15:00 2015 +0100

    Fixes #165: CustomArguments ret type in README
    
    * adds myself to AUTHORS/CONTRIBUTORS

commit 475fc830195d629ae4d136060e60eff498975196
Merge: 4499e8e 13a67d2
Author: Eric <eric@efcs.ca>
Date:   Fri Nov 6 11:37:50 2015 -1000

    Merge pull request #162 from RYOBG/add-cstdio
    
    Fixes #159: Add inclusion of cstdio to files using stdout, printf and etc.

commit 13a67d20e6d3ae325b9bae2c39ba0401a618ca9f
Author: ryobg <ryobg@users.noreply.github.com>
Date:   Fri Nov 6 20:09:57 2015 +0200

    Add myself to AUTHORS and CONTRIBUTORS as requested wrt Fix #159.

commit a863aead1330bf52d4230667a5aae4b7fa5ef69e
Author: ryobg <ryobg@users.noreply.github.com>
Date:   Fri Nov 6 11:03:43 2015 +0200

    Fixes #159: Add inclusion of cstdio to files using stdout, vprintf, printf and etc.

commit 4499e8e415092221febfd3309d5ceae9acc014a0
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Nov 5 09:53:08 2015 -0800

    Fixes #161

commit 7c8d8c9dd7effb19337277320c3cd0491317d95b
Merge: 87ab54a 65cd2ba
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Oct 29 08:22:31 2015 -0700

    Merge pull request #157 from guanqun/fix-static-cast
    
    add static_cast to get rid of warnings for intel compiler on linux platform

commit 65cd2bac6c5d1400c1a4014f8636484c03019875
Author: guanqun <guanqun.lu@gmail.com>
Date:   Sun Oct 25 20:43:27 2015 +0800

    add static_cast to get rid of warnings for intel compiler on linux platform

commit 87ab54ad6a728e5ff14a8d44108bbb4792195eac
Merge: 559c71d cd2e633
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Oct 19 10:06:44 2015 -0700

    Merge pull request #156 from Zbyl/fix-getgitversion
    
    Fix get_git_version to use GIT_EXECUTABLE.

commit cd2e633fe5527020801a7198ecd096bf72ef33d1
Author: Zbigniew Skowron <zbychs@gmail.com>
Date:   Sun Oct 18 02:13:37 2015 +0200

    Fix get_git_version to use GIT_EXECUTABLE.
    
    get_git_version CMake function uses 'git' command directly, instead of
    GIT_EXECUTABLE variable. This causes CMake errors while generating
    project files in environments, where 'git' command is not present
    in PATH.

commit 559c71d840876783e071569b5e6a3863a8c44ae3
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Oct 13 12:02:08 2015 -0700

    Added IRC channel to README.md

commit 9b84ead0fb510b709fcd3f11fcf13f2112d75ac3
Merge: 90e7cf0 c06da04
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Oct 12 09:55:02 2015 -0700

    Merge pull request #148 from DiracResearch/cmake-git-fix
    
    Fixes #144  CMake fails without Git

commit 90e7cf000e0b7c62a13569fac481e514b6367d23
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Oct 12 09:50:01 2015 -0700

    Update macro names in comments.

commit 3c83ed5b47c55965fbd64a93ec365792c2b395c6
Merge: f702207 8c71c30
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Oct 12 09:16:25 2015 -0700

    Merge pull request #149 from DiracResearch/android-fix
    
    Android fix

commit 8c71c307ac4a78b6ad15cbb009d9e656de03194b
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Fri Oct 9 09:09:14 2015 +0200

    Fixed OS macros changed in previous pull request.

commit a2f2a28b315248e9bd8651cb1cfc0d4d69c425af
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Fri Oct 9 09:05:19 2015 +0200

    Changed date format to ISO 8601.

commit 032c190c4a38697d6d92ec905e43e5c0c3933a71
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Fri Oct 9 09:00:42 2015 +0200

    Removed newline.

commit 7e9800e78aa2da840d6e68e53afa650e91f13009
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Thu Oct 8 11:52:49 2015 +0200

    Added a comment why std::vsnprintf is not used.

commit c8f4690fd42c0a90d5afc3fd0a23124427f16322
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Thu Oct 8 11:43:45 2015 +0200

    Sorted include of headers.

commit 6abd53777bf013d5bf6bab2cd1ddce78c3b5b9ad
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Wed Oct 7 09:12:56 2015 +0200

    Use stringstream instead of atoi to avoid sign error.
    
    The sane thing here would be to use std::stoul but this is not available in the android-ndk...

commit df0df4aba9d5997cdcddcec351ed5b5af180bb88
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 10:43:06 2015 +0200

    Fixed tests so they build on android.
    
    - Added missing header to test/benchmark_test.cc
    - Changed std::stoul to std::atol in test/filter_test.cc because of a
      limitation in the android-ndk (http://stackoverflow.com/questions/17950814/how-to-use-stdstoul-and-stdstoull-in-android)

commit 0d35f5f68a545a1eddd36dab930c250765298e25
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 10:24:12 2015 +0200

    Only include "sys/sysctl.h" if it is needed.
    
    sys/sysctl.h is not available in the android-ndk.

commit c1e03a4b58b79bcffa880e897588272d3f6ac05a
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 10:07:29 2015 +0200

    Changed "std::vsnprintf" to "vsnprintf" to be able to build with the android-ndk.

commit aecd746691918e5f6333e94dff57015d2d238525
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 09:20:37 2015 +0200

    Added include of cstdlib needed for strtol, strtod and getenv.

commit f7022075e05642109bc2880771e8c9b0c87449de
Merge: e232773 da80193
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Oct 8 11:22:28 2015 -0700

    Merge pull request #152 from mdavezac/master
    
    Fixes compilation issue on Macs

commit da80193de93eaaaa4c05e714241eaaed783e9f42
Author: Mayeul d'Avezac <m.davezac@ucl.ac.uk>
Date:   Thu Oct 8 18:35:06 2015 +0100

    Fixes compilation issue on Macs
    
    ba141ac0d9f2 renamed OS_MACOSX -> BENCHMARK_OS_MACOSX,
    except for an include guard in src/cycleclock.h

commit e2327733e6582b3e1bb3b6255e87676a83619ba7
Merge: 406c204 9195fd0
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Oct 8 10:06:01 2015 -0700

    Merge pull request #150 from DiracResearch/visual-studio-warnings-fix
    
    Visual studio warnings fix

commit 9195fd07d686c437787accde8cc66389b04b0a98
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 15:26:03 2015 +0200

    Revert "Added Wconversion so the gcc/clang warnings will be more similar to W4 on MSVC."
    
    This reverts commit 0a2bd8935391e42f2581ec4826f7ac5f8fc9041a.

commit 5cced076d2385895f9cf052ac0bc4a88cf786625
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 15:02:08 2015 +0200

    Fixed int to char warning.

commit 0a8e0dbb0bff14479da3fbd779afa398caaeae4b
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:59:15 2015 +0200

    Added Wconversion so the gcc/clang warnings will be more similar to W4 on MSVC.
    
    This also points out some important issues like:
    warning: conversion to 'size_t {aka unsigned int}' from 'long long int' may alter its value [-Wconversion]
       state.SetBytesProcessed(items_processed * sizeof(v));
    This occurs on 32 bit systems where size_t is only 32 bits.

commit fcf4e99e019cc1a44ab7e0bbe90054f0384c788a
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:51:56 2015 +0200

    Use IsWindowsXPOrGreater instead of the deprecated GetVersionEx.

commit e605cb0802f97cab812939752b327cb72a8ab357
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:38:07 2015 +0200

    Changed "while(true)" to "for(;;)" to avoid warning in visual studio.

commit 53b1896c534ff6c643f4bfe4a2349bf80dfa5630
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:36:09 2015 +0200

    Added _CRT_SECURE_NO_WARNINGS under MSVC.

commit 2589e69e0564269b4bebe55f7e82cd8bed4032a3
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:31:56 2015 +0200

    Fixed double to float warning.

commit e7f6c42a793e3736398f19740cc341fed177253a
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:26:31 2015 +0200

    Fixed bug in "ToExponentAndMantissa" when negative exponents where created.
    
    Unary minus where applied to an unsigned type.

commit a822c716552f87551ee1d65b6f3229f49d39d7df
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:05:06 2015 +0200

    Removed default constructor, copy constructor and assignment operator for CheckHandler.

commit 96ca9a7aba12e919c82ea06c0ce89cc86a724b2c
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 14:00:20 2015 +0200

    Fixed int64 to double cast warning.

commit ba141ac0d9f2042c73f57fcf870f2a69030fa8da
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 13:58:35 2015 +0200

    Renamed the internal os macros to avoid a name clash in Shlwapi.h where OS_WINDOWS is defined to 0.

commit 02440964e8e09bd58a70973b9ee4f8f1059246d7
Author: Anton Danielsson <anton.danielsson@dirac.se>
Date:   Mon Oct 5 13:42:14 2015 +0200

    Changed MSVC warnings from Wall to W4 to avoid 10000+ warnings from stl/windows headers.

commit c06da04bcf28237a803fae1445e7589a4d5f6cd7
Author: Tobias Ulvgard <tobias.ulvgard@dirac.se>
Date:   Wed Oct 7 17:28:00 2015 +0200

    Adds Dirac Research and me as Author and Contributor

commit 406c2049a37b0833d2e3d2add53b21caba232687
Merge: 4149412 14c4ce5
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Oct 6 09:23:47 2015 -0700

    Merge pull request #151 from izaid/clang-fix
    
    Fix for Ubuntu & Clang & C++14

commit 14c4ce5ebf9c7cfd395556a6894fba9a1b2d465b
Author: izaid <hi@irwinzaid.com>
Date:   Tue Oct 6 15:10:15 2015 +0100

    Removed unneeded #include <cstddef>

commit 775ef51d04f3281b1b2ea857d7862470069aaf6a
Author: Tobias Ulvgard <tobias.ulvgard@dirac.se>
Date:   Fri Oct 2 17:05:58 2015 +0200

    CMake check for git on the system

commit 414941295ee56ee0824f53070d4bec6b8b989038
Merge: cf40a0f 3dd14f0
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Oct 2 12:06:11 2015 -0700

    Merge pull request #146 from efcs/fix-iteration-type
    
    Fix issue #141. Use size_t instead of int for the iteration count

commit 3dd14f07241ab52484dd14fb8427042c07c6cccc
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Oct 1 18:46:39 2015 -0600

    Make the type of kMaxIterations consistent with the type of the iteration count

commit ed0a2eb7411da5650551088905d13ed941b21e69
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Oct 1 15:08:44 2015 -0600

    use size_t instead of int for the iteration count

commit cf40a0f1172afc061e910eb5590f71e6ffdece66
Merge: eeaec44 bcb933a
Author: Eric <eric@efcs.ca>
Date:   Thu Oct 1 15:05:39 2015 -0600

    Merge pull request #136 from efcs/remove-check
    
    Remove std::is_trivially_destructible assertion. Fix issue #134.

commit bcb933a9fbaed88b222dd7abd27c50aa82df387b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Oct 1 14:53:46 2015 -0600

    dynamically allocate WallTimeImp

commit e0441ef5d0e5c4b405bcddb5e42c933f07031ec4
Merge: a69f566 eeaec44
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Oct 1 14:52:46 2015 -0600

    Merge branch 'master' into remove-check

commit eeaec441a742025dfad555fc6822163642f0c4a3
Merge: 7583ed9 2463339
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 30 13:31:59 2015 -0700

    Merge pull request #143 from devjgm/master
    
    Updates Initialize() to work with an argv as 'char**'

commit 2463339d0b76953eb1d1183a927c5c40bb5c3c30
Author: Greg Miller <jgm@google.com>
Date:   Wed Sep 30 16:14:50 2015 -0400

    Updates Initialize() to work with an argv as 'char**'

commit 7583ed936306a96e5385c4cdcb307946be24c2bb
Merge: fcf8860 11042c7
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 30 10:23:57 2015 -0700

    Merge pull request #137 from jll63/jleroy/vs2013-compatibility
    
    Jleroy/vs2013 compatibility

commit 11042c7fe7ae4b6c4e5653db2639d6551fee9b7d
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Fri Sep 25 09:37:03 2015 -0400

    Remove unused FormatKV(..., size_t) overload.

commit fcf8860e6acea05cdb1c503ebbbb479424cbde8a
Merge: 6319252 1dd40c9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Sep 23 13:12:20 2015 -0700

    Merge pull request #140 from eliben/fix-custom-arguments-return
    
    Fix documentation comment in benchmark_api.h w.r.t CustomArguments

commit 1dd40c99c092e16488387c3409a6f8600a406d00
Author: Eli Bendersky <eliben@gmail.com>
Date:   Wed Sep 23 11:44:26 2015 -0700

    Custom arguments function usage with Apply - fix doc and add test.

commit 6319252533556be18cb54223c16762f182d157b9
Merge: 47c3045 f338ce7
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Sep 18 08:23:25 2015 -0700

    Merge pull request #139 from eliben/master
    
    Fix doc sample typos in header and README

commit f338ce7965ab7b90bd8f69a981b8386ab8b54dc5
Author: Eli Bendersky <eliben@gmail.com>
Date:   Thu Sep 17 20:14:10 2015 -0700

    Fix doc sample typos in header and README
    
    * iterations() is a method
    * int64_t fix in a couple of places

commit 0f5503e9a2f021014d7088eeb229356e95b80a2b
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Tue Sep 8 15:18:43 2015 -0400

    Address Dominic's (stylistic) remarks.

commit a69f566e0a7a20245b35b15d000f7768176e6066
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Sep 7 19:33:23 2015 -0600

    Remove std::is_trivially_destructible assertion because the trait may not be provided by the STL.

commit 5ec78d7d443e67d4d50adf09d4230cf26c3dffde
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Mon Jun 29 17:31:52 2015 -0400

    Do not CpuScalingEnabled on Windows.

commit cf830f731f95db76bf8872f66e6aaf6e930cd639
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Mon Apr 13 15:03:51 2015 -0400

    Fix division in CPU usage calculation on Windows.

commit 2cf277b6f65d882cc8d3010fc1c91deb5edb32ba
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Mon Apr 13 15:03:27 2015 -0400

    Iterations declared as size_t but printf'ed as a long long. Make it a long long.

commit d49516bc99e4c4f6e844757ba9573abffed04c37
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Mon Apr 13 13:45:16 2015 -0400

    Make it compile with Visual Studio 2013.

commit 693967fe190e92448d55f39a07e80d435185f0a8
Author: Jean-Louis Leroy <jleroy9@bloomberg.net>
Date:   Mon Apr 13 13:44:49 2015 -0400

    Remove unnecessary `typename'.

commit 47c304536efcc06851cba318ac1b239e1e97430c
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Aug 7 11:21:47 2015 -0700

    Fix #133. Comment now contains compilable code.

commit fdd99b12a8805a5523f7652b954c4d04ff4738f8
Author: Dominic Hamon <dominic@google.com>
Date:   Thu Jun 18 10:34:03 2015 -0700

    trailing whitespace

commit 3e1dbc81f4be86b255465e9dd89510a50c02bc95
Merge: d60945a f72d249
Author: Eric <eric@efcs.ca>
Date:   Tue Jun 16 10:31:45 2015 -0400

    Merge pull request #130 from umireon/sysinfo-macosx-illegal-nullptr
    
    Fix the compilation error against G++ on Mac OS X.

commit f72d24942ac4e85379409b6ec315cdb63779932e
Author: Kaito Udagawa <umireon@gmail.com>
Date:   Tue Jun 16 22:45:57 2015 +0900

    Add Kaito Udagawa to AUTHORS and CONTRIBUTORS

commit 72ce39de3e428decfb1d29aa33ea81e0386c4441
Author: Kaito Udagawa <umireon@gmail.com>
Date:   Sat Jun 13 19:34:20 2015 +0900

    Fix the compilation error against G++ on Mac OS X.
    
    Using `0` as a null pointer is illegal when `-Wzero-as-null-pointer-constant`
    is given to G++.  To avoid the warning `zero-as-null-pointer-constant`,
    `nullptr` (C++11 keyword) instead of `0` is used in the `sysctl` invocation.

commit d60945ac432c5e981f4bcfaeb27891ef3b50e10b
Merge: f6c2ea7 9afa6c9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Jun 8 09:23:04 2015 -0700

    Merge pull request #128 from myd7349/master
    
    Fix issue #127

commit 9afa6c986c978c8f649073e914bc8f212645d6bf
Author: myd7349 <myd7349@gmail.com>
Date:   Fri Jun 5 09:25:11 2015 +0800

    Fix issue #127

commit f6c2ea7fef6ba01f405e2c078cba9f58edfca966
Merge: d18ebcb 68e6921
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri May 22 14:46:11 2015 -0700

    Merge pull request #125 from dcoeurjo/cmakeEmptybuildtype
    
    Fixing cmake issue with empty cmake_build_type

commit 68e69213e76ab1b3acf65db00253face9312e235
Author: David Coeurjolly <david.coeurjolly@liris.cnrs.fr>
Date:   Fri May 22 23:15:19 2015 +0200

    Fixing cmake issue with empty cmake_build_type

commit d18ebcb99a8ac64a9af280e65b33a539e23de4d7
Merge: d8c7605 ef47992
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed May 13 09:40:03 2015 -0700

    Merge pull request #122 from mattyclarkson/coverage
    
    Coverage

commit ef479921251d6104ca590ddf0d85c331fdbf803a
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Tue May 12 16:17:38 2015 +0100

    Added coveralls support

commit 344775db633aef502a1ec9be967a2730a1e0c631
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Tue May 5 12:13:20 2015 +0100

    Enable strict aliasing warnings

commit 36c1eb6975827e89a906e2dae90e92ee4a0f2bfb
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:28:04 2015 +0100

    Coverage support with LCOV and GCOV
    
    This patch adds a `coverage` target that allows coverage statisitics to be
    retrieved for the project. It requires that lcov and gcov is installed and
    that the generator is unix makefiles but this can be improved upon in
    future releases.
    
    To make it work use the coverage build type:
    
    ```
    cmake -DCMAKE_BUILD_TYPE=Coverage .
    make coverage
    ```

commit d8c7605341e1a9f9ca6cabd26b0145da29f2a6f8
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue May 12 11:32:44 2015 -0700

    Update README.md

commit 3314aa43c215b1543a8d0330af4954f0c29792ae
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:40:37 2015 +0100

    Allow the user to set the C++ standard to use
    
    This is useful to test the library at different standard levels. Currently
    doesn't search for C++14 in 'auto' mode. Can enable in the future

commit 8b5016034f2ffa04dbf75718d7fdd8bb20a933f5
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:31:50 2015 +0100

    Ignore tests

commit e44ee2d0054e2f314eef8f135de599aad651ecac
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:14:27 2015 +0100

    Group common C++ flags

commit bb23a9b9f2c32a1557378fd2234273e705789eb9
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:10:52 2015 +0100

    Compile with link time optimisation
    
    Can provide speed improvements

commit 375e66c825c8ba043ea3a1df13e4ad1871741a7c
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 11 12:34:03 2015 -0700

    Update README.md

commit 7418bbbbacaeebaac4281da075440756ea2c778f
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:10:06 2015 +0100

    Only warn on errors in release mode
    
    This improves development iterations when working in debug mode as you
    don't have to fix up warnings to get the code to compile. Once a feature
    is complete you can then run a release build and fix up all the warnings.

commit fc883f674202353d659c13d5f0d7f8ecf5c020dd
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Apr 30 14:04:28 2015 +0100

    Improve the CMake C++ flag checker
    
    This checks the flag on the compiler AND linker which allows it to work
    with flags such as -flto and -fsanitize=address

commit d51ba32791ac95437e209abfb651bc6d30c61b8b
Merge: 2b95421 9c25a67
Author: Eric <eric@efcs.ca>
Date:   Mon Apr 6 19:38:16 2015 -0400

    Merge pull request #120 from google/benchmark-fixtures
    
    Add ability to use benchmark fixtures

commit 9c25a67c1ab4e49cd813fe6afd28ca0d9e1b0c2d
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Apr 6 19:04:12 2015 -0400

    address more review comments

commit 9ed538f511de5edaceecc9996e86e4d019b8c9c5
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Apr 6 17:56:05 2015 -0400

    address review comments

commit 12f440587039ab52adfedf245a6f9d81eb889ec5
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Apr 6 17:00:06 2015 -0400

    add ability to use benchmark filters

commit 2b954213f9f6cc547326f1595a522b5e50dfbefd
Merge: 42d2b8d 1e0ed3a
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Apr 3 13:35:00 2015 -0700

    Merge branch 'geoffromer-cmake-patch'

commit 1e0ed3a21cee0b1d7b634dd9632d26fb4e41aebc
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Apr 3 13:33:54 2015 -0700

    Rearrange the pieces

commit dcb1a3dad44240a6c07118c9fb6a4ae0cca285ff
Author: Geoff Romer <gromer@google.com>
Date:   Thu Apr 2 15:24:48 2015 -0700

    Drop down to CMake 2.8.11, and drop INTERFACE since that version doesn't
    support it.

commit 3078ce9bc5dc3d594dd1b1009cbf365495901b0f
Author: Geoff Romer <gromer@google.com>
Date:   Thu Apr 2 15:00:22 2015 -0700

    Link pthread as an INTERFACE library.

commit 89a1edae15aa1662205e77c63ab9acb31488a6bb
Author: Geoff Romer <gromer@google.com>
Date:   Thu Apr 2 14:35:59 2015 -0700

    Require cmake 2.8.12 in order to support target_include_directories, and
    simplify thread linking logic.

commit a6ad799a4d26c4ed54bb1a90c1ae664e0767e6f6
Author: Geoff Romer <gromer@google.com>
Date:   Thu Apr 2 09:15:49 2015 -0700

    Configure 'benchmark' cmake target so that when other targets depend on it,
    they get the appropriate include directories and link libraries automatically.

commit 42d2b8d11a1080a1373c14185f752104ce721641
Merge: 818c9fc 30ae37b
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Apr 3 16:29:12 2015 -0400

    Merge pull request #118 from davidreynolds/master
    
    Fix typos: rangeY -> range_y()

commit 818c9fcc2fa6bfb91daba46df4bbfa958ba18261
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Apr 3 14:43:42 2015 -0400

    Upgrade travis to use CMake 2.8.12 and add Clang builders

commit 30ae37b923329a943146a2b147a1a926bf2cd899
Author: David Reynolds <david@alwaysmovefast.com>
Date:   Thu Apr 2 18:34:52 2015 -0700

    Fix typos: rangeY -> range_y()

commit bf063941d4f44ffa4ec4b5fb9977b280026335f6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Apr 2 13:32:18 2015 -0400

    Print information about travis enviroment

commit bf58a90067812688c9648a520856a16e6c469fff
Merge: 9934396 8fcfa81
Author: Eric <eric@efcs.ca>
Date:   Wed Apr 1 13:45:12 2015 -0400

    Merge pull request #115 from google/build-shared
    
    Remove BENCHMARK_ENABLE_SHARED and prefer BUILD_SHARED_LIBS

commit 8fcfa81d51ea54848462156da6c0e6da965268d6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Apr 1 11:40:22 2015 -0400

    Fix comment about linking threading

commit 8bb991d099e75900bd1fb60cc79032b0e9ead39e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Apr 1 11:34:38 2015 -0400

    Remove BENCHMARK_ENABLE_SHARED and prefer BUILD_SHARED_LIBS

commit 9934396e1ff0cc64943a3af94ef35e01f27d25da
Author: Dominic Hamon <dominic@google.com>
Date:   Wed Apr 1 10:51:37 2015 -0400

    Add missing paranthesis and documentation

commit 738bd82b35339f72aa89db2685db9c6a297f7665
Merge: 6674744 d676c5b
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Apr 1 10:23:08 2015 -0400

    Merge pull request #113 from mattyclarkson/install-fix
    
    Libraries are treated as runtime objects on Windows

commit d676c5b375ecb143410ce4a8a9b6dd86b035b40d
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Wed Apr 1 10:57:08 2015 +0100

    Libraries are treated as runtime objects on Windows
    
    When the library is created as a *.dll on Windows it is treated like a
    runtime object so we must proivde the destination for the runtime
    objects in our install command

commit 6674744639b459be0c0e5b4e9a7c0d2e5deb0535
Merge: 006d23c 25e4684
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Mar 31 15:32:36 2015 -0400

    Merge pull request #111 from google/buildtype_log
    
    Clarify build type warning

commit 25e46848f9d584261d5960ce9394a565f58aa070
Author: Dominic Hamon <dominic@google.com>
Date:   Tue Mar 31 14:40:46 2015 -0400

    Clarify build type warning

commit 006d23ccca1375a973b7fae0cc351cedb41b812a
Merge: 65ed470 ba1becc
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 31 14:16:58 2015 -0400

    Merge pull request #108 from google/list-tests
    
    Add --benchmark_list_tests option and change filter to match generated name.

commit ba1becca1aa1f89281b823a2cc6282b3c553b1f3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 31 13:28:41 2015 -0400

    Add braces for one line conditionals and loops

commit 65ed470c0f5e340723da76c1b7a1eee7c0ac798a
Merge: 8051458 36d7dc6
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Mar 31 09:49:56 2015 -0400

    Merge pull request #64 from mattyclarkson/nt
    
    MinGW support

commit 36d7dc67c167a199774180928903cf3c72a438e0
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Mar 30 17:18:43 2015 +0100

    appveyor configuration file
    
    This file provides scripting to build the benchmark library in the cloud
    on the appveyor build system. It provides a matrix of configurations to
    cover as many possibilities as it can. Eventually MSVC can be added to the
    matrix to provide coverage of the Visual Studio solutions.

commit 60910b3de7aa85ff28da14f34c7084711f99ac74
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Mar 30 14:28:27 2015 +0100

    Added a script that can download MinGW
    
    The python script provides a method to get the repository of mingw-builds
    gcc compilers and download one of them. This is useful for providing a
    matrix of compilations on appveyor.
    
    The versions of compilers are seperated by multiple things:
    
      - version
      - threading model
      - exception model
      - revision
    
    All four of those things need to be matched if using the libraries built
    by MinGW. The script allows you to specify all of those variations. If
    a variation isn't defined it picks the most common or latest settings.
    
    For example, if the version isn't specified the latest will be selected
    and if the exception model isn't defined then the zero exception model
    (seh) will be selected if available.

commit b35b581e7606e14ee142f5a56fd2481db445ee17
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Mar 30 12:37:22 2015 +0100

    Ignore windows shared libraries

commit 07de09c94c4db5dbbe5b6a644f263cf57da33e0a
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Mar 30 11:55:24 2015 +0100

    Ignore python compiled files

commit b2a43b491caa283a136637225b88d05a2a17434e
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Nov 3 14:28:17 2014 +0000

    NT definition of MyCPUUsage and ChildrenCPUUsage
    
    The children CPU usage doesn't seem to have a equivalent on NT systems
    so it just returns zero.

commit 05eb1f254509f8dcddb0e487eca029f38dbfc4e4
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Mar 27 13:39:11 2015 +0000

    Use `int64_t` rather than `int64`
    
    For cross platform and cross compiler portability we use the
    standard integer type for a 64-bit integer. MinGW on Windows doesn't
    have the definition for `int64`.

commit 65a5ebd638d927a2d443c9fa98816ee6adbc445a
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Mar 27 13:38:13 2015 +0000

    Use the WINAPI `Sleep` function

commit 6bc54ba028df7b22cd57edbc353a2102387d4629
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Nov 3 14:18:15 2014 +0000

    Use CMake to link Shlwapi on Windows
    
    We use the SHGetValueA on Windows to retrieve the MHz of the processor
    but this requires the shlwapi library. Previous to this patch the
    library was linked with a MSVC specific pragma but there is no
    guarantee that on Windows we will be using MSVC. Therefore, it is much
    compile agnostic to use the standard CMAKE library linking mechanism
    to provide the definition of SHGetValueA

commit dd61391c5d92353c69f2789d0dabbd3311fb2564
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Mar 27 13:41:50 2015 +0000

    Only include the correct platform headers

commit 6880244eea8b3afb97f95bfd7b113328e1e541fc
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Mar 27 13:14:10 2015 +0000

    Added windows executables to the ignore list

commit e97a96f9e723bd7bbd239d205132f9462518b332
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 31 00:05:02 2015 -0400

    redo filter test

commit 12f1c5f4711af35d768aa81a5137ccd15558305d
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 30 23:32:37 2015 -0400

    add list test internals

commit 805145847bc310cb4b54363b610d2f3a86fdd5e8
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 30 22:14:08 2015 -0400

    add workaround to DoNotOptimize(...) for clang inline assembly bug.

commit b5dd1506d87e25632706d5f3520b8a2759519756
Merge: 82fd557 2924aaa
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Mar 30 14:45:10 2015 -0700

    Merge pull request #107 from google/csv
    
    Introduce CSV reporter

commit 2924aaa747cbf737d448dc67ba6ec32c50cf5a13
Author: Dominic Hamon <dominic@google.com>
Date:   Mon Mar 30 10:41:22 2015 -0700

    Deal with names with embedded quotes

commit b6e4f67d75027c9b67ff1d67da4fd12b8ee996b1
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Mar 27 14:08:46 2015 -0700

    Add csv to help output

commit 680a399a9387c4290442919681cb5d420a751232
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Mar 27 14:06:33 2015 -0700

    Add double-quotes where necessary

commit 71c41cde57d7c741fca05b07585966129cf2ac5b
Author: Dominic Hamon <dominic@google.com>
Date:   Fri Mar 27 13:27:15 2015 -0700

    Introduce CSV reporter

commit 82fd5572882bc306ea8ffd7810a9bf309f38ca98
Merge: e428b9e 9d47552
Author: Eric <eric@efcs.ca>
Date:   Fri Mar 27 17:03:52 2015 -0400

    Merge pull request #105 from google/new-benchmark-interface
    
    Change the available Benchmark options

commit 9d475520204dd5e0c1b5b9f7ce4c2882908a541f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 16:37:53 2015 -0400

    merge new changes in basic_test.cc

commit 9ed1082c33829a73e1ba5b143232ea14c5f06f3c
Merge: 4f9ce87 e428b9e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 16:36:40 2015 -0400

    Merge branch 'master' into new-benchmark-interface

commit e428b9eec3291f564073cd4bc98e8c312cbfcafd
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 16:35:46 2015 -0400

    Add 'benchmark::DoNotOptimize(...)' to help users prevent optimizations

commit 4f9ce87e8c016ce1e1086681b2f25fd9431c2bf7
Merge: c5f238b 0a0bb8f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 16:26:36 2015 -0400

    Merge branch 'master' into new-benchmark-interface

commit 0a0bb8feb1ea9d6df308dea6ba6c738594278bbc
Merge: 2a7b7e4 7571236
Author: Eric <eric@efcs.ca>
Date:   Fri Mar 27 15:55:01 2015 -0400

    Merge pull request #102 from google/fix-macros
    
    Fix and improve BENCHMARK macros.

commit 2a7b7e4b99af360f23b80e7ad93b16064ba7862e
Merge: 8b0b73f cfa3e18
Author: Eric <eric@efcs.ca>
Date:   Fri Mar 27 14:31:29 2015 -0400

    Merge pull request #104 from google/fix-negative-times
    
    Fix #96: Prevent times from being negative.

commit c5f238b18ca52668978f6c0a39b9099b4ea4f14b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 12:28:22 2015 -0400

    Fix column width calculation and remove duplicate test

commit cfa3e181ab9a411d6b04bc442e3ba40597de3f1a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 27 12:13:02 2015 -0400

    Make DateTimeString part of the internal implementation

commit 4bf6ceb50dcebe08afb10670a9e0c9c077a6305a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 23:37:26 2015 -0400

    Change the available benchmark options

commit b07fee6b6413354d22fce9e9e488e1c360cd8d7b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 18:32:31 2015 -0400

    address review comments

commit 1b9e55c281a82ffc37b16f8930f1877b615c22cb
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 17:56:27 2015 -0400

    Remove walltime implementation tests and expose less internals

commit d3e0671a879f8ec5ced7018eb338cb7eb6d191a3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 17:52:28 2015 -0400

    finish selection of clock with debug information

commit 48c4c9cf5060042ad145b251676eb4635772524a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 16:22:29 2015 -0400

    Revert "prevent unneeded calculation of Slow()"
    
    The calculation was actually inside the loop for a reason.
    
    This reverts commit 47442b9054cd2e6b8c1734eca3c7b19cbb2d16ca.

commit 47442b9054cd2e6b8c1734eca3c7b19cbb2d16ca
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 16:01:29 2015 -0400

    prevent unneeded calculation of Slow()

commit 21207a4df5ae471f46ef52598c701dd927e6e5b3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 15:25:08 2015 -0400

    improve walltime test

commit c0755c42263d897dd06ad3f60884531a6f0cf331
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 14:57:03 2015 -0400

    actually add new test

commit 725f1f066d7e9c3834ebeb34d20e709a030e9cd9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 14:56:52 2015 -0400

    add walltime benchmark and fix unused variable.

commit be993acbb3bada08742b0764f3adb54925e93492
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 14:33:48 2015 -0400

    remove unneeded test repetitions

commit d0df7ef2de97e542f336419ed2f606d43e184555
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 14:30:16 2015 -0400

    cleanup whitespace and includes

commit a3308c6d86f3ab9446d9cb93ab1c77131b84a55a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 26 14:26:07 2015 -0400

    Introduce use of std::chrono and remove Walltime printing

commit 75712367c115500bf24b13396c36926df1ed1556
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 22:49:09 2015 -0400

    update names

commit e96f068a1d903b88837c18462ba2a69df46c347a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 19:19:17 2015 -0400

    rename BENCHMARK_PRIVATE_NAME to BENCHMARK_PRIVATE_CONCAT

commit 3bf0b251a37a8dcffd610ec07ac9b8b49a713455
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 18:35:36 2015 -0400

    remove whitespace

commit 035a0ba2b374ca4343a7e4e6652c6c0d0780e8dd
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 18:34:30 2015 -0400

    fix macro names and use __COUNTER__

commit 8b0b73f06c615f2712e69e0d4ea1a356b8b7a445
Merge: 01bba47 482c19d
Author: Eric <eric@efcs.ca>
Date:   Wed Mar 18 18:20:23 2015 -0400

    Merge pull request #101 from google/variadic_macros
    
    Add variadic macro for BENCHMARK_TEMPLATE in c++11 and beyond.

commit 482c19d92e9684fcb4ed8b1572596a393bae487c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 17:08:15 2015 -0400

    Handle creation of C++03 flags differently

commit d40cb9771386558fb3e2d184011175b87c157cf5
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 17:05:53 2015 -0400

    Don't treat CMAKE_CXX_FLAGS as a list

commit daa8a67aa575ef2a52d4a90985ae40faad5c0ff1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 16:34:43 2015 -0400

    add C++03 test and update README

commit 38066e8bdca65381f3ec89478ed4a52ec4762b3d
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 14:50:50 2015 -0400

    Add variadic macro for BENCHMARK_TEMPLATE in c++11 and beyond.

commit 01bba479acbb04df26b74b99215eb2050e6bbc99
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 14:50:16 2015 -0400

    Remove use of reserved names in benchmark macros

commit a6a90ec6b8404d512ca16696740ef9baf86061cf
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 14:43:08 2015 -0400

    Revert "Add BENCHMARK_TEMPLATE1 macro"
    
    I didn't mean to commit this to master.
    This reverts commit b7d03ac4f533eaa11026fcf17ed11fc3dbc287a3.

commit b7d03ac4f533eaa11026fcf17ed11fc3dbc287a3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 14:42:35 2015 -0400

    Add BENCHMARK_TEMPLATE1 macro

commit 92fc9b99b2b921988e2be847f5d5b967127c58d2
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 12:09:18 2015 -0400

    Add newline after every benchmark to improve readability of the json output.

commit ec0c725a33a01b7d3aee8725affc3caf4f6196fb
Merge: 2386117 6429348
Author: Eric <eric@efcs.ca>
Date:   Wed Mar 18 10:21:25 2015 -0400

    Merge pull request #100 from google/json_reporter
    
    Add JSON Reporter

commit 6429348e0d986315d95a0582eb8f57a6a4488ac1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Wed Mar 18 00:23:43 2015 -0400

    address review comments and fix array type declaration

commit ffb67dcabf0f901c5fc9e5ead58049615c2ba05d
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 18:42:41 2015 -0400

    address review comments

commit f65da9d58165c6ab626d6a55b9d47968510c72ae
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 18:18:06 2015 -0400

    add json reporter

commit 23861178a701ae6ae4c8e9393294fe8a0a7c005b
Merge: b260cf7 20f1c0e
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 17 16:35:39 2015 -0400

    Merge pull request #99 from google/reporter_api_change
    
    Apply reporter interface changes.

commit 20f1c0e2a8e692076dd7a5586f73ab8e2d726c12
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 16:16:36 2015 -0400

    Apply reporter interface changes. Make report methods non-const and add a Finalize method.

commit b260cf76989388e9421fad268567af6964ca319b
Merge: 279e502 e45252e
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 17 16:09:53 2015 -0400

    Merge pull request #98 from google/reporter_change
    
    move reporter internals in both headers and source

commit e45252e6f59b55f4bbf22ca4208912b68b6c6a67
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 14:15:16 2015 -0400

    move ConsoleReporter out of internal namespace

commit d71660227b7de5336cf93bb61d3e9bd72cc99d3f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 14:02:02 2015 -0400

    fix minimal_benchmark.h include

commit 8e72846da4bde9cdc8162ac99ce4168c65154f7d
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 14:01:04 2015 -0400

    rename minimal_benchmark.h and fix recursive include in benchmark_api.h

commit df904a1980b148139e566028dad27e3bea828afd
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 13:58:25 2015 -0400

    add include to minimal_benchmark.h

commit 35f9de71eea5d1fd64ac12873f2ac8847ce8c515
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 13:51:04 2015 -0400

    move to using C headers in minimal_benchmark.h to prevent getting any C++ STL headers

commit ef79d0af9f7b71347d7dcf2035183f78af08a0a6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 13:48:33 2015 -0400

    move basic_test over to minimal benchmark

commit 4242f2f1d73d7800d95cfc2af0f3a3513dad2dc5
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 13:46:16 2015 -0400

    move reporter internals in both headers and source

commit 279e502a05482b9621f5d52dd7fc80a20014dc85
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 13:32:20 2015 -0400

    add test for benchmark with two template parameters

commit 7f2ef4625583f650d703f693bef2b4964b6cdc67
Merge: efe5910 1924b30
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 12:35:11 2015 -0400

    merge master

commit efe591015d3316c85d1b1f737dba2b56999885ac
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 12:31:46 2015 -0400

    address review comments

commit 1924b30a6c45a6c305393bab102fb28333c38543
Merge: 957a3e3 1809817
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 17 12:21:20 2015 -0400

    Merge null pointer warnings

commit 957a3e339ecb8bf0b9088be857fa6f3df6e4bc66
Merge: bdf4a5f 47fa9ba
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 17 12:17:53 2015 -0400

    Merge pull request #92 from google/pimpl-benchmark
    
    Pimpl the benchmark object to reduce dependencies on the STL.

commit bdf4a5f4d2d7efea55190b60f3183109cbf05248
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Mar 12 21:56:45 2015 -0700

    Add reference to BENCHMARK_MAIN in README

commit 66bf7c8f7194ecd3b9f6426ca3b4807e8a8996a2
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 20:27:29 2015 -0400

    add floating point comparison warnings

commit f022d780ebf71a842418cf3e210e68efbc7a49c3
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 20:17:40 2015 -0400

    Enable int shortening warnings

commit 180981716ba7b568820aa21ecf15247b990a8621
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 19:32:50 2015 -0400

    replace instances of NULL with nullptr

commit 64ba272911c2413cee516af849c4c80d7ae993b9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 19:16:06 2015 -0400

    Enable zero as NULL warnings and fix all occurences

commit 47fa9ba1a38bff90e155550b6904945985e1ff58
Merge: 2b34b5d 19464f7
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 18:56:36 2015 -0400

    merge

commit 19464f7dab7d3029b89069ea8add6d54eaf08c9b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 18:56:07 2015 -0400

    Fix includes in benchmark.h

commit 2b34b5d937dc8d9a365c9f60081e532a154d3d82
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 18:45:52 2015 -0400

    remove unneeded includes

commit 937987b63d29ec4012c7048d85f6b9ceca954a94
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 18:40:34 2015 -0400

    pimpl benchmark

commit 7a767012f1c423b37069f6d315b97164b5850271
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Mar 12 18:03:33 2015 -0400

    Adopt new benchmark timing internals.
    
    This patch adopts a new internal structure for how timings are performed.
    Currently every iteration of a benchmark checks to see if it has been running
    for an appropriate amount of time. Checking the clock introduces noise into
    the timings and this can cause inconsistent output from each benchmark.
    
    Now every iteration of a benchmark only checks an iteration count to see if it
    should stop running. The iteration count is determined before hand by testing
    the benchmark on a series of increasing iteration counts until a suitable count
    is found. This increases the amount of time it takes to run the actual benchmarks
    but it also greatly increases the accuracy of the results.
    
    This patch introduces some breaking changes. The notable breaking changes are:
    1. Benchmarks run on multiple threads no generate a report per thread. Instead
       only a single report is generated.
    2. ::benchmark::UseRealTime() was removed and replaced with State::UseRealTime().

commit 7c6a7e30845f1fb328235e5efd02c078b40f09e8
Merge: e975efd d68127d
Author: Eric <eric@efcs.ca>
Date:   Wed Mar 11 13:30:28 2015 -0400

    Merge pull request #90 from google/userealtime
    
    Enable UseRealTime and fix documentation for SetLabel.

commit d68127d8adc1111c49b372ba12f7c3e4f053a2f0
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Wed Mar 11 09:47:15 2015 -0700

    Enable UseRealTime and fix documentation for SetLabel.
    
    Fixes #89
    
    UseRealTime was defined in the internal namespace by mistake.
    Similarly, documentation suggested that benchmark::SetLabel should be
    used to set a label, and a function was declared but not defined, while
    actually the call should be 'state.SetLabel'.

commit e975efdb7ab062aa821cc46780a5447538d77565
Author: Eric Fiselier <eric@efcs.ca>
Date:   Tue Mar 10 14:38:45 2015 -0400

    remove third_party directory. update test args

commit e2c795520c18fae0fd9b7df88f20d652eaa8d54f
Merge: 522a589 3b40f0a
Author: Eric <eric@efcs.ca>
Date:   Tue Mar 10 14:32:58 2015 -0400

    Merge pull request #87 from google/filter_test
    
    Add filter test, remove re test, and googletest deps

commit 3b40f0a7a320b5551259be8ffe556996efb006d6
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Mon Mar 9 20:30:14 2015 -0700

    Add filter test, remove re test, and googletest deps

commit 522a58916ae6b96a51f10c15b59452a6eb5e1254
Merge: 4b3bbe3 75686a8
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 9 18:49:52 2015 -0400

    Merge pull request #85 from google/upgrade-step3
    
    Step three towards moving timer changes.

commit 75686a8f22b3bb2c318bd5f6a5d484568db4bd76
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 18:00:04 2015 -0400

    remove forward declarations

commit 4b3bbe343a51b078f5c840fe7b1486a4cc27a05b
Merge: 61f0506 d20cdf1
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 9 16:39:03 2015 -0400

    Merge pull request #84 from google/upgrade-step2
    
    Step two towards merging timer changes.

commit 60e26b7022c3e59cbee14ee84e83c965c64cea80
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 16:18:10 2015 -0400

    fix missing newline and header guard name

commit 5cfd6bcc1470daf6335bd62c9301e40767e6978b
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 16:15:05 2015 -0400

    update more copyright

commit 8f5cd9760f0b1aaf1a0e52dd627f5b2c4c5d1247
Merge: a187aa0 d20cdf1
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 16:03:06 2015 -0400

    Merge branch 'upgrade-step2' into upgrade-step3

commit d20cdf19ca622ba3a162455f3efe30501473f387
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 15:48:51 2015 -0400

    address comments

commit e60561a779234aa8a5e33d7c5e0711c419e9e57f
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:56:47 2015 -0400

    Force static initialization of walltime.

commit 8cf7b18ae4aaf8fb962289ff4a450b87d4f846e4
Merge: 5b0542d 61f0506
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:49:00 2015 -0400

    Merge branch 'master' into upgrade-step2

commit 61f05062e8ef41d51353dbe8702ff5fed5f7d116
Merge: c5a362b e447887
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 9 14:48:32 2015 -0400

    Merge pull request #81 from google/upgrade-step1
    
    Step one towards merging timer changes.

commit 5b0542d583f9afa9e2cd24c9d0c83e64c3310aef
Merge: 6590cea e447887
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:43:45 2015 -0400

    Merge branch 'upgrade-step1' into upgrade-step2

commit e447887d16d33035a68dbb19e7768d21774d5d92
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:40:08 2015 -0400

    Fix travis config by moving CTEST_OUTPUT_ON_FAILURE=1 into make test command

commit 6590ceab74ceea6c1e0e6b0ca43623d228e02548
Merge: f947ceb f7602ba
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:34:44 2015 -0400

    Merge branch 'upgrade-step1' into upgrade-step2

commit f7602badfbe3ac6ea7e2b27819c9cdb5a327d3d9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Mon Mar 9 14:34:32 2015 -0400

    add env to make ctest print on failure

commit a187aa080377f4707bb28690d51f206c0d49f436
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 17:01:05 2015 -0500

    Third step in moving towards adopting new timer semantics

commit f947cebe15c6c56383d630e1f4e9f5fc6bd6332a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 16:59:32 2015 -0500

    remove ifdefs around BM_Factorial

commit 8f96f50553d5b775148ee207b73e72b8e260799c
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 16:53:52 2015 -0500

    comment out test to prevent failures.

commit f1c398adb4396adcde58b8118fcdb9cb0699f8f6
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 14:19:06 2015 -0500

    invert check in GetLogInstanceForLevel()

commit 8ed7d7664bbd64490f591339648261b642d6372e
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 14:07:24 2015 -0500

    The second step towards merging the timer changes.
    
    This patch does two things:
    
    1. It overhalls the static initialization in Walltime to be simplier. It uses
       a static variable inside WallTime::Now() to initialize the timer.
    
    2. Add a logging mechanism so that the -v flag actually has meaning and
       reimplement the CHECK macros to allow extra messages to be streamed in.

commit b1f34d38800a21136aa2d7a5d5604d66d96e7823
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 13:20:47 2015 -0500

    address comments

commit 5b41e128b359900264464c480dfd4f107625f3c9
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 12:35:00 2015 -0500

    Step one towards merging timer changes.
    
    This patch cleans up our use of generic macros and also merges changes in the
    build system.
    
    It adds options -DBENCHMARK_ENABLE_TESTING and -DBENCHMARK_ENABLE_SHARED.

commit c5a362b4d3d7f73c643ef485105e6e3d274da78a
Author: Eric Fiselier <eric@efcs.ca>
Date:   Fri Mar 6 12:05:19 2015 -0500

    Change std::regex detection test to detect bug in libstdc++.
    
    libstdc++'s std::regex has (or had) a bug in std::regex::operator=(...) that
    caused undefined behaviour. Clang will detect this and compile the function so
    that it crashes at runtime. This patch tried to detect that bug during
    configuration.

commit 056a008afa5eec012f9b8264b3d2facc96cafd9c
Merge: cff940a 5fe797b
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 2 20:29:21 2015 +0100

    Merge pull request #75 from google/outofsource
    
    Add _build to gitignore to enable out-of-source builds

commit cff940a727820ba33215bb3b0a4c0d028f9c53af
Merge: 5e77de6 8e3e78f
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 2 20:10:20 2015 +0100

    Merge pull request #78 from pdavydov108/master
    
    Fix #77 build on freebsd 10

commit 5e77de62a196a447f689e79b8ed6270e5d3e6532
Merge: 1148861 2789aba
Author: Eric <eric@efcs.ca>
Date:   Mon Mar 2 17:47:02 2015 +0100

    Merge pull request #76 from google/64-32
    
    One more 64-bit to 32-bit conversion

commit 8e3e78fc3dcae25f54dffb1cccb34c0415cee36b
Author: Pavel Davydov <pdavydov108@gmail.com>
Date:   Wed Feb 25 10:41:26 2015 +0300

    Fix #77 add comment to headers in wrong order

commit 5fe797b6f9cf0059ab418f46ba634656a21acb28
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Wed Feb 18 22:15:05 2015 -0800

    Add top-level folders to gitignore to enable out-of-source builds

commit 26c01ee9ab6c0aea3ab4a671129fcdd33381229e
Author: Pavel Davydov <pdavydov108@gmail.com>
Date:   Sat Feb 21 17:21:19 2015 +0300

    Fix #77 add FreeBSD detection in cmake

commit c8d05fcc96663e8d5300505768234c3b87d96281
Author: Pavel Davydov <pdavydov108@gmail.com>
Date:   Sat Feb 21 17:05:13 2015 +0300

    Fix #77 build on FreeBSD 10

commit 114886100bf10606409e9a7df78554a33cac29ef
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Feb 19 16:38:30 2015 -0500

    Don't use c++14

commit 9a118340486362072d0f26f1bec9199b80397866
Author: Eric Fiselier <eric@efcs.ca>
Date:   Thu Feb 19 16:37:05 2015 -0500

    add includes for stdint.h

commit 2789aba1ce0cea9fa35a994e8ab36f9dd418b477
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Wed Feb 18 22:21:39 2015 -0800

    One more 64-bit to 32-bit conversion

commit 55285fd2aee692f07e2b618159d99e21af3a779a
Merge: fd7d288 3968ff4
Author: Eric <eric@efcs.ca>
Date:   Wed Feb 18 16:39:24 2015 -0500

    Merge pull request #73 from google/64.32
    
    Fix #72 by avoiding 64-to-32-bit shortenings

commit 3968ff45baf9ddc526ed68a3f6ee846dc0e1f332
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Wed Feb 18 10:07:45 2015 -0800

    Fix #72 by avoiding 64-to-32-bit shortenings

commit fd7d288bbebbc4ca1b7e139e72ce27e4ce6d9335
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Dec 26 08:44:14 2014 -0800

    Add section on linking to satisfy #67

commit b40b66ab3bfcafac4a289159a9135ea8ea2a6ef0
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Tue Dec 2 12:58:14 2014 -0800

    Actually fix issue with CHECK

commit d31977bb699389533d65f41ad69a0d8a5e7da137
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Tue Dec 2 12:51:46 2014 -0800

    Added gtest CHECK symbol to benchmark test

commit 2aa24420243e3e6e961f9c0fa4cddb5a612d9cec
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Dec 2 12:46:27 2014 -0800

    Remove drone.io reference

commit d58d59588fa35186e0f938ee2b0af538cd69ebe0
Merge: 4249753 1bc7378
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Nov 14 14:19:16 2014 -0800

    Merge pull request #66 from 3Hren/master
    
    Using Travis CI.

commit 1bc73789e438120c5e1d0d39d3bff9fb1f658243
Author: Evgeny Safronov <division494@gmail.com>
Date:   Fri Nov 14 23:39:38 2014 +0400

    Update AUTHORS and CONTRIBUTORS.

commit 4249753cd9dbe7436c309e27cf05f7675cbd9ab3
Merge: 7e290fb 0f78ceb
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Nov 14 09:56:50 2014 -0800

    Merge pull request #68 from eddyxu/debug_factorial
    
    Use #ifdef to protect calling Factorial in benchmark_test.cc

commit 6f692460e748be768bf72e1bd2e03e1dc251983a
Author: Evgeny Safronov <division494@gmail.com>
Date:   Fri Nov 14 11:11:45 2014 +0400

    Update readme.
    
    Added Travis build status badge.

commit 0f78cebba5640559694693386bc850df8a6d1d31
Author: Lei Xu <eddyxu@gmail.com>
Date:   Thu Nov 13 16:09:21 2014 -0800

    Use #ifdef to protect calling Factorial in benchmark_test.cc

commit 7e290fb96530bd14c4fb6f9f40eb692af5e2e21c
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Thu Nov 13 13:12:28 2014 -0800

    Fix release builds

commit 66f0b5d0ed0df295e2e52dcd4e4609a9f167ec79
Merge: 4932b72 a3b5e44
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Nov 13 13:11:11 2014 -0800

    Merge pull request #63 from google/62.CHECK
    
    Remove CHECK_* from public API.

commit 4932b72b03569f5f5c2adccfe8f893ee25a208f3
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Thu Nov 13 13:06:28 2014 -0800

    Fix example in README.md to compile.
    
    Fixes #65

commit 35c29c7d2f26c12e8a890f257c9baac89343657c
Author: Evgeny Safronov <division494@gmail.com>
Date:   Wed Nov 12 13:46:23 2014 +0400

    Added c++11 support for Travis.

commit e4d41f8a23b8ea082ded30e94d572e646aff8864
Author: Evgeny Safronov <division494@gmail.com>
Date:   Wed Nov 12 13:32:00 2014 +0400

    Using Travis as CI.

commit a3b5e44c529996a3663ddf48a40e33cd0fe3fdf2
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Fri Oct 31 21:54:55 2014 -0700

    Remove CHECK_* from public API.
    
    CHECK_* are now private and used internally in the library. The test
    uses have been replaced with asserts.
    
    Fixes #62.

commit d750144542de0f35321f066f03afc8d873122c6d
Merge: f9ef4f4 27aa01a
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Oct 31 21:39:28 2014 -0700

    Merge pull request #60 from everbase/master
    
    added googletest dependency to tests (allows compilation with -j)

commit 27aa01a3f9ddf21e34966a046767c3e8178ef2b3
Author: Niklas Hofmann <niklas.hofmann@everbase.net>
Date:   Sun Oct 26 03:23:15 2014 +0100

    remove -Wzero-as-null-pointer-constant flag for now

commit b04211cc881aebfcf9b071c4a21d0f9f058bc789
Merge: 3e9264d f9ef4f4
Author: Niklas Hofmann <niklas.hofmann@everbase.net>
Date:   Sat Oct 25 18:35:35 2014 +0200

    Merge branch 'master' of github.com:google/benchmark

commit f9ef4f4edffb9f48da5080e52f22f8df7b98984c
Merge: 8eac5dc 4a3348c
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Sat Oct 18 15:34:11 2014 -0700

    Merge pull request #59 from zjx20/instance_mutex
    
    Turn the global mutex into instance variables

commit 8eac5dc328b59bc261aac583c2264e270fa0e987
Merge: 5f31f0d e6107a7
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Sat Oct 18 15:33:40 2014 -0700

    Merge pull request #58 from google/zero_null
    
    Fix #50 by using nullptr and adding stricter warning.

commit 5f31f0dca295a6b5673c7530e1178c679893c21a
Merge: 06201b3 f98c576
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Sat Oct 18 15:33:07 2014 -0700

    Merge pull request #57 from google/flag_variants
    
    Fix #54 by correcting reference to CXX flags for variants.

commit 06201b342989214134362a74ec8b617d8da27c17
Merge: cfb34b5 a13627b
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Sat Oct 18 15:32:31 2014 -0700

    Merge pull request #56 from google/pthread_dependency
    
    Move pthread dependency to test CMakeLists.txt

commit 3e9264dcf10e9fcc1d9ff25924fc2ca45a41b71f
Author: Niklas Hofmann <niklas.hofmann@everbase.net>
Date:   Thu Oct 16 19:17:08 2014 +0200

    added googletest dependency to tests (allows compilation with -j)

commit 4a3348ce221eb5747b11d40afad1020eddd6c6fe
Author: x.zhou <x.zhou@didian.me>
Date:   Sun Oct 12 18:01:45 2014 +0800

    Turn the global mutex into instance variables
    
    To fix #52

commit e6107a781c35f5e0a366e526631ea8cef8f246c5
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Sat Oct 11 15:52:50 2014 -0700

    Fix #50 by using nullptr and adding stricter warning.

commit f98c5760fe86360c399d952e3710944a945f10e0
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Sat Oct 11 15:13:00 2014 -0700

    Fix #54 by correcting reference to CXX flags for variants.

commit a13627bc3af216a5ca82db40a6ada39a7afea630
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Sat Oct 11 14:57:45 2014 -0700

    Move pthread dependency to test CMakeLists.txt

commit 0fcd190cd68e9a2c7574e45f3a4cbba4807c1530
Author: zjx20 <zhoujianxiong2@gmail.com>
Date:   Sun Oct 5 16:13:35 2014 +0800

    Update CONTRIBUTORS

commit b6e597713293980189a083764f8a9b1bc6321add
Author: zjx20 <zhoujianxiong2@gmail.com>
Date:   Sun Oct 5 16:12:31 2014 +0800

    Update AUTHORS

commit cfb34b5957ebe1873ba58559a23002f9f4a7e521
Merge: d32c5c6 9593e64
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Fri Aug 22 11:31:03 2014 -0700

    Merge branch 'mattyclarkson-regex'

commit 9593e640763ad0cbd36d5c9104af5a389dd94cdb
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 22 14:36:19 2014 +0100

    Fixed the CMake add_cxx_compiler_flag function

commit 0fd0be9789aa7fe9b60b66926f731663355bc791
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Jul 31 15:44:26 2014 +0100

    Added more complicated regex test patterns

commit f043826542d6a35909825bc89892bc3a4b4edf3e
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Wed Jul 30 19:08:32 2014 +0100

    C++11 regular expressions

commit edfa60a1d12ab746e088c216fafbfc4d7a6c50e6
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Jul 31 15:20:20 2014 +0100

    Resolve regular expression engines

commit fac16a662efb4ded79f74c795d81bdd688cb49a7
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Jul 31 15:19:54 2014 +0100

    CMakeLists.txt comments

commit 1c82191d7a663c9fa9051fa575dda609b9637aac
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Jul 31 15:19:27 2014 +0100

    Consistent indentation in CMakeLists.txt

commit d32c5c64426d7ec1bd2773f6ba8b11a332245a9e
Merge: b1041fc 1176936
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Aug 19 21:17:20 2014 -0700

    Merge pull request #47 from mattyclarkson/benchmark_test
    
    Make sure all benchmark tests run

commit 11769369660577d67b70725c13a16b05f4d584b6
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 8 10:22:31 2014 +0100

    Check the number of benchmark tests ran
    
    Previously the benchmark_test program executed the benchmark tests to make sure
    the API was working but was not checking the number of tests that were
    completed. If the regular expression matching breaks, zero tests could be ran.
    Similarly, if one of the APIs breaks and doesn't run the correct amount of tests
    then `make test` will catch this.

commit 92ddf09f1d94d2412195dda1b77416ed68016672
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Wed Jul 30 19:06:57 2014 +0100

    Ignore the result of make test

commit 38c27c2cb3a5b0d391ace67e08e4e6609f0cf5bb
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 15 11:08:33 2014 +0100

    Do not use CMake CONCAT
    
    CONCAT was added quite late in the CMake release cycles so lets use `set()`
    instead which has been around _forever_...

commit b1041fc3d959dae2cdcb308ae559b47aa580d545
Merge: ed08661 6a66991
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Aug 8 16:38:05 2014 -0700

    Merge pull request #48 from mattyclarkson/gtest_verify
    
    Verify gtest with URL_MD5

commit 6a66991586bad15e36476dac4cf1fa10c890f074
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 8 13:46:04 2014 +0100

    Verify gtest with URL_MD5

commit ed08661efe8dad6282bf95d6d6a0a856ed46c5ac
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Thu Aug 7 10:28:55 2014 -0700

    Remove URL_HASH as it is unsupported

commit 0e494bcb3475f111fadd8ab9cb71743ae369990e
Merge: 373cc41 d2aa5c1
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Aug 7 10:20:46 2014 -0700

    Merge pull request #46 from mattyclarkson/gtest_verify
    
    Verify the download of gtest

commit d2aa5c1eb329626638b6fd743274b90ad571d43e
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Thu Aug 7 17:22:08 2014 +0100

    Verify the download of gtest

commit 373cc411004a4dfb5a5486dc869b835d029ad440
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Mon Aug 4 11:38:37 2014 +0100

    C++11 concurrency instead of pthread

commit 6b1a6958c4b4a7a2824b3cc0c125758e26bd380f
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 1 14:24:56 2014 +0100

    CMake function for adding compiler flags

commit 6945096ba16bfae115309e4318b077c9d9fc2f28
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 1 10:53:24 2014 +0100

    Add -Wshadow if supported

commit e863292dcc42dd704cd3553ae5e320f1d5c2d9ac
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 1 10:48:16 2014 +0100

    Detect compiler flags and append to default CMake flags

commit 4940eebf659a00c6b46aec0e02599839f4e1b2f5
Merge: 890908c c927845
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Fri Aug 1 21:10:48 2014 -0700

    Merge pull request #42 from mattyclarkson/versioning
    
    Implemented git versioning

commit c927845d5ad5344cb681598001d2234cefa61145
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Fri Aug 1 15:00:43 2014 +0100

    get_git_version CMake function

commit d591edf5139e0b160bfedc88c1e1632d21fc9f28
Author: Matt Clarkson <mattyclarkson@gmail.com>
Date:   Wed Jul 30 20:12:04 2014 +0100

    Implemented git versioning
    
    This patch automatically versions the shared libraries from any annotated `git`
    tags:
    
    ```
    git tag -a v1.0.0
    ```
    
    It expects semver version tags such as `v1.0.0`. It would be trivial to support
    `1.0.0` but looking around it seems that most C/C++ projects follow `vX.X.X`
    rather that `X.X.X` like a lot of `Node.js` stuff.
    
    This determines that the if the project has had a certain amount of commits
    since the last tag and also if the project is _dirty_ (has modified files), but
    does __nothing__ with that information. In the future a more robust release
    could be implemented in the script.
    
    This is pretty brittle and has little in the way of configuration. Ideally we
    should use `find_program` to work out where `git` is so that users can configure
    it. This implementation assumes that `git` will be available in `PATH`
    
    Outputs the following on the command line:
    
    ```
    -- git Version: v[MAJOR].[MINOR].[PATCH]-[COMMITS_SINCE_TAG]-[SHA1](-dirty)?
    -- Version: [MAJOR].[MINOR].[PATCH]
    ```

commit 890908c1976ec733125c28c70e1d1de5aa5a7447
Merge: 20ac20a 57fdf38
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Jul 30 10:15:55 2014 -0700

    Merge pull request #39 from mattyclarkson/fixes
    
    Allow shared libraries with BUILD_SHARED_LIBS

commit 57fdf38f7475cef9e3d55331fb05216ea7792196
Author: Matt Clarkson <matt.clarkson@vcatechnology.com>
Date:   Wed Jul 30 16:59:14 2014 +0100

    Allow shared libraries with BUILD_SHARED_LIBS

commit 4fae2944c7e99bdac33a833c2ff3aef8aba8d3de
Author: Matt Clarkson <matt.clarkson@vcatechnology.com>
Date:   Wed Jul 30 17:21:38 2014 +0100

    Added Matt Clarkson as a contributor

commit ace6464b289c8f30ce7cc45bdbbcc646dfc6dde7
Author: Matt Clarkson <matt.clarkson@vcatechnology.com>
Date:   Wed Jul 30 17:20:27 2014 +0100

    Made AUTHORS and CONTRIBUTES alphabetical

commit 20ac20ac77c52bbe5fb7cd3c5e5edf0d6a2269eb
Merge: 2d835a0 b306030
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Sun Jul 27 15:48:03 2014 -0700

    Merge branch 'eddyxu-mac'

commit b30603094a3245353a5d17bfb33e58807f2472b0
Merge: 2d835a0 3460bf1
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Sun Jul 27 15:47:25 2014 -0700

    Merge branch 'mac' of git://github.com/eddyxu/benchmark into eddyxu-mac

commit 2d835a0c820fc63cdc7ec145c38e072cb9c3078e
Merge: f1e1cca 0b19192
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Sun Jul 27 15:46:10 2014 -0700

    Merge pull request #38 from eddyxu/authors
    
    Add Lei Xu to AUTHORS and CONTRIBUTORS

commit 0b19192fb013daa07cb59387724612a73b4f35ef
Author: Lei Xu <lei@cloudera.com>
Date:   Fri Jul 25 08:15:46 2014 -0700

    Add Lei Xu to AUTHORS and CONTRIBUTORS

commit 3460bf1aa66d773b9bfb0a2a01f918977a506f43
Author: Lei Xu <lei@cloudera.com>
Date:   Thu Jul 24 23:57:09 2014 -0700

    Fixed compiling on Mac 10.9.3 with g++-4.8, clang or system c++

commit f1e1ccafcc6f4565f907cc5d0592b24fe0aae5b4
Merge: 58e52ba 0ce150e
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Jul 24 13:14:49 2014 -0700

    Merge pull request #34 from predmond/master
    
    fix examples to use SetBytesProcessed

commit 58e52ba38616c4ac92250a49642f3cd08196be9e
Author: Dominic Hamon <dma+github@stripysock.com>
Date:   Wed Jul 23 19:32:37 2014 -0700

    Ignore stanza for ninja users

commit 0ce150e1fcd58cbf48e8904f1ad6fa452bf566eb
Author: Paul Redmond <paul.redmond@gmail.com>
Date:   Wed Jul 23 13:36:58 2014 -0400

    fix examples to use SetBytesProcessed
    
    - use State::SetBytesProcessed not SetBenchmarkBytesProcessed

commit c7eb316e7ef74744e35694a2675e5a0955567333
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Wed Jul 23 17:18:40 2014 +0100

    Add @predmond to the AUTHORS and CONTRIBUTORS files.

commit 338eb89671953f6c4262b9036e3120b882a429e8
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Wed Jul 23 17:18:23 2014 +0100

    Ignore backup files.

commit 9f01575ffa6b885adb1f5ff9a85841b72bc2a53f
Merge: 6a6fc70 52b3004
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Jul 23 09:01:16 2014 -0700

    Merge pull request #33 from predmond/master
    
    fix building on ubuntu

commit 52b3004ae3bfcac51b1c669bcfe6f1be87ca5054
Author: Paul Redmond <paul.redmond@gmail.com>
Date:   Wed Jul 23 10:35:42 2014 -0400

    fix linker error by reordering link libraries

commit b33d1f1d3953160658627c1569c5dc9d414dca15
Author: Paul Redmond <paul.redmond@gmail.com>
Date:   Wed Jul 23 10:35:12 2014 -0400

    fix signed/unsigned comparison warning

commit 6a6fc70cf0c878828973a2f2af7cb2658a5a6948
Merge: 35da167 10dc155
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Jun 10 22:20:33 2014 -0700

    Merge pull request #31 from pleroy/DestructionPure
    
    Fix a bug in the destruction of BenchmarkFamilies.

commit 10dc1553720b957da73ca077b4d3a096621384ca
Author: pleroy <phl+personal@google.com>
Date:   Mon Jun 9 13:27:47 2014 +0200

    Fix a bug in the destruction of BenchmarkFamilies.

commit 35da167b9e5af0fcf82518e7ff8025c0b8fce030
Merge: 5c457b0 fe1b75b
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Jun 5 14:10:32 2014 -0700

    Merge pull request #28 from pleroy/PausePure
    
    Take the CPU time into account in PauseTiming/ResumeTiming

commit fe1b75b87e59e6a670d0b2b54db62e897b0bb93d
Merge: ec1e09f 5c457b0
Author: pleroy <phl+personal@google.com>
Date:   Thu Jun 5 23:02:22 2014 +0200

    Merge branch 'GoogleMaster' into PausePure
    
    Conflicts:
    	src/benchmark.cc

commit 5c457b06c8fdd4dd9620e3293ff9ef1822b5f6bb
Merge: 7c428e9 bcf0870
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Jun 4 14:48:23 2014 -0700

    Merge pull request #25 from pleroy/StatsPure
    
    Fix the stddev/mean computations

commit bcf08705f5bb3f928498975c0c04c2fae545c3b2
Author: pleroy <phl+personal@google.com>
Date:   Wed Jun 4 23:16:45 2014 +0200

    Comment.

commit 640dd5a492f41a94a45d0882192415a6c73f354c
Author: pleroy <phl+personal@google.com>
Date:   Wed Jun 4 23:12:46 2014 +0200

    Less of a hack: avoid the division/multiplication if the stddev is 0.

commit db4248e21e133481edba97a490647502461f436f
Merge: e189ec0 0d9a060
Author: pleroy <phl+personal@google.com>
Date:   Wed Jun 4 22:51:29 2014 +0200

    Merge branch 'TwoBugs' into StatsPure

commit e189ec02837852b64a7c5b6e505a624ac65c1ce6
Author: pleroy <phl+personal@google.com>
Date:   Wed Jun 4 21:54:45 2014 +0200

    Print mean/stddev of the # of iterations.

commit 7c428e91b76fb63f41cf399df63b5eca7635ecc2
Merge: 883413b 0d9a060
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Jun 4 12:55:59 2014 -0700

    Merge pull request #27 from pleroy/TwoBugs
    
    Two bug fixes in KeepRunning

commit 0d9a060f5b0d55d7fc37823c612883e465b00d46
Author: pleroy <phl+personal@google.com>
Date:   Wed Jun 4 21:21:24 2014 +0200

    Two bug fixes in KeepRunning.

commit 556002bec1d76bc2c3ea0c688dd0d7aa4caa1c78
Author: pleroy <phl+personal@google.com>
Date:   Thu May 29 17:32:04 2014 +0200

    Adding myself to the contributors

commit 883413be841394097dbeb61a49be3a79ed68638d
Merge: e5a4319 c96fb24
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Jun 4 09:52:14 2014 -0500

    Merge branch 'pphaneuf-gitignore'

commit c96fb246b91596b547566b38463eda24bb19a655
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Wed Jun 4 15:34:58 2014 +0100

    Add a few output files to .gitignore.

commit ffcdc94c7b796cf9f73bcbe351b72449dd69e2c4
Author: pleroy <phl+personal@google.com>
Date:   Thu May 29 17:32:04 2014 +0200

    Adding myself to the contributors

commit ec1e09f939ab3298abc47b7494c6b7fb10a1ae40
Author: pleroy <phl+personal@google.com>
Date:   Thu May 29 15:49:38 2014 +0200

    Ignore the CPU time consumed when timing is paused.
    
    Conflicts:
    	src/benchmark.cc

commit 291ff1faedc5b9865dd7e43eff673421ac2cac30
Author: pleroy <phl+personal@google.com>
Date:   Thu May 29 14:56:24 2014 +0200

    Fix the stddev/mean computations which had be garbled since commit e5f5a0d30e91d94b0563a0c92bbc2a71b4361daa, leading to a mean that was not in the min/max range and to zero-divide in the stddev computation, among others.

commit e5a431998dc1c815cdac29b63441177596e08f3d
Merge: 46507cb 2c9b29c
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 5 10:03:11 2014 -0700

    Merge pull request #23 from ckennelly/clock_initialization
    
    Resolve race on approx_time_ in FastClock.

commit 46507cb2762b34e07a37426343bdbce3a5b7a3ae
Merge: 276bda9 77106c1
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 5 10:02:50 2014 -0700

    Merge pull request #22 from ckennelly/mutex_initialization
    
    Statically initialize benchmark_mutex and extend its lifetime.

commit 276bda99acb53108cf2656a14d6e8fe6634b882d
Merge: efb9c30 54e18b8
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon May 5 10:02:33 2014 -0700

    Merge pull request #21 from ckennelly/issue20
    
    Resolve benchmark cleanup race condition in issue #20.

commit 2c9b29c9ff2e5e6b89438258eb77086a21a26d88
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Mon May 5 02:11:54 2014 -0400

    Resolve race on approx_time_ in FastClock.
    
    InitType should hold a lock before storing to approx_time_, which is later
    read by the background worker.  When the worker is actively running (i.e., not
    blocked on bg_cond_) it holds bg_mutex_.
    
    InitType is called during benchmark setup only, so any contention induced for
    the mutex should not have performance/accuracy consequences.

commit 77106c1f684aca7328bfa9da336f209f63290a6e
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Mon May 5 02:07:18 2014 -0400

    Statically initialize benchmark_mutex and extend its lifetime.
    
    RunSpecifiedBenchmarks destroys benchmark_mutex before its last usage,
    typically in RemoveBenchmark during cleanup of the BenchmarkFamilies singleton.

commit 54e18b8992661376f24075a843f316e361df06f2
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Mon May 5 01:50:45 2014 -0400

    Resolve benchmark cleanup race condition in issue #20.
    
    The multithreaded API for benchmarks provides that teardown can happen in
    thread 0.  For this to be safe, all other threads executing the benchmark
    function need to have exited.  Otherwise, thread 0 may begin to teardown shared
    resources before the other threads have stopped using these resources as they
    are in their last loop of while (KeepRunning()) { ... }.
    
    This change creates a single exit point for KeepRunning() to return false.
    When running a multithreaded benchmark, thread 0 blocks on KeepRunning() until
    all other threads have exited.  This approach allows for there to be no change
    to the user-facing API exemplified in the BM_MultiThreaded example.

commit efb9c302cc0d6e311546888799487ef6a636f19c
Merge: 8b34026 92cd2e8
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Apr 23 14:32:21 2014 -0700

    Merge pull request #19 from ckennelly/googletest
    
    Remove URL_HASH and TLS_VERIFY from CMake configuration.

commit 92cd2e82af8563b828f331a1b1af7b2eab901de3
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Apr 23 14:23:20 2014 -0700

    Remove URL_HASH and TLS_VERIFY from CMake configuration.
    
    Per the CMake 2.8.0 documentation, these options did not exist for
    ExternalProject_Add.  These options were added in CMake 2.8.10.

commit 8b34026908326e5243f0b948ebde1702b0943e3b
Merge: 98e7f89 9f27edb
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Apr 23 13:46:44 2014 -0700

    Merge pull request #18 from ckennelly/googletest
    
    Resolve Memory Leaks #17

commit 9f27edbb1650c297f511c4b52e563ee3f0619348
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Apr 23 01:17:47 2014 -0700

    Resolve memory leak from benchmark instances in google/benchmark#17.
    
    This shifts registration from a global vector to a singleton that manages
    benchmark destruction during shutdown.

commit fa908926c7ab9270037e2ab71036f8f6f87e9850
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Apr 23 00:56:17 2014 -0700

    Partially resolve google/benchmark#17 by fixing regular expression leak.
    
    This adds a unit test to validate the wrapper without running the entirety of
    benchmark_test.

commit 6087edda9dbf6fcd91e319d3167a0f7a3f96dcc8
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Apr 23 00:48:52 2014 -0700

    Add ExternalProject reference to Google Test 1.7.0.

commit e38fde6450f5b102a9f3d3842a9286de4b678a5e
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Wed Apr 23 00:47:07 2014 -0700

    Setup targets from each directory, rather than the top-level.

commit 9b5ece6ece56d2c8115dd3c8b8ad63b1d1752601
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Tue Apr 22 20:07:57 2014 -0700

    Include stddef.h for size_t.

commit 193e4eb9a14fecddfea206e6983eaa7d1e6b061b
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Tue Apr 22 20:07:37 2014 -0700

    Add Chris Kennelly to the contributors list.

commit 98e7f89d72e538a62c45de02deb3aa39bbac73cf
Merge: 54cd4fd e474629
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Apr 17 14:38:56 2014 -0700

    Merge pull request #16 from chenshuo/master
    
    Use a new container in each round of push_back test.

commit e474629b6ae342d4575ac5fff646c6cdbfd8987f
Author: Shuo Chen <chenshuo@chenshuo.com>
Date:   Thu Apr 17 13:56:05 2014 -0700

    Add Shuo Chen to AUTHORS

commit 92b6f020ea1257486c78380880c48a2a0b4dedc7
Author: Shuo Chen <chenshuo@chenshuo.com>
Date:   Thu Apr 17 13:55:35 2014 -0700

    Add Shuo Chen to CONTRIBUTORS.

commit 664159372cea8ce58f548172025d680c653fa68e
Author: Shuo Chen <chenshuo@chenshuo.com>
Date:   Thu Apr 17 10:04:02 2014 -0700

    Use a new container in each round of push_back test.
    
    Otherwise containers keep growing and uses gigabytes of memory.

commit 54cd4fd848084de53654bc384a6c4cb10e6f6705
Merge: ef1ccf4 92cb4ec
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Mon Apr 7 18:57:31 2014 -0700

    Merge pull request #15 from Nukesor/patch-1
    
    Unable to compile because of unused parameter

commit 92cb4ec50c039eeb37ae281ba911ef81e34afd77
Author: Arne Beer <arne@twobeer.de>
Date:   Mon Apr 7 22:19:53 2014 +0200

    Update AUTHORS

commit feea2f022f532c68cca55d4b0b43b2b3b58b7961
Author: Arne Beer <arne@twobeer.de>
Date:   Sun Apr 6 22:03:51 2014 +0200

    Compile warning removed, adding myself to contributors

commit 50f459d2c0110b5ea752455a2094fc83abe83ff5
Author: Arne Beer <arne@twobeer.de>
Date:   Sun Apr 6 16:42:24 2014 +0200

    Unable to compile because of unused parameter
    
    There is a unused parameter at benchmark:866 Benchmark::MeasurePeakHeapMemory .
    The function is marked as TODO and the code that uses the parameter is commented out.
    I just removed the parameter so it can compile again without editing the CMake compile flags.

commit ef1ccf4dea4d42486ad045677070d04c7887cc67
Merge: f835dfa 44b64c9
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Mar 20 09:54:14 2014 -0700

    Merge pull request #12 from showlabor/master
    
    Fix cycleclock.h for gcc/ARM.

commit 44b64c9370c823887f03f9fb35d3e25f434e8c06
Author: Felix Homann <linuxaudio@showlabor.de>
Date:   Wed Mar 19 08:58:21 2014 +0100

    Added AUTHOR/CONTRIBUTOR information.

commit a7c57939c813699811b0bc27f433ee5aaa98a82e
Author: Felix Homann <linuxaudio@showlabor.de>
Date:   Tue Mar 18 17:04:40 2014 +0100

    Fix cycleclock.h for gcc/ARM.
    
    Currently there are tests for ARMV3 and ARMV6 in cycleclock.h which are not
    defined using gcc on ARM. Since there is also a cast to the unknown type
    int64 I assume that the ARM code has not been tested. Therefore this patch
    replaces the checks for ARMV3 and ARMV6 by checks for __ARM_ARCH. Also, the
    cast to int64 is fixed by casting to int64_t.

commit f835dfa807c6b07e830c337155c782beb3cbb788
Merge: 254a6f9 45b79c3
Author: Chris Kennelly <ckennelly@ckennelly.com>
Date:   Sun Feb 23 10:55:39 2014 -0800

    Merge pull request #10 from Constellation/fix-segv
    
    Ensure families is not nullptr before using it

commit 45b79c3e0119aa727ef14234413967f66b3eb496
Author: Yusuke Suzuki <utatane.tea@gmail.com>
Date:   Sun Feb 23 20:10:50 2014 +0900

    Check families is not nullptr before using it
    
    When there's no benchmarks, families becomes nullptr. So before touching
    it, we need to ensure families is not nullptr.

commit 254a6f9a785d8c524ab6933fbfccc7cda7c50e79
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Thu Feb 13 16:18:56 2014 -0500

    Christopher Seymour has signed the CLA.

commit 6ec70d0f2b35eca2e7ea3214411eda49e10f4daa
Author: Pierre Phaneuf <pphaneuf@gmail.com>
Date:   Wed Feb 12 18:51:08 2014 -0500

    Add information about CLAs.

commit dbb0beff57cb6c5e28f3b0419b9d97ddde46dd69
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Feb 11 22:17:58 2014 -0800

    Update CONTRIBUTORS

commit 60869aa2157366def80142710edc350b04118a21
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Feb 11 22:17:36 2014 -0800

    Update AUTHORS

commit f2d1957d2349d69f4272cbb39b47b93a88b17681
Merge: 6200a22 465cb09
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Feb 11 22:15:22 2014 -0800

    Merge pull request #9 from iiSeymour/patch-1
    
    Update README.md

commit 6200a22998ba1d2d852fa009364efe9db5e5bce3
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Mon Feb 10 18:32:08 2014 -0500

    Add AUTHORS and CONTRIBUTORS files.

commit 99459023d9c45d514ba84c899f0bc98bd83d6df1
Author: Pierre Phaneuf <pphaneuf@gmail.com>
Date:   Mon Feb 10 17:37:54 2014 -0500

    Create CONTRIBUTING.md
    
    Inspired from the one from https://github.com/google/go-github.

commit 465cb09eb65b6f03b1286e37cdb9e702766cdd35
Author: Chris Seymour <chris.j.seymour@hotmail.com>
Date:   Sun Feb 9 19:45:17 2014 +0000

    Update README.md
    
    Switched to language specific markdown for code sections to provide syntax highlighting when rendered.

commit 0a1593b06f4c79edcd4cd150dc37c8a0446e2e4a
Merge: be84ed0 22f436e
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Feb 6 11:10:57 2014 -0800

    Merge pull request #8 from dcoeurjo/cmakeFix
    
    Cmake edit with 'make install' target

commit 22f436ea84f93d3bc6b59e3b7402dff1c7af7db1
Author: David Coeurjolly <david.coeurjolly@liris.cnrs.fr>
Date:   Wed Feb 5 21:07:40 2014 +0100

    Missing includes in install target

commit cbcf159bf2975302e2af6ccda4ca32a0d776e26d
Author: David Coeurjolly <david.coeurjolly@liris.cnrs.fr>
Date:   Wed Feb 5 20:46:54 2014 +0100

    Thread is required

commit 25074512ff9f683c6a228aa979d0ccd207b8d1a9
Author: David Coeurjolly <david.coeurjolly@liris.cnrs.fr>
Date:   Wed Feb 5 20:38:57 2014 +0100

    Cmake edit with 'make install' target

commit be84ed037323d5d7fe1a4d22975b615b9414f93f
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 21 19:27:04 2014 -0800

    Remove old NOTEs

commit 772ff6f1f1d8d98f33666179b074f5539ab873b9
Author: Eugene Zhuk <eugene.zhuk@gmail.com>
Date:   Mon Jan 20 23:18:25 2014 -0800

    [#4] Cleaned up FastClock background thread.

commit ceea4cb380890872362e19d3a2a5ae908fe30146
Author: Eugene Zhuk <eugene.zhuk@gmail.com>
Date:   Mon Jan 20 22:32:16 2014 -0800

    [#4] A few minor changes.

commit 4ed4ff9574fb0af6c70e8f7098da8d7eaa5fd7d0
Author: Eugene Zhuk <eugene.zhuk@gmail.com>
Date:   Sat Jan 18 00:50:45 2014 -0800

    Fix shutting down FastClock's thread on OSX.

commit d184b2be2bebce040b4a937269fad201b76fe638
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 16 13:20:59 2014 -0800

    Move linux-only variable into linux/cygwin block

commit e2633b9bd75bc69b964c748250fffb28d7ce051d
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 16 09:13:18 2014 -0800

    sysinfo conditional compilation fixes for OSX

commit 076f0df7fc4572982a3983c5dfd289d844a2fa0e
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 16 09:12:59 2014 -0800

    Better include path for YCM users

commit d098d4c12e8dcabce8ce6cb5a71caf41c9147ce0
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 15 16:11:09 2014 -0800

    For those using YCM

commit c44662e7e927ba044ab76d6e3ba3eda50d8e84b8
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 15 16:09:18 2014 -0800

    Missing headers for sysctl stuff on OSX

commit 6df14aeed0ea0b9aee675ad522aaa990b43239df
Merge: 7b0fa3e a278152
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Wed Jan 15 15:02:01 2014 -0800

    Merge pull request #3 from sochka/patch-1
    
    Fix int64_t_t typo in README code example

commit a2781521171e553c6f72c4bb7f628f5d62cf2e7d
Author: Oleksandr <sasha.sochka@gmail.com>
Date:   Wed Jan 15 23:01:47 2014 +0200

    Fix int64_t_t typo in README code example
    
    Fixes a typo where the first type was written as int64_t_t with suffixing _t twice and the second type misses suffix at all.

commit 7b0fa3e1fa7d2f0ec3537c4e51ec1eca6b3ff16c
Merge: 4e21f5e 77cd980
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 15 12:14:05 2014 -0800

    Merge branch 'master' of https://github.com/google/benchmark

commit 4e21f5e18052a46f068e36cb0e5e66bf9bae260e
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 15 12:13:46 2014 -0800

    Add explicit pthread.h include

commit 77cd9803ce6bcf1b1e2167e7c115cbaad01af8bb
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Jan 10 15:07:04 2014 -0800

    add pedantic errors and fix them

commit 5a71bd6e6656bb1610da794489e65ac7d0b13bc6
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 9 12:19:02 2014 -0800

    More formatting tweaks

commit 78fa0b93ab1599f92a0c435a0f50abff74d23723
Merge: 4ce184d 96446f2
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 9 12:16:51 2014 -0800

    Merged with upstream

commit 4ce184d86ddefe6170914a4813940dbcbe645207
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 9 12:12:11 2014 -0800

    Code reformat

commit 80093519382ae748d682e3914ef4ccf07da6ce35
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 9 11:53:14 2014 -0800

    Minimum iteration and overhead support.
    
    Ensure we run at least 1 iteration.
    Take into account overhead of an empty benchmark.
    Minor cleanup of code.

commit 96446f2f5a342b2f6a86984d7c8c7c1829ad3ad0
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Thu Jan 9 10:48:18 2014 -0800

    Add discussion group to README.md

commit 3fb8268eab1a0f116f5e690e13d1234265998f2c
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Jan 9 08:01:34 2014 -0800

    Add LICENSE and copyright headers

commit 577f7410d19e3bf89ed7bba57f7a44a50a05668f
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 8 09:11:50 2014 -0800

    Explicitly remove unsupported memory usage support

commit dc5b533adbfd7202c3d6b8801c8119103ad1e994
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Jan 8 09:11:07 2014 -0800

    Remove tunable estimate for cycles per second

commit 9d230ffb47165ed1141db547c6985abba7ac46a7
Merge: dd27ca3 373a7dd
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 17:06:42 2014 -0800

    Merge branch 'master' of https://github.com/google/benchmark

commit 373a7ddf90f2a85d6441ecc42f0e64142adc3319
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Jan 7 17:04:19 2014 -0800

    Add drone.io build badge to README.md

commit dd27ca30e68ad7c95c3a412e3f18cddc7a319473
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 17:02:54 2014 -0800

    ignore tags file

commit acc65f48d3a0ff44655c05d359950ec882c73c96
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 16:33:40 2014 -0800

    Allow custom reporters

commit 2ff306af30a4ffbca648b7a3f6eca7e943e36073
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 14:33:59 2014 -0800

    Fix right-alignment of items/s

commit 3a01f8320ba44dcfaff5fbff923cde2cf7d4e7f7
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 14:31:14 2014 -0800

    Add items/bytes processed to SetInsert benchmark test

commit 2d557f1c75fc49a0060c1ec65b9a986ac26f84de
Author: Dominic Hamon <dominichamon@users.noreply.github.com>
Date:   Tue Jan 7 13:48:27 2014 -0800

    Add Threads registration example to README.md

commit fc52b862706416e237e861a6af80d263e9dc385c
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 13:45:50 2014 -0800

    Remove dead code, tidy output

commit e5f5a0d30e91d94b0563a0c92bbc2a71b4361daa
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 13:33:45 2014 -0800

    Report mean/stddev times as mean/stddev

commit 2923a481edb5399926c957b0d2433433c21ee071
Author: Dominic Hamon <dominic+github@google.com>
Date:   Tue Jan 7 13:14:41 2014 -0800

    Multithreaded tests are reenabled

commit 15bf66750cb068eb6ca51baaef14e339f7a11e87
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 15:10:46 2013 -0800

    Really drop multithreading support

commit 06c1fdbdb3c74c85580153162272fcab4175aed2
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 15:05:16 2013 -0800

    Update documentation and remove 'Threads' until threadedness works

commit 80162cab323745870cb4c4d2f484eb0d767f7b8e
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 14:53:25 2013 -0800

    Update README.md

commit 01af2bc857f6824594b4a4af2f957fcdfe06e2dc
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 14:51:56 2013 -0800

    Create README.md

commit d44b01a9ccee15d47b43f948ffee1f47385eda1a
Merge: d4ed240 902fb91
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 14:39:09 2013 -0800

    Merging in work from branch

commit 902fb9122625eb30a02be4ce078a00c70603b44e
Author: Dominic Hamon <dominic+github@google.com>
Date:   Fri Dec 20 14:38:15 2013 -0800

    benchmark_repetitions now work

commit 3a6f24c67be2d76533a541e22e542295aa16a9da
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 17:21:34 2013 -0800

    benchmark_iterations works as expected

commit b3f0d71e508828bb4add65a7574c52fef1949998
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 17:16:40 2013 -0800

    benchmark_min_time now works as expected

commit d4ed240426f95fe6d79b18f82efbb40a62492af3
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 17:04:54 2013 -0800

    Added some missing atomics in FastClock

commit a94b0a67414991936ef8871fe0b8bf8541107989
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 16:45:53 2013 -0800

    Remove duplicated macros header

commit 9a25f47250e51df6b4f3fe6579ff547b6daa9284
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 16:23:25 2013 -0800

    Fix printing of time

commit e390e4ebc3c728e69d335a33c0cb00547dcd0dde
Author: Dominic Hamon <dominic+github@google.com>
Date:   Thu Dec 19 16:18:09 2013 -0800

    Adding benchmark namespace and removing broken flags

commit 403f35442375f2ee858981b79421ca321645df08
Author: Dominic Hamon <dominic+github@google.com>
Date:   Wed Dec 18 16:55:45 2013 -0800

    Initial commit
    
    Benchmark library builds and runs but only single-threaded. Multithreaded
    support needs a bit more love.
    
    Currently requires some C++11 support (g++ 4.6.3 seems to work).
